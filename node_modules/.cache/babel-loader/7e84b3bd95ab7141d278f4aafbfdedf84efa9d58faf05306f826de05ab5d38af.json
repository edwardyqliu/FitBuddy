{"ast":null,"code":"'use client';\n\n// src/use-event-listener-map.ts\nimport { getPointerEventName, wrapPointerEventHandler } from \"@chakra-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nfunction useEventListenerMap() {\n  var listeners = useRef( /* @__PURE__ */new Map());\n  var currentListeners = listeners.current;\n  var add = useCallback(function (el, type, listener, options) {\n    var pointerEventListener = wrapPointerEventHandler(listener, type === \"pointerdown\");\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el: el,\n      options: options\n    });\n    el.addEventListener(type, pointerEventListener, options);\n  }, []);\n  var remove = useCallback(function (el, type, listener, options) {\n    var _listeners$current$ge = listeners.current.get(listener),\n      pointerEventListener = _listeners$current$ge.__listener;\n    el.removeEventListener(type, pointerEventListener, options);\n    listeners.current.delete(pointerEventListener);\n  }, []);\n  useEffect(function () {\n    return function () {\n      currentListeners.forEach(function (value, key) {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove, currentListeners]);\n  return {\n    add: add,\n    remove: remove\n  };\n}\nexport { useEventListenerMap };","map":{"version":3,"names":["getPointerEventName","wrapPointerEventHandler","useCallback","useEffect","useRef","useEventListenerMap","listeners","Map","currentListeners","current","add","el","type","listener","options","pointerEventListener","set","__listener","addEventListener","remove","_listeners$current$ge","get","removeEventListener","delete","forEach","value","key"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/hooks/src/use-event-listener-map.ts"],"sourcesContent":["import {\n  PointerEventInfo,\n  getPointerEventName,\n  wrapPointerEventHandler,\n  EventListenerWithPointInfo,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\ninterface EventListeners {\n  add<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  add(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  remove<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  remove(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n\nexport function useEventListenerMap(): EventListeners {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback((el: any, type: any, listener: any, options: any) => {\n    const pointerEventListener = wrapPointerEventHandler(\n      listener,\n      type === \"pointerdown\",\n    )\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el,\n      options,\n    })\n    el.addEventListener(type, pointerEventListener, options)\n  }, [])\n\n  const remove = useCallback(\n    (el: any, type: any, listener: any, options: any) => {\n      const { __listener: pointerEventListener } =\n        listeners.current.get(listener)\n      el.removeEventListener(type, pointerEventListener, options)\n      listeners.current.delete(pointerEventListener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options)\n      })\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n"],"mappings":";;;AAAA,SAEEA,mBAAA,EACAC,uBAAA,QAEK;AACP,SAASC,WAAA,EAAaC,SAAA,EAAWC,MAAA,QAAc;AA6BxC,SAASC,oBAAA,EAAsC;EACpD,IAAMC,SAAA,GAAYF,MAAA,EAAO,mBAAIG,GAAA,CAAI,CAAC;EAClC,IAAMC,gBAAA,GAAmBF,SAAA,CAAUG,OAAA;EAEnC,IAAMC,GAAA,GAAMR,WAAA,CAAY,UAACS,EAAA,EAASC,IAAA,EAAWC,QAAA,EAAeC,OAAA,EAAiB;IAC3E,IAAMC,oBAAA,GAAuBd,uBAAA,CAC3BY,QAAA,EACAD,IAAA,KAAS,aACX;IACAN,SAAA,CAAUG,OAAA,CAAQO,GAAA,CAAIH,QAAA,EAAU;MAC9BI,UAAA,EAAYF,oBAAA;MACZH,IAAA,EAAMZ,mBAAA,CAAoBY,IAAI;MAC9BD,EAAA,EAAAA,EAAA;MACAG,OAAA,EAAAA;IACF,CAAC;IACDH,EAAA,CAAGO,gBAAA,CAAiBN,IAAA,EAAMG,oBAAA,EAAsBD,OAAO;EACzD,GAAG,EAAE;EAEL,IAAMK,MAAA,GAASjB,WAAA,CACb,UAACS,EAAA,EAASC,IAAA,EAAWC,QAAA,EAAeC,OAAA,EAAiB;IACnD,IAAAM,qBAAA,GACEd,SAAA,CAAUG,OAAA,CAAQY,GAAA,CAAIR,QAAQ;MADZE,oBAAA,GAAAK,qBAAA,CAAZH,UAAA;IAERN,EAAA,CAAGW,mBAAA,CAAoBV,IAAA,EAAMG,oBAAA,EAAsBD,OAAO;IAC1DR,SAAA,CAAUG,OAAA,CAAQc,MAAA,CAAOR,oBAAoB;EAC/C,GACA,EACF;EAEAZ,SAAA,CACE;IAAA,OAAM,YAAM;MACVK,gBAAA,CAAiBgB,OAAA,CAAQ,UAACC,KAAA,EAAOC,GAAA,EAAQ;QACvCP,MAAA,CAAOM,KAAA,CAAMd,EAAA,EAAIc,KAAA,CAAMb,IAAA,EAAMc,GAAA,EAAKD,KAAA,CAAMX,OAAO;MACjD,CAAC;IACH;EAAA,GACA,CAACK,MAAA,EAAQX,gBAAgB,CAC3B;EAEA,OAAO;IAAEE,GAAA,EAAAA,GAAA;IAAKS,MAAA,EAAAA;EAAO;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}