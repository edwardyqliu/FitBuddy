{"ast":null,"code":"'use client';\n\nimport { usePointerEvent } from \"./chunk-ZCYNKCF5.mjs\";\nimport { useUnmountEffect } from \"./chunk-NGVRPZ6W.mjs\";\n\n// src/use-pan-gesture.ts\nimport { noop, PanSession } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nfunction usePanGesture(ref, props) {\n  var onPan = props.onPan,\n    onPanStart = props.onPanStart,\n    onPanEnd = props.onPanEnd,\n    onPanSessionStart = props.onPanSessionStart,\n    onPanSessionEnd = props.onPanSessionEnd,\n    threshold = props.threshold;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = useRef(null);\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  useEffect(function () {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlers);\n  });\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, threshold);\n  }\n  usePointerEvent(function () {\n    return ref.current;\n  }, \"pointerdown\", hasPanEvents ? onPointerDown : noop);\n  useUnmountEffect(function () {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.end();\n    panSession.current = null;\n  });\n}\nexport { usePanGesture };","map":{"version":3,"names":["noop","PanSession","useEffect","useRef","usePanGesture","ref","props","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","threshold","hasPanEvents","Boolean","panSession","handlers","onSessionStart","onSessionEnd","onStart","onMove","onEnd","event","info","current","_a","updateHandlers","onPointerDown","usePointerEvent","useUnmountEffect","end"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/hooks/src/use-pan-gesture.ts"],"sourcesContent":["import {\n  AnyPointerEvent,\n  noop,\n  PanEventHandler,\n  PanSession,\n  PanSessionHandlers,\n} from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport interface UsePanGestureProps {\n  onPan?: PanEventHandler\n  onPanStart?: PanEventHandler\n  onPanEnd?: PanEventHandler\n  onPanSessionStart?: PanEventHandler\n  onPanSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport function usePanGesture(\n  ref: React.RefObject<HTMLElement>,\n  props: UsePanGestureProps,\n) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold,\n  } = props\n\n  const hasPanEvents = Boolean(\n    onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd,\n  )\n\n  const panSession = useRef<PanSession | null>(null)\n\n  const handlers: Partial<PanSessionHandlers> = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null\n      onPanEnd?.(event, info)\n    },\n  }\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlers)\n  })\n\n  function onPointerDown(event: AnyPointerEvent) {\n    panSession.current = new PanSession(event, handlers, threshold)\n  }\n\n  usePointerEvent(\n    () => ref.current,\n    \"pointerdown\",\n    hasPanEvents ? onPointerDown : noop,\n  )\n\n  useUnmountEffect(() => {\n    panSession.current?.end()\n    panSession.current = null\n  })\n}\n"],"mappings":";;;;;;AAAA,SAEEA,IAAA,EAEAC,UAAA,QAEK;AACP,SAASC,SAAA,EAAWC,MAAA,QAAc;AAa3B,SAASC,cACdC,GAAA,EACAC,KAAA,EACA;EACA,IACEC,KAAA,GAMED,KAAA,CANFC,KAAA;IACAC,UAAA,GAKEF,KAAA,CALFE,UAAA;IACAC,QAAA,GAIEH,KAAA,CAJFG,QAAA;IACAC,iBAAA,GAGEJ,KAAA,CAHFI,iBAAA;IACAC,eAAA,GAEEL,KAAA,CAFFK,eAAA;IACAC,SAAA,GACEN,KAAA,CADFM,SAAA;EAGF,IAAMC,YAAA,GAAeC,OAAA,CACnBP,KAAA,IAASC,UAAA,IAAcC,QAAA,IAAYC,iBAAA,IAAqBC,eAC1D;EAEA,IAAMI,UAAA,GAAaZ,MAAA,CAA0B,IAAI;EAEjD,IAAMa,QAAA,GAAwC;IAC5CC,cAAA,EAAgBP,iBAAA;IAChBQ,YAAA,EAAcP,eAAA;IACdQ,OAAA,EAASX,UAAA;IACTY,MAAA,EAAQb,KAAA;IACRc,KAAA,WAAAA,MAAMC,KAAA,EAAOC,IAAA,EAAM;MACjBR,UAAA,CAAWS,OAAA,GAAU;MACrBf,QAAA,oBAAAA,QAAA,CAAWa,KAAA,EAAOC,IAAA;IACpB;EACF;EAEArB,SAAA,CAAU,YAAM;IAlDlB,IAAAuB,EAAA;IAmDI,CAAAA,EAAA,GAAAV,UAAA,CAAWS,OAAA,KAAX,gBAAAC,EAAA,CAAoBC,cAAA,CAAeV,QAAA;EACrC,CAAC;EAED,SAASW,cAAcL,KAAA,EAAwB;IAC7CP,UAAA,CAAWS,OAAA,GAAU,IAAIvB,UAAA,CAAWqB,KAAA,EAAON,QAAA,EAAUJ,SAAS;EAChE;EAEAgB,eAAA,CACE;IAAA,OAAMvB,GAAA,CAAImB,OAAA;EAAA,GACV,eACAX,YAAA,GAAec,aAAA,GAAgB3B,IACjC;EAEA6B,gBAAA,CAAiB,YAAM;IAhEzB,IAAAJ,EAAA;IAiEI,CAAAA,EAAA,GAAAV,UAAA,CAAWS,OAAA,KAAX,gBAAAC,EAAA,CAAoBK,GAAA;IACpBf,UAAA,CAAWS,OAAA,GAAU;EACvB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}