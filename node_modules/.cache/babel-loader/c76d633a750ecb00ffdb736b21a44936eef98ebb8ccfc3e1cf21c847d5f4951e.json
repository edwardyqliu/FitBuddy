{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"children\", \"containerProps\", \"motionProps\"];\nimport { ModalTransition } from \"./chunk-7NUJBCEL.mjs\";\nimport { ModalFocusScope } from \"./chunk-NABYTFTG.mjs\";\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-content.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalContent = forwardRef(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    rootProps = props.containerProps,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    getDialogProps = _useModalContext.getDialogProps,\n    getDialogContainerProps = _useModalContext.getDialogContainerProps;\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n  var _className = cx(\"chakra-modal__content\", className);\n  var styles = useModalStyles();\n  var dialogStyles = _objectSpread({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n  var dialogContainerStyles = _objectSpread({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n  var _useModalContext2 = useModalContext(),\n    motionPreset = _useModalContext2.motionPreset;\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, containerProps), {}, {\n      className: \"chakra-modal__content-container\",\n      tabIndex: -1,\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(ModalTransition, _objectSpread(_objectSpread({\n        preset: motionPreset,\n        motionProps: motionProps,\n        className: _className\n      }, dialogProps), {}, {\n        __css: dialogStyles,\n        children: children\n      }))\n    }))\n  });\n});\nModalContent.displayName = \"ModalContent\";\nexport { ModalContent };","map":{"version":3,"names":["cx","chakra","forwardRef","jsx","ModalContent","props","ref","className","children","rootProps","containerProps","motionProps","rest","_objectWithoutProperties","_excluded","_useModalContext","useModalContext","getDialogProps","getDialogContainerProps","dialogProps","_className","styles","useModalStyles","dialogStyles","_objectSpread","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","_useModalContext2","motionPreset","ModalFocusScope","div","tabIndex","__css","ModalTransition","preset","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/modal/src/modal-content.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  chakra,\n  SystemStyleObject,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { HTMLMotionProps } from \"framer-motion\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\nimport { ModalFocusScope } from \"./modal-focus\"\nimport { ModalTransition } from \"./modal-transition\"\n\nexport interface ModalContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n  /**\n   * The custom framer-motion transition to use for the modal\n   */\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const ModalContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      containerProps: rootProps,\n      motionProps,\n      ...rest\n    } = props\n\n    const { getDialogProps, getDialogContainerProps } = useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useModalStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { motionPreset } = useModalContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          tabIndex={-1}\n          __css={dialogContainerStyles}\n        >\n          <ModalTransition\n            preset={motionPreset}\n            motionProps={motionProps}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </ModalTransition>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nModalContent.displayName = \"ModalContent\"\n"],"mappings":";;;;;;;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAEEC,MAAA,EAEAC,UAAA,QACK;AAsEG,SAAAC,GAAA;AAhDH,IAAMC,YAAA,GAAeF,UAAA,CAC1B,UAACG,KAAA,EAAOC,GAAA,EAAQ;EACd,IACEC,SAAA,GAKEF,KAAA,CALFE,SAAA;IACAC,QAAA,GAIEH,KAAA,CAJFG,QAAA;IACgBC,SAAA,GAGdJ,KAAA,CAHFK,cAAA;IACAC,WAAA,GAEEN,KAAA,CAFFM,WAAA;IACGC,IAAA,GAAAC,wBAAA,CACDR,KAAA,EAAAS,SAAA;EAEJ,IAAAC,gBAAA,GAAoDC,eAAA,CAAgB;IAA5DC,cAAA,GAAAF,gBAAA,CAAAE,cAAA;IAAgBC,uBAAA,GAAAH,gBAAA,CAAAG,uBAAA;EAExB,IAAMC,WAAA,GAAcF,cAAA,CAAeL,IAAA,EAAMN,GAAG;EAC5C,IAAMI,cAAA,GAAiBQ,uBAAA,CAAwBT,SAAS;EAExD,IAAMW,UAAA,GAAapB,EAAA,CAAG,yBAAyBO,SAAS;EAExD,IAAMc,MAAA,GAASC,cAAA,CAAe;EAE9B,IAAMC,YAAA,GAAAC,aAAA;IACJC,OAAA,EAAS;IACTC,aAAA,EAAe;IACfC,QAAA,EAAU;IACVC,KAAA,EAAO;IACPC,OAAA,EAAS;EAAA,GACNR,MAAA,CAAOS,MAAA,CACZ;EAEA,IAAMC,qBAAA,GAAAP,aAAA;IACJC,OAAA,EAAS;IACTG,KAAA,EAAO;IACPI,MAAA,EAAQ;IACRL,QAAA,EAAU;IACVM,IAAA,EAAM;IACNC,GAAA,EAAK;EAAA,GACFb,MAAA,CAAOc,eAAA,CACZ;EAEA,IAAAC,iBAAA,GAAyBpB,eAAA,CAAgB;IAAjCqB,YAAA,GAAAD,iBAAA,CAAAC,YAAA;EAER,OACE,eAAAlC,GAAA,CAACmC,eAAA;IACC9B,QAAA,iBAAAL,GAAA,CAACF,MAAA,CAAOsC,GAAA,EAAAf,aAAA,CAAAA,aAAA,KACFd,cAAA;MACJH,SAAA,EAAU;MACViC,QAAA,EAAU;MACVC,KAAA,EAAOV,qBAAA;MAEPvB,QAAA,iBAAAL,GAAA,CAACuC,eAAA,EAAAlB,aAAA,CAAAA,aAAA;QACCmB,MAAA,EAAQN,YAAA;QACR1B,WAAA,EAAAA,WAAA;QACAJ,SAAA,EAAWa;MAAA,GACPD,WAAA;QACJsB,KAAA,EAAOlB,YAAA;QAENf,QAAA,EAAAA;MAAA,EACH;IAAA,EACF;EAAA,CACF;AAEJ,CACF;AAEAJ,YAAA,CAAawC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}