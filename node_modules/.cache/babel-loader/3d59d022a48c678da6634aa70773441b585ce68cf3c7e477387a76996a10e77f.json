{"ast":null,"code":"var _jsxFileName = \"/Users/eyliu/Desktop/FitBuddy/src/TimeSlotSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Grid } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeSlotSelector = ({\n  onSelectSlot,\n  dayTextColor,\n  selectedSlots,\n  defaultSlotColor\n}) => {\n  _s();\n  const [slots, setSlots] = useState(selectedSlots || Array(49).fill(false));\n  const weekdays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const times = [\"8:30-10:15\", \"10:15-12:00\", \"12:00-1:45\", \"1:45-3:30\", \"3:30-5:15\", \"5:15-7:00\", \"7:00-8:45\"];\n  useEffect(() => {\n    if (selectedSlots) {\n      setSlots(selectedSlots);\n    }\n  }, [selectedSlots]);\n  const toggleSlot = index => {\n    const newSlots = [...slots];\n    newSlots[index] = !newSlots[index];\n    setSlots(newSlots);\n    onSelectSlot(newSlots);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateColumns: \"repeat(7, 1fr)\",\n    gap: 4,\n    children: weekdays.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"lg\",\n        color: dayTextColor,\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), times.map((time, slotIndex) => {\n        const index = dayIndex * 7 + slotIndex;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          borderRadius: \"md\",\n          bg: slots[index] ? 'pink' : defaultSlotColor,\n          onClick: () => toggleSlot(index),\n          cursor: \"pointer\",\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })]\n    }, day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeSlotSelector, \"U16CDldVXfJsSaZu36ctwq8P5Xk=\");\n_c = TimeSlotSelector;\nTimeSlotSelector.propTypes = {\n  onSelectSlot: PropTypes.func.isRequired,\n  dayTextColor: PropTypes.string,\n  selectedSlots: PropTypes.array,\n  defaultSlotColor: PropTypes.string\n};\nexport default TimeSlotSelector;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotSelector\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Box","Text","Grid","jsxDEV","_jsxDEV","TimeSlotSelector","onSelectSlot","dayTextColor","selectedSlots","defaultSlotColor","_s","slots","setSlots","Array","fill","weekdays","times","toggleSlot","index","newSlots","templateColumns","gap","children","map","day","dayIndex","textAlign","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","time","slotIndex","p","borderRadius","bg","onClick","cursor","_c","propTypes","func","isRequired","string","array","$RefreshReg$"],"sources":["/Users/eyliu/Desktop/FitBuddy/src/TimeSlotSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Grid } from '@chakra-ui/react';\n\nconst TimeSlotSelector = ({ onSelectSlot, dayTextColor, selectedSlots, defaultSlotColor }) => {\n  const [slots, setSlots] = useState(selectedSlots || Array(49).fill(false)); \n  const weekdays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n  const times = [\"8:30-10:15\", \"10:15-12:00\", \"12:00-1:45\", \"1:45-3:30\", \"3:30-5:15\", \"5:15-7:00\", \"7:00-8:45\"];\n  \n  useEffect(() => {\n    if (selectedSlots) {\n      setSlots(selectedSlots);\n    }\n  }, [selectedSlots]);\n\n  const toggleSlot = (index) => {\n    const newSlots = [...slots];\n    newSlots[index] = !newSlots[index];\n    setSlots(newSlots);\n    onSelectSlot(newSlots);\n  };\n\n  return (\n    <Grid templateColumns='repeat(7, 1fr)' gap={4}>\n      {weekdays.map((day, dayIndex) => (\n        <Box key={day} textAlign='center'>\n          <Text fontSize='lg' color={dayTextColor}>{day}</Text>\n          {times.map((time, slotIndex) => {\n            const index = dayIndex * 7 + slotIndex;\n            return (\n              <Box \n                key={time}\n                p={2}\n                borderRadius='md'\n                bg={slots[index] ? 'pink' : defaultSlotColor} \n                onClick={() => toggleSlot(index)}\n                cursor='pointer'\n              >\n                {time}\n              </Box>\n            );\n          })}\n        </Box>\n      ))}\n    </Grid>\n  );\n};\n\nTimeSlotSelector.propTypes = {\n  onSelectSlot: PropTypes.func.isRequired,\n  dayTextColor: PropTypes.string,\n  selectedSlots: PropTypes.array, \n  defaultSlotColor: PropTypes.string, \n};\n\nexport default TimeSlotSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}