{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\", \"minStepsBetweenThumbs\"],\n  _excluded2 = [\"index\"],\n  _excluded3 = [\"value\"],\n  _excluded4 = [\"index\"];\nimport { ariaAttr, callAllHandlers, dataAttr } from \"./chunk-DX64QB22.mjs\";\nimport { getIds, getIsReversed, getStyles, orient } from \"./chunk-E23N4XEN.mjs\";\n\n// src/use-range-slider.ts\nimport { usePanEvent } from \"@chakra-ui/react-use-pan-event\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { percentToValue, roundValueToStep, valueToPercent, clampValue } from \"@chakra-ui/number-utils\";\nimport { useCallback, useMemo, useRef, useState, useId } from \"react\";\nimport { useSizes } from \"@chakra-ui/react-use-size\";\nfunction useRangeSlider(props) {\n  var _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,\n    _props$minStepsBetwee = props.minStepsBetweenThumbs,\n    minStepsBetweenThumbs = _props$minStepsBetwee === void 0 ? 0 : _props$minStepsBetwee,\n    htmlProps = _objectWithoutProperties(props, _excluded);\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _useControllableState = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValue != null ? defaultValue : [25, 75],\n      onChange: onChange\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    valueState = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\"[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `\".concat(typeof valueState, \"`\"));\n  }\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDragging = _useState2[0],\n    setDragging = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setFocused = _useState4[1];\n  var _useState5 = useState(-1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeIndex = _useState6[0],\n    setActiveIndex = _useState6[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var initialValue = useRef(valueState);\n  var value = valueState.map(function (val) {\n    return clampValue(val, min, max);\n  });\n  var spacing = minStepsBetweenThumbs * step;\n  var valueBounds = getValueBounds(value, min, max, spacing);\n  var stateRef = useRef({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  var reversedValue = value.map(function (val) {\n    return max - val + min;\n  });\n  var thumbValues = isReversed ? reversedValue : value;\n  var thumbPercents = thumbValues.map(function (val) {\n    return valueToPercent(val, min, max);\n  });\n  var isVertical = orientation === \"vertical\";\n  var trackRef = useRef(null);\n  var rootRef = useRef(null);\n  var thumbRects = useSizes({\n    getNodes: function getNodes() {\n      var rootNode = rootRef.current;\n      var thumbNodes = rootNode == null ? void 0 : rootNode.querySelectorAll(\"[role=slider]\");\n      return thumbNodes ? Array.from(thumbNodes) : [];\n    }\n  });\n  var reactId = useId();\n  var uuid = idProp != null ? idProp : reactId;\n  var ids = getIds(uuid);\n  var getValueFromPointer = useCallback(function (event) {\n    var _a, _b;\n    if (!trackRef.current) return;\n    stateRef.current.eventSource = \"pointer\";\n    var rect = trackRef.current.getBoundingClientRect();\n    var _ref = (_b = (_a = event.touches) == null ? void 0 : _a[0]) != null ? _b : event,\n      clientX = _ref.clientX,\n      clientY = _ref.clientY;\n    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    var length = isVertical ? rect.height : rect.width;\n    var percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return percentToValue(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var actions = useMemo(function () {\n    return {\n      setValueAtIndex: function setValueAtIndex(index, val) {\n        if (!isInteractive) return;\n        var bounds = stateRef.current.valueBounds[index];\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep));\n        val = clampValue(val, bounds.min, bounds.max);\n        var next = _toConsumableArray(stateRef.current.value);\n        next[index] = val;\n        setValue(next);\n      },\n      setActiveIndex: setActiveIndex,\n      stepUp: function stepUp(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n        actions.setValueAtIndex(index, next);\n      },\n      stepDown: function stepDown(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n        actions.setValueAtIndex(index, next);\n      },\n      reset: function reset() {\n        setValue(initialValue.current);\n      }\n    };\n  }, [oneStep, isReversed, setValue, isInteractive]);\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown(activeIndex);\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown(activeIndex);\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(activeIndex, tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(activeIndex, tenSteps);\n      },\n      Home: function Home() {\n        var value2 = valueBounds[activeIndex].min;\n        actions.setValueAtIndex(activeIndex, value2);\n      },\n      End: function End() {\n        var value2 = valueBounds[activeIndex].max;\n        actions.setValueAtIndex(activeIndex, value2);\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      stateRef.current.eventSource = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  var _useMemo = useMemo(function () {\n      return getStyles({\n        isReversed: isReversed,\n        orientation: orientation,\n        thumbRects: thumbRects,\n        thumbPercents: thumbPercents\n      });\n    }, [isReversed, orientation, thumbPercents, thumbRects]),\n    getThumbStyle = _useMemo.getThumbStyle,\n    rootStyle = _useMemo.rootStyle,\n    trackStyle = _useMemo.trackStyle,\n    innerTrackStyle = _useMemo.innerTrackStyle;\n  var focusThumb = useCallback(function (index) {\n    var _a;\n    var idx = index != null ? index : activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      var id = ids.getThumb(idx);\n      var thumb = (_a = rootRef.current) == null ? void 0 : _a.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(function () {\n          return thumb.focus();\n        });\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  useUpdateEffect(function () {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  var _onPanSessionStart = function onPanSessionStart(event) {\n    var pointValue = getValueFromPointer(event) || 0;\n    var distances = stateRef.current.value.map(function (val) {\n      return Math.abs(val - pointValue);\n    });\n    var closest = Math.min.apply(Math, _toConsumableArray(distances));\n    var index = distances.indexOf(closest);\n    var thumbsAtPosition = distances.filter(function (distance) {\n      return distance === closest;\n    });\n    var isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  var _onPan = function onPan(event) {\n    if (activeIndex == -1) return;\n    var pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  usePanEvent(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging(true);\n      _onPanSessionStart(event);\n      onChangeStart == null ? void 0 : onChangeStart(stateRef.current.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    },\n    onPan: function onPan(event) {\n      if (!isInteractive) return;\n      _onPan(event);\n    }\n  });\n  var getRootProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread(_objectSpread({}, props2), htmlProps), {}, {\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread(_objectSpread({}, props2.style), rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  var getTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread(_objectSpread({}, props2.style), trackStyle)\n    });\n  }, [isDisabled, trackStyle, ids]);\n  var getInnerTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      id: ids.innerTrack,\n      style: _objectSpread(_objectSpread({}, props2.style), innerTrackStyle)\n    });\n  }, [innerTrackStyle, ids]);\n  var getThumbProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _a;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, _excluded2);\n    var valueAtIndex = value[index];\n    if (valueAtIndex == null) {\n      throw new TypeError(\"[range-slider > thumb] Cannot find value at index `\".concat(index, \"`. The `value` or `defaultValue` length is : \").concat(value.length));\n    }\n    var bounds = valueBounds[index];\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": (_a = getAriaValueText == null ? void 0 : getAriaValueText(valueAtIndex)) != null ? _a : ariaValueText == null ? void 0 : ariaValueText[index],\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": valueAtIndex,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel == null ? void 0 : ariaLabel[index],\n      \"aria-labelledby\": (ariaLabel == null ? void 0 : ariaLabel[index]) ? void 0 : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],\n      style: _objectSpread(_objectSpread({}, props2.style), getThumbStyle(index)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        setFocused(true);\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        setFocused(false);\n        setActiveIndex(-1);\n      })\n    });\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  var getOutputProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      id: ids.output,\n      htmlFor: value.map(function (v, i) {\n        return ids.getThumb(i);\n      }).join(\" \"),\n      \"aria-live\": \"off\"\n    });\n  }, [ids, value]);\n  var getMarkerProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var v = props2.value,\n      rest = _objectWithoutProperties(props2, _excluded3);\n    var isInRange = !(v < min || v > max);\n    var isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    var percent = valueToPercent(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"\".concat(percent, \"%\")\n      },\n      horizontal: {\n        left: \"\".concat(percent, \"%\")\n      }\n    }));\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      id: ids.getMarker(props2.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread(_objectSpread({}, props2.style), markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  var getInputProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, _excluded4);\n    return _objectSpread(_objectSpread({}, rest), {}, {\n      ref: ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : \"\".concat(name, \"-\").concat(index)\n    });\n  }, [name, value, ids]);\n  var state = {\n    value: value,\n    isFocused: isFocused,\n    isDragging: isDragging,\n    getThumbPercent: function getThumbPercent(index) {\n      return thumbPercents[index];\n    },\n    getThumbMinValue: function getThumbMinValue(index) {\n      return valueBounds[index].min;\n    },\n    getThumbMaxValue: function getThumbMaxValue(index) {\n      return valueBounds[index].max;\n    }\n  };\n  return {\n    state: state,\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps,\n    getOutputProps: getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map(function (v, i) {\n    var _min = i === 0 ? min : arr[i - 1] + spacing;\n    var _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return {\n      min: _min,\n      max: _max\n    };\n  });\n}\nexport { useRangeSlider };","map":{"version":3,"names":["usePanEvent","useControllableState","useCallbackRef","useUpdateEffect","mergeRefs","percentToValue","roundValueToStep","valueToPercent","clampValue","useCallback","useMemo","useRef","useState","useId","useSizes","useRangeSlider","props","_props$min","min","_props$max","max","onChange","valueProp","value","defaultValue","isReversedProp","isReversed","_props$direction","direction","_props$orientation","orientation","idProp","id","isDisabled","isReadOnly","onChangeStartProp","onChangeStart","onChangeEndProp","onChangeEnd","_props$step","step","getAriaValueTextProp","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","_props$focusThumbOnCh","focusThumbOnChange","_props$minStepsBetwee","minStepsBetweenThumbs","htmlProps","_objectWithoutProperties","_excluded","getIsReversed","_useControllableState","_useControllableState2","_slicedToArray","valueState","setValue","Array","isArray","TypeError","concat","_useState","_useState2","isDragging","setDragging","_useState3","_useState4","isFocused","setFocused","_useState5","_useState6","activeIndex","setActiveIndex","isInteractive","initialValue","map","val","spacing","valueBounds","getValueBounds","stateRef","eventSource","current","reversedValue","thumbValues","thumbPercents","isVertical","trackRef","rootRef","thumbRects","getNodes","rootNode","thumbNodes","querySelectorAll","from","reactId","uuid","ids","getIds","getValueFromPointer","event","_a","_b","rect","getBoundingClientRect","_ref","touches","clientX","clientY","diff","bottom","left","length","height","width","percent","tenSteps","oneStep","actions","setValueAtIndex","index","bounds","parseFloat","next","_toConsumableArray","stepUp","step2","arguments","undefined","valueAtIndex","stepDown","reset","onKeyDown","eventKey","key","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","value2","End","action","preventDefault","stopPropagation","_useMemo","getStyles","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","idx","getThumb","thumb","ownerDocument","getElementById","setTimeout","focus","onPanSessionStart","pointValue","distances","Math","abs","closest","apply","indexOf","thumbsAtPosition","filter","distance","isThumbStacked","onPan","onPanSessionEnd","getRootProps","props2","ref","_objectSpread","root","tabIndex","ariaAttr","dataAttr","style","getTrackProps","track","getInnerTrackProps","innerTrack","getThumbProps","rest","_excluded2","role","callAllHandlers","onFocus","onBlur","getOutputProps","output","htmlFor","v","i","join","getMarkerProps","_excluded3","isInRange","isHighlighted","markerStyle","position","pointerEvents","orient","vertical","horizontal","getMarker","getInputProps","_excluded4","getInput","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/slider/src/use-range-slider.ts"],"sourcesContent":["import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport {\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n  clampValue,\n} from \"@chakra-ui/number-utils\"\nimport { useCallback, useMemo, useRef, useState, useId } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\nimport { useSizes } from \"@chakra-ui/react-use-size\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   * @default false\n   */\n  isReversed?: boolean\n\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\nexport interface RangeSliderState {\n  value: number[]\n  isFocused: boolean\n  isDragging: boolean\n  getThumbPercent: (index: number) => number\n  getThumbMinValue: (index: number) => number\n  getThumbMaxValue: (index: number) => number\n}\n\nexport interface RangeSliderActions {\n  setValueAtIndex(index: number, val: number): void\n  setActiveIndex: React.Dispatch<React.SetStateAction<number>>\n  stepUp(index: number, step?: number): void\n  stepDown(index: number, step?: number): void\n  reset(): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const stateRef = useRef<{\n    eventSource: \"pointer\" | \"keyboard\" | null\n    value: number[]\n    valueBounds: Array<{ min: number; max: number }>\n  }>({\n    eventSource: null,\n    value: [],\n    valueBounds: [],\n  })\n\n  stateRef.current.value = value\n  stateRef.current.valueBounds = valueBounds\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const thumbRects = useSizes({\n    getNodes() {\n      const rootNode = rootRef.current\n      const thumbNodes =\n        rootNode?.querySelectorAll<HTMLElement>(\"[role=slider]\")\n      return thumbNodes ? Array.from(thumbNodes) : []\n    },\n  })\n\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n      stateRef.current.eventSource = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions: RangeSliderActions = useMemo(\n    () => ({\n      setValueAtIndex(index: number, val: number) {\n        if (!isInteractive) return\n        const bounds = stateRef.current.valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...stateRef.current.value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset() {\n        setValue(initialValue.current)\n      },\n    }),\n    [oneStep, isReversed, setValue, isInteractive],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        stateRef.current.eventSource = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => thumb.focus())\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd?.(stateRef.current.value)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = stateRef.current.value.map((val) =>\n      Math.abs(val - pointValue),\n    )\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n\n    // check if the clicked thumb is stacked by checking if there are multiple\n    // thumbs at the same distance\n    const thumbsAtPosition = distances.filter(\n      (distance) => distance === closest,\n    )\n    const isThumbStacked = thumbsAtPosition.length > 1\n\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the last thumb with the greatest index\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1\n    }\n\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    if (activeIndex == -1) return\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging(true)\n      onPanSessionStart(event)\n      onChangeStart?.(stateRef.current.value)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(stateRef.current.value)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        id: ids.root,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: { ...props.style, ...rootStyle },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: ids.track,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: { ...props.style, ...trackStyle },\n      }\n    },\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.innerTrack,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const valueAtIndex = value[index]\n      if (valueAtIndex == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\":\n          getAriaValueText?.(valueAtIndex) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": valueAtIndex,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused(true)\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused(false)\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.output,\n        htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n        \"aria-live\": \"off\",\n      }\n    },\n    [ids, value],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  const state: RangeSliderState = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: (index: number) => thumbPercents[index],\n    getThumbMinValue: (index: number) => valueBounds[index].min,\n    getThumbMaxValue: (index: number) => valueBounds[index].max,\n  }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nfunction getValueBounds(\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}