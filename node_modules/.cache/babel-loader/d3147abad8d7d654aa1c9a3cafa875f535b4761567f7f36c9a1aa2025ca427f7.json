{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useAlertContext, useAlertStyles } from \"./chunk-XCES3W5V.mjs\";\n\n// src/alert-description.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AlertDescription = forwardRef(function AlertDescription2(props, ref) {\n  var styles = useAlertStyles();\n  var _useAlertContext = useAlertContext(),\n    status = _useAlertContext.status;\n  var descriptionStyles = _objectSpread({\n    display: \"inline\"\n  }, styles.description);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    \"data-status\": status\n  }, props), {}, {\n    className: cx(\"chakra-alert__desc\", props.className),\n    __css: descriptionStyles\n  }));\n});\nAlertDescription.displayName = \"AlertDescription\";\nexport { AlertDescription };","map":{"version":3,"names":["cx","chakra","forwardRef","jsx","AlertDescription","AlertDescription2","props","ref","styles","useAlertStyles","_useAlertContext","useAlertContext","status","descriptionStyles","_objectSpread","display","description","div","className","__css","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/alert/src/alert-description.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  function AlertDescription(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nAlertDescription.displayName = \"AlertDescription\"\n"],"mappings":";;;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SAGEC,MAAA,EACAC,UAAA,QACK;AAeD,SAAAC,GAAA;AAVC,IAAMC,gBAAA,GAAmBF,UAAA,CAC9B,SAASG,kBAAiBC,KAAA,EAAOC,GAAA,EAAK;EACpC,IAAMC,MAAA,GAASC,cAAA,CAAe;EAC9B,IAAAC,gBAAA,GAAmBC,eAAA,CAAgB;IAA3BC,MAAA,GAAAF,gBAAA,CAAAE,MAAA;EACR,IAAMC,iBAAA,GAAAC,aAAA;IACJC,OAAA,EAAS;EAAA,GACNP,MAAA,CAAOQ,WAAA,CACZ;EAEA,OACE,eAAAb,GAAA,CAACF,MAAA,CAAOgB,GAAA,EAAAH,aAAA,CAAAA,aAAA;IACNP,GAAA,EAAAA,GAAA;IACA,eAAaK;EAAA,GACTN,KAAA;IACJY,SAAA,EAAWlB,EAAA,CAAG,sBAAsBM,KAAA,CAAMY,SAAS;IACnDC,KAAA,EAAON;EAAA,EACT;AAEJ,CACF;AAEAT,gBAAA,CAAiBgB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}