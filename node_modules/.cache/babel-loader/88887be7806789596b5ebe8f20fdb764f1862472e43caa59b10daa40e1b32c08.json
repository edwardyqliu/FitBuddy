{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from \"react\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { getOwnerWindow } from \"@chakra-ui/dom-utils\";\nfunction useAnimationState(props) {\n  var isOpen = props.isOpen,\n    ref = props.ref;\n  var _useState = useState(isOpen),\n    _useState2 = _slicedToArray(_useState, 2),\n    mounted = _useState2[0],\n    setMounted = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    once = _useState4[0],\n    setOnce = _useState4[1];\n  useEffect(function () {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(function () {\n    return ref.current;\n  }, \"animationend\", function () {\n    setMounted(isOpen);\n  });\n  var hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete: function onComplete() {\n      var _a;\n      var win = getOwnerWindow(ref.current);\n      var evt = new win.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_a = ref.current) == null ? void 0 : _a.dispatchEvent(evt);\n    }\n  };\n}\nexport { useAnimationState };","map":{"version":3,"names":["useEffect","useState","useEventListener","getOwnerWindow","useAnimationState","props","isOpen","ref","_useState","_useState2","_slicedToArray","mounted","setMounted","_useState3","_useState4","once","setOnce","current","hidden","present","onComplete","_a","win","evt","CustomEvent","bubbles","dispatchEvent"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/react-use-animation-state/src/index.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\"\nimport { getOwnerWindow } from \"@chakra-ui/dom-utils\"\nexport type UseAnimationStateProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport function useAnimationState(props: UseAnimationStateProps) {\n  const { isOpen, ref } = props\n\n  const [mounted, setMounted] = useState(isOpen)\n  const [once, setOnce] = useState(false)\n\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen)\n      setOnce(true)\n    }\n  }, [isOpen, once, mounted])\n\n  useEventListener(\n    () => ref.current,\n    \"animationend\",\n    () => {\n      setMounted(isOpen)\n    },\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onComplete() {\n      const win = getOwnerWindow(ref.current)\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true })\n      ref.current?.dispatchEvent(evt)\n    },\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,SAAA,EAAWC,QAAA,QAAgB;AACpC,SAASC,gBAAA,QAAwB;AACjC,SAASC,cAAA,QAAsB;AAMxB,SAASC,kBAAkBC,KAAA,EAA+B;EAC/D,IAAQC,MAAA,GAAgBD,KAAA,CAAhBC,MAAA;IAAQC,GAAA,GAAQF,KAAA,CAARE,GAAA;EAEhB,IAAAC,SAAA,GAA8BP,QAAA,CAASK,MAAM;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAA,GAAAF,UAAA;IAASG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwBZ,QAAA,CAAS,KAAK;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,IAAA,GAAAD,UAAA;IAAME,OAAO,GAAAF,UAAA;EAEpBd,SAAA,CAAU,YAAM;IACd,IAAI,CAACe,IAAA,EAAM;MACTH,UAAA,CAAWN,MAAM;MACjBU,OAAA,CAAQ,IAAI;IACd;EACF,GAAG,CAACV,MAAA,EAAQS,IAAA,EAAMJ,OAAO,CAAC;EAE1BT,gBAAA,CACE;IAAA,OAAMK,GAAA,CAAIU,OAAA;EAAA,GACV,gBACA,YAAM;IACJL,UAAA,CAAWN,MAAM;EACnB,CACF;EAEA,IAAMY,MAAA,GAASZ,MAAA,GAAS,QAAQ,CAACK,OAAA;EAEjC,OAAO;IACLQ,OAAA,EAAS,CAACD,MAAA;IACVE,UAAA,WAAAA,WAAA,EAAa;MAjCjB,IAAAC,EAAA;MAkCM,IAAMC,GAAA,GAAMnB,cAAA,CAAeI,GAAA,CAAIU,OAAO;MACtC,IAAMM,GAAA,GAAM,IAAID,GAAA,CAAIE,WAAA,CAAY,gBAAgB;QAAEC,OAAA,EAAS;MAAK,CAAC;MACjE,CAAAJ,EAAA,GAAAd,GAAA,CAAIU,OAAA,KAAJ,gBAAAI,EAAA,CAAaK,aAAA,CAAcH,GAAA;IAC7B;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}