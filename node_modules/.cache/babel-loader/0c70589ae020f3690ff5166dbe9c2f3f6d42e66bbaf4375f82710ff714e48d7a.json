{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\"];\nimport { ariaAttr, callAllHandlers, dataAttr } from \"./chunk-DX64QB22.mjs\";\nimport { getIsReversed, getStyles } from \"./chunk-E23N4XEN.mjs\";\n\n// src/use-slider.ts\nimport { usePanEvent } from \"@chakra-ui/react-use-pan-event\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { useSize } from \"@chakra-ui/react-use-size\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { clampValue, percentToValue, roundValueToStep, valueToPercent } from \"@chakra-ui/number-utils\";\nimport { useCallback, useMemo, useRef, useId, useState } from \"react\";\nfunction useSlider(props) {\n  var _a;\n  var _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,\n    htmlProps = _objectWithoutProperties(props, _excluded);\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _useControllableState = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),\n      onChange: onChange\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    computedValue = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDragging = _useState2[0],\n    setDragging = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setFocused = _useState4[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var value = clampValue(computedValue, min, max);\n  var reversedValue = max - value + min;\n  var trackValue = isReversed ? reversedValue : value;\n  var thumbPercent = valueToPercent(trackValue, min, max);\n  var isVertical = orientation === \"vertical\";\n  var stateRef = useLatestRef({\n    min: min,\n    max: max,\n    step: step,\n    isDisabled: isDisabled,\n    value: value,\n    isInteractive: isInteractive,\n    isReversed: isReversed,\n    isVertical: isVertical,\n    eventSource: null,\n    focusThumbOnChange: focusThumbOnChange,\n    orientation: orientation\n  });\n  var trackRef = useRef(null);\n  var thumbRef = useRef(null);\n  var rootRef = useRef(null);\n  var reactId = useId();\n  var uuid = idProp != null ? idProp : reactId;\n  var thumbId = \"slider-thumb-\".concat(uuid),\n    trackId = \"slider-track-\".concat(uuid);\n  var getValueFromPointer = useCallback(function (event) {\n    var _a2, _b;\n    if (!trackRef.current) return;\n    var state2 = stateRef.current;\n    state2.eventSource = \"pointer\";\n    var trackRect = trackRef.current.getBoundingClientRect();\n    var _ref = (_b = (_a2 = event.touches) == null ? void 0 : _a2[0]) != null ? _b : event,\n      clientX = _ref.clientX,\n      clientY = _ref.clientY;\n    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    var length = isVertical ? trackRect.height : trackRect.width;\n    var percent = diff / length;\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n    var nextValue = percentToValue(percent, state2.min, state2.max);\n    if (state2.step) {\n      nextValue = parseFloat(roundValueToStep(nextValue, state2.min, state2.step));\n    }\n    nextValue = clampValue(nextValue, state2.min, state2.max);\n    return nextValue;\n  }, [isVertical, isReversed, stateRef]);\n  var constrain = useCallback(function (value2) {\n    var state2 = stateRef.current;\n    if (!state2.isInteractive) return;\n    value2 = parseFloat(roundValueToStep(value2, state2.min, oneStep));\n    value2 = clampValue(value2, state2.min, state2.max);\n    setValue(value2);\n  }, [oneStep, setValue, stateRef]);\n  var actions = useMemo(function () {\n    return {\n      stepUp: function stepUp() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value - step2 : value + step2;\n        constrain(next);\n      },\n      stepDown: function stepDown() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value + step2 : value - step2;\n        constrain(next);\n      },\n      reset: function reset() {\n        constrain(defaultValue || 0);\n      },\n      stepTo: function stepTo(value2) {\n        constrain(value2);\n      }\n    };\n  }, [constrain, isReversed, value, oneStep, defaultValue]);\n  var onKeyDown = useCallback(function (event) {\n    var state2 = stateRef.current;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp();\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp();\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown();\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown();\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(tenSteps);\n      },\n      Home: function Home() {\n        return constrain(state2.min);\n      },\n      End: function End() {\n        return constrain(state2.max);\n      }\n    };\n    var action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      state2.eventSource = \"keyboard\";\n    }\n  }, [actions, constrain, tenSteps, stateRef]);\n  var valueText = (_a = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _a : ariaValueText;\n  var thumbSize = useSize(thumbRef);\n  var _useMemo = useMemo(function () {\n      var state2 = stateRef.current;\n      var thumbRect = thumbSize != null ? thumbSize : {\n        width: 0,\n        height: 0\n      };\n      return getStyles({\n        isReversed: isReversed,\n        orientation: state2.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent]\n      });\n    }, [isReversed, thumbSize, thumbPercent, stateRef]),\n    getThumbStyle = _useMemo.getThumbStyle,\n    rootStyle = _useMemo.rootStyle,\n    trackStyle = _useMemo.trackStyle,\n    innerTrackStyle = _useMemo.innerTrackStyle;\n  var focusThumb = useCallback(function () {\n    var state2 = stateRef.current;\n    if (state2.focusThumbOnChange) {\n      setTimeout(function () {\n        var _a2;\n        return (_a2 = thumbRef.current) == null ? void 0 : _a2.focus();\n      });\n    }\n  }, [stateRef]);\n  useUpdateEffect(function () {\n    var state2 = stateRef.current;\n    focusThumb();\n    if (state2.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    var nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  usePanEvent(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart == null ? void 0 : onChangeStart(state2.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    },\n    onPan: function onPan(event) {\n      var state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setValueFromPointer(event);\n    }\n  });\n  var getRootProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread(_objectSpread({}, props2), htmlProps), {}, {\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread(_objectSpread({}, props2.style), rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  var getTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread(_objectSpread({}, props2.style), trackStyle)\n    });\n  }, [isDisabled, trackId, trackStyle]);\n  var getInnerTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      style: _objectSpread(_objectSpread({}, props2.style), innerTrackStyle)\n    });\n  }, [innerTrackStyle]);\n  var getThumbProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n      style: _objectSpread(_objectSpread({}, props2.style), getThumbStyle(0)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        return setFocused(true);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        return setFocused(false);\n      })\n    });\n  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown]);\n  var getMarkerProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var isInRange = !(props2.value < min || props2.value > max);\n    var isHighlighted = value >= props2.value;\n    var markerPercent = valueToPercent(props2.value, min, max);\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      },\n      horizontal: {\n        left: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      }\n    }));\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread(_objectSpread({}, props2.style), markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  var getInputProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: ref,\n      type: \"hidden\",\n      value: value,\n      name: name\n    });\n  }, [name, value]);\n  var state = {\n    value: value,\n    isFocused: isFocused,\n    isDragging: isDragging\n  };\n  return {\n    state: state,\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps\n  };\n}\nfunction orient(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\nexport { useSlider };","map":{"version":3,"names":["usePanEvent","useCallbackRef","useUpdateEffect","useControllableState","useSize","mergeRefs","useLatestRef","clampValue","percentToValue","roundValueToStep","valueToPercent","useCallback","useMemo","useRef","useId","useState","useSlider","props","_a","_props$min","min","_props$max","max","onChange","valueProp","value","defaultValue","isReversedProp","isReversed","_props$direction","direction","_props$orientation","orientation","idProp","id","isDisabled","isReadOnly","onChangeStartProp","onChangeStart","onChangeEndProp","onChangeEnd","_props$step","step","getAriaValueTextProp","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","_props$focusThumbOnCh","focusThumbOnChange","htmlProps","_objectWithoutProperties","_excluded","getIsReversed","_useControllableState","getDefaultValue","_useControllableState2","_slicedToArray","computedValue","setValue","_useState","_useState2","isDragging","setDragging","_useState3","_useState4","isFocused","setFocused","isInteractive","tenSteps","oneStep","reversedValue","trackValue","thumbPercent","isVertical","stateRef","eventSource","trackRef","thumbRef","rootRef","reactId","uuid","thumbId","concat","trackId","getValueFromPointer","event","_a2","_b","current","state2","trackRect","getBoundingClientRect","_ref","touches","clientX","clientY","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","constrain","value2","actions","stepUp","step2","arguments","undefined","next","stepDown","reset","stepTo","onKeyDown","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","key","preventDefault","stopPropagation","valueText","thumbSize","_useMemo","thumbRect","getStyles","thumbRects","thumbPercents","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","setTimeout","focus","setValueFromPointer","onPanSessionStart","onPanSessionEnd","onPan","getRootProps","props2","ref","_objectSpread","tabIndex","ariaAttr","dataAttr","style","getTrackProps","getInnerTrackProps","getThumbProps","role","callAllHandlers","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","position","pointerEvents","orient","vertical","horizontal","getInputProps","type","state","options"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/slider/src/use-slider.ts"],"sourcesContent":["import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useSize } from \"@chakra-ui/react-use-size\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport {\n  clampValue,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/number-utils\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport { useCallback, useMemo, useRef, useId, useState } from \"react\"\nimport { getIsReversed, getStyles } from \"./slider-utils\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport interface SliderState {\n  value: number\n  isFocused: boolean\n  isDragging: boolean\n}\n\nexport interface SliderActions {\n  stepUp(step?: number): void\n  stepDown(step?: number): void\n  reset(): void\n  stepTo(value: number): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slider/\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const thumbPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  const stateRef = useLatestRef({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null as \"pointer\" | \"keyboard\" | null,\n    focusThumbOnChange,\n    orientation,\n  })\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const thumbRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`]\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n\n      const state = stateRef.current\n      state.eventSource = \"pointer\"\n\n      const trackRect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, state.min, state.max)\n\n      if (state.step) {\n        nextValue = parseFloat(\n          roundValueToStep(nextValue, state.min, state.step),\n        )\n      }\n\n      nextValue = clampValue(nextValue, state.min, state.max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, stateRef],\n  )\n\n  const constrain = useCallback(\n    (value: number) => {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      value = parseFloat(roundValueToStep(value, state.min, oneStep))\n      value = clampValue(value, state.min, state.max)\n      setValue(value)\n    },\n    [oneStep, setValue, stateRef],\n  )\n\n  const actions: SliderActions = useMemo(\n    () => ({\n      stepUp(step = oneStep) {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown(step = oneStep) {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset() {\n        constrain(defaultValue || 0)\n      },\n      stepTo(value: number) {\n        constrain(value)\n      },\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const state = stateRef.current\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(state.min),\n        End: () => constrain(state.max),\n      }\n\n      const action = keyMap[event.key]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        state.eventSource = \"keyboard\"\n      }\n    },\n    [actions, constrain, tenSteps, stateRef],\n  )\n\n  /**\n   * ARIA (Optional): To define a human-readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb, so\n   * we can center it within the track properly\n   */\n  const thumbSize = useSize(thumbRef)\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } =\n    useMemo(() => {\n      const state = stateRef.current\n\n      const thumbRect = thumbSize ?? { width: 0, height: 0 }\n      return getStyles({\n        isReversed,\n        orientation: state.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent],\n      })\n    }, [isReversed, thumbSize, thumbPercent, stateRef])\n\n  const focusThumb = useCallback(() => {\n    const state = stateRef.current\n    if (state.focusThumbOnChange) {\n      setTimeout(() => thumbRef.current?.focus())\n    }\n  }, [stateRef])\n\n  useUpdateEffect(() => {\n    const state = stateRef.current\n    focusThumb()\n    if (state.eventSource === \"keyboard\") {\n      onChangeEnd?.(state.value)\n    }\n  }, [value, onChangeEnd])\n\n  function setValueFromPointer(event: MouseEvent | TouchEvent | PointerEvent) {\n    const nextValue = getValueFromPointer(event)\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue)\n    }\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(true)\n      focusThumb()\n      setValueFromPointer(event)\n      onChangeStart?.(state.value)\n    },\n    onPanSessionEnd() {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(state.value)\n    },\n    onPan(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setValueFromPointer(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: {\n          ...props.style,\n          ...rootStyle,\n        },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: trackId,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: {\n          ...props.style,\n          ...trackStyle,\n        },\n      }\n    },\n    [isDisabled, trackId, trackStyle],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle],\n  )\n\n  const getThumbProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, thumbRef),\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: thumbId,\n        \"data-active\": dataAttr(isDragging),\n        \"aria-valuetext\": valueText,\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n        style: {\n          ...props.style,\n          ...getThumbStyle(0),\n        },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => setFocused(true)),\n        onBlur: callAllHandlers(props.onBlur, () => setFocused(false)),\n      }\n    },\n    [\n      isInteractive,\n      thumbId,\n      isDragging,\n      valueText,\n      min,\n      max,\n      value,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n    ],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation: orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        type: \"hidden\",\n        value,\n        name,\n      }\n    },\n    [name, value],\n  )\n\n  const state: SliderState = { value, isFocused, isDragging }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}