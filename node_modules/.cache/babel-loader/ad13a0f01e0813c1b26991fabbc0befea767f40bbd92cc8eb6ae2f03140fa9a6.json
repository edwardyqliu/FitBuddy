{"ast":null,"code":"'use client';\n\n// src/use-editable.ts\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onChange\", \"onCancel\", \"onSubmit\", \"onBlur\", \"value\", \"isDisabled\", \"defaultValue\", \"startWithEditView\", \"isPreviewFocusable\", \"submitOnBlur\", \"selectAllOnFocus\", \"placeholder\", \"onEdit\", \"finalFocusRef\"];\nimport { useFocusOnPointerDown } from \"@chakra-ui/react-use-focus-on-pointer-down\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nfunction useEditable() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onChangeProp = props.onChange,\n    onCancelProp = props.onCancel,\n    onSubmitProp = props.onSubmit,\n    onBlurProp = props.onBlur,\n    valueProp = props.value,\n    isDisabled = props.isDisabled,\n    defaultValue = props.defaultValue,\n    startWithEditView = props.startWithEditView,\n    _props$isPreviewFocus = props.isPreviewFocusable,\n    isPreviewFocusable = _props$isPreviewFocus === void 0 ? true : _props$isPreviewFocus,\n    _props$submitOnBlur = props.submitOnBlur,\n    submitOnBlur = _props$submitOnBlur === void 0 ? true : _props$submitOnBlur,\n    _props$selectAllOnFoc = props.selectAllOnFocus,\n    selectAllOnFocus = _props$selectAllOnFoc === void 0 ? true : _props$selectAllOnFoc,\n    placeholder = props.placeholder,\n    onEditCallback = props.onEdit,\n    finalFocusRef = props.finalFocusRef,\n    htmlProps = _objectWithoutProperties(props, _excluded);\n  var onEditProp = useCallbackRef(onEditCallback);\n  var defaultIsEditing = Boolean(startWithEditView && !isDisabled);\n  var _useState = useState(defaultIsEditing),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useControllableState = useControllableState({\n      defaultValue: defaultValue || \"\",\n      value: valueProp,\n      onChange: onChangeProp\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    value = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  var _useState3 = useState(value),\n    _useState4 = _slicedToArray(_useState3, 2),\n    prevValue = _useState4[0],\n    setPrevValue = _useState4[1];\n  var inputRef = useRef(null);\n  var previewRef = useRef(null);\n  var editButtonRef = useRef(null);\n  var cancelButtonRef = useRef(null);\n  var submitButtonRef = useRef(null);\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef]\n  });\n  var isInteractive = !isEditing && !isDisabled;\n  useSafeLayoutEffect(function () {\n    var _a, _b;\n    if (isEditing) {\n      (_a = inputRef.current) == null ? void 0 : _a.focus();\n      if (selectAllOnFocus) (_b = inputRef.current) == null ? void 0 : _b.select();\n    }\n  }, []);\n  useUpdateEffect(function () {\n    var _a, _b, _c, _d;\n    if (!isEditing) {\n      if (finalFocusRef) {\n        (_a = finalFocusRef.current) == null ? void 0 : _a.focus();\n      } else {\n        (_b = editButtonRef.current) == null ? void 0 : _b.focus();\n      }\n      return;\n    }\n    (_c = inputRef.current) == null ? void 0 : _c.focus();\n    if (selectAllOnFocus) {\n      (_d = inputRef.current) == null ? void 0 : _d.select();\n    }\n    onEditProp == null ? void 0 : onEditProp();\n  }, [isEditing, onEditProp, selectAllOnFocus]);\n  var onEdit = useCallback(function () {\n    if (isInteractive) {\n      setIsEditing(true);\n    }\n  }, [isInteractive]);\n  var onUpdatePrevValue = useCallback(function () {\n    setPrevValue(value);\n  }, [value]);\n  var onCancel = useCallback(function () {\n    setIsEditing(false);\n    setValue(prevValue);\n    onCancelProp == null ? void 0 : onCancelProp(prevValue);\n    onBlurProp == null ? void 0 : onBlurProp(prevValue);\n  }, [onCancelProp, onBlurProp, setValue, prevValue]);\n  var onSubmit = useCallback(function () {\n    setIsEditing(false);\n    setPrevValue(value);\n    onSubmitProp == null ? void 0 : onSubmitProp(value);\n    onBlurProp == null ? void 0 : onBlurProp(prevValue);\n  }, [value, onSubmitProp, onBlurProp, prevValue]);\n  useEffect(function () {\n    if (isEditing) return;\n    var inputEl = inputRef.current;\n    if ((inputEl == null ? void 0 : inputEl.ownerDocument.activeElement) === inputEl) {\n      inputEl == null ? void 0 : inputEl.blur();\n    }\n  }, [isEditing]);\n  var onChange = useCallback(function (event) {\n    setValue(event.currentTarget.value);\n  }, [setValue]);\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      Escape: onCancel,\n      Enter: function Enter(event2) {\n        if (!event2.shiftKey && !event2.metaKey) {\n          onSubmit();\n        }\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel, onSubmit]);\n  var onKeyDownWithoutSubmit = useCallback(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      Escape: onCancel\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [onCancel]);\n  var isValueEmpty = value.length === 0;\n  var onBlur = useCallback(function (event) {\n    var _a;\n    if (!isEditing) return;\n    var doc = event.currentTarget.ownerDocument;\n    var relatedTarget = (_a = event.relatedTarget) != null ? _a : doc.activeElement;\n    var targetIsCancel = contains(cancelButtonRef.current, relatedTarget);\n    var targetIsSubmit = contains(submitButtonRef.current, relatedTarget);\n    var isValidBlur = !targetIsCancel && !targetIsSubmit;\n    if (isValidBlur) {\n      if (submitOnBlur) {\n        onSubmit();\n      } else {\n        onCancel();\n      }\n    }\n  }, [submitOnBlur, onSubmit, onCancel, isEditing]);\n  var getPreviewProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var tabIndex = isInteractive && isPreviewFocusable ? 0 : void 0;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(ref, previewRef),\n      children: isValueEmpty ? placeholder : value,\n      hidden: isEditing,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      tabIndex: tabIndex,\n      onFocus: callAllHandlers(props2.onFocus, onEdit, onUpdatePrevValue)\n    });\n  }, [isDisabled, isEditing, isInteractive, isPreviewFocusable, isValueEmpty, onEdit, onUpdatePrevValue, placeholder, value]);\n  var getInputProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      hidden: !isEditing,\n      placeholder: placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value: value,\n      onBlur: callAllHandlers(props2.onBlur, onBlur),\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, onUpdatePrevValue)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDown, onUpdatePrevValue, placeholder, value]);\n  var getTextareaProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      hidden: !isEditing,\n      placeholder: placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value: value,\n      onBlur: callAllHandlers(props2.onBlur, onBlur),\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDownWithoutSubmit),\n      onFocus: callAllHandlers(props2.onFocus, onUpdatePrevValue)\n    });\n  }, [isDisabled, isEditing, onBlur, onChange, onKeyDownWithoutSubmit, onUpdatePrevValue, placeholder, value]);\n  var getEditButtonProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({\n      \"aria-label\": \"Edit\"\n    }, props2), {}, {\n      type: \"button\",\n      onClick: callAllHandlers(props2.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef),\n      disabled: isDisabled\n    });\n  }, [onEdit, isDisabled]);\n  var getSubmitButtonProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props2.onClick, onSubmit),\n      disabled: isDisabled\n    });\n  }, [onSubmit, isDisabled]);\n  var getCancelButtonProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\"\n    }, props2), {}, {\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props2.onClick, onCancel),\n      disabled: isDisabled\n    });\n  }, [onCancel, isDisabled]);\n  return {\n    isEditing: isEditing,\n    isDisabled: isDisabled,\n    isValueEmpty: isValueEmpty,\n    value: value,\n    onEdit: onEdit,\n    onCancel: onCancel,\n    onSubmit: onSubmit,\n    getPreviewProps: getPreviewProps,\n    getInputProps: getInputProps,\n    getTextareaProps: getTextareaProps,\n    getEditButtonProps: getEditButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    htmlProps: htmlProps\n  };\n}\nexport { useEditable };","map":{"version":3,"names":["useFocusOnPointerDown","useSafeLayoutEffect","useUpdateEffect","useControllableState","mergeRefs","useCallbackRef","ariaAttr","callAllHandlers","useCallback","useEffect","useRef","useState","contains","parent","child","useEditable","props","arguments","length","undefined","onChangeProp","onChange","onCancelProp","onCancel","onSubmitProp","onSubmit","onBlurProp","onBlur","valueProp","value","isDisabled","defaultValue","startWithEditView","_props$isPreviewFocus","isPreviewFocusable","_props$submitOnBlur","submitOnBlur","_props$selectAllOnFoc","selectAllOnFocus","placeholder","onEditCallback","onEdit","finalFocusRef","htmlProps","_objectWithoutProperties","_excluded","onEditProp","defaultIsEditing","Boolean","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useControllableState","_useControllableState2","setValue","_useState3","_useState4","prevValue","setPrevValue","inputRef","previewRef","editButtonRef","cancelButtonRef","submitButtonRef","ref","enabled","elements","isInteractive","_a","_b","current","focus","select","_c","_d","onUpdatePrevValue","inputEl","ownerDocument","activeElement","blur","event","currentTarget","onKeyDown","eventKey","key","keyMap","Escape","Enter","event2","shiftKey","metaKey","action","preventDefault","onKeyDownWithoutSubmit","isValueEmpty","doc","relatedTarget","targetIsCancel","targetIsSubmit","isValidBlur","getPreviewProps","props2","tabIndex","_objectSpread","children","hidden","onFocus","getInputProps","disabled","getTextareaProps","getEditButtonProps","type","onClick","getSubmitButtonProps","getCancelButtonProps","id"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/editable/src/use-editable.ts"],"sourcesContent":["import { useFocusOnPointerDown } from \"@chakra-ui/react-use-focus-on-pointer-down\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { useCallback, useEffect, useRef, useState, RefObject } from \"react\"\n\ninterface FocusableElement {\n  focus(options?: FocusOptions): void\n}\n\nexport interface UseEditableProps {\n  /**\n   * The value of the Editable in both edit & preview mode\n   */\n  value?: string\n  /**\n   * The initial value of the Editable in both edit & preview mode\n   */\n  defaultValue?: string\n  /**\n   * If `true`, the Editable will be disabled.\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the Editable will start with edit mode by default.\n   */\n  startWithEditView?: boolean\n  /**\n   * If `true`, the read only view, has a `tabIndex` set to `0`\n   * so it can receive focus via the keyboard or click.\n   * @default true\n   */\n  isPreviewFocusable?: boolean\n  /**\n   * If `true`, it'll update the value onBlur and turn off the edit mode.\n   * @default true\n   */\n  submitOnBlur?: boolean\n  /**\n   * Callback invoked when user changes input.\n   */\n  onChange?: (nextValue: string) => void\n  /**\n   * Callback invoked when user cancels input with the `Esc` key.\n   * It provides the last confirmed value as argument.\n   */\n  onCancel?: (previousValue: string) => void\n  /**\n   * Callback invoked when user confirms value with `enter` key or by blurring input.\n   */\n  onSubmit?: (nextValue: string) => void\n  /**\n   * Callback invoked once the user enters edit mode.\n   */\n  onEdit?: () => void\n  /**\n   * Callback invoked when the user either submits or cancels.\n   * It provides the last confirmed value as argument.\n   */\n  onBlur?: (nextValue: string) => void\n  /**\n   * If `true`, the input's text will be highlighted on focus.\n   * @default true\n   */\n  selectAllOnFocus?: boolean\n  /**\n   * The placeholder text when the value is empty.\n   */\n  placeholder?: string\n  /**\n   * The `ref` of element to receive focus when the modal closes.\n   */\n  finalFocusRef?: RefObject<FocusableElement>\n}\n\nfunction contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\n/**\n * React hook for managing the inline renaming of some text.\n *\n * @see Docs https://chakra-ui.com/editable\n */\nexport function useEditable(props: UseEditableProps = {}) {\n  const {\n    onChange: onChangeProp,\n    onCancel: onCancelProp,\n    onSubmit: onSubmitProp,\n    onBlur: onBlurProp,\n    value: valueProp,\n    isDisabled,\n    defaultValue,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    placeholder,\n    onEdit: onEditCallback,\n    finalFocusRef,\n    ...htmlProps\n  } = props\n\n  const onEditProp = useCallbackRef(onEditCallback)\n\n  const defaultIsEditing = Boolean(startWithEditView && !isDisabled)\n\n  const [isEditing, setIsEditing] = useState(defaultIsEditing)\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  /**\n   * Keep track of the previous value, so if users\n   * presses `cancel`, we can revert to it.\n   */\n  const [prevValue, setPrevValue] = useState(value)\n\n  /**\n   * Ref to help focus the input in edit mode\n   */\n  const inputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n  const previewRef = useRef<any>(null)\n\n  const editButtonRef = useRef<HTMLButtonElement>(null)\n  const cancelButtonRef = useRef<HTMLElement>(null)\n  const submitButtonRef = useRef<HTMLElement>(null)\n\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelButtonRef, submitButtonRef],\n  })\n\n  const isInteractive = !isEditing && !isDisabled\n\n  useSafeLayoutEffect(() => {\n    if (isEditing) {\n      inputRef.current?.focus()\n      if (selectAllOnFocus) inputRef.current?.select()\n    }\n  }, [])\n\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      if (finalFocusRef) {\n        finalFocusRef.current?.focus()\n      } else {\n        editButtonRef.current?.focus()\n      }\n      return\n    }\n\n    inputRef.current?.focus()\n\n    if (selectAllOnFocus) {\n      inputRef.current?.select()\n    }\n\n    onEditProp?.()\n  }, [isEditing, onEditProp, selectAllOnFocus])\n\n  const onEdit = useCallback(() => {\n    if (isInteractive) {\n      setIsEditing(true)\n    }\n  }, [isInteractive])\n\n  const onUpdatePrevValue = useCallback(() => {\n    setPrevValue(value)\n  }, [value])\n\n  const onCancel = useCallback(() => {\n    setIsEditing(false)\n    setValue(prevValue)\n    onCancelProp?.(prevValue)\n    onBlurProp?.(prevValue)\n  }, [onCancelProp, onBlurProp, setValue, prevValue])\n\n  const onSubmit = useCallback(() => {\n    setIsEditing(false)\n    setPrevValue(value)\n    onSubmitProp?.(value)\n    onBlurProp?.(prevValue)\n  }, [value, onSubmitProp, onBlurProp, prevValue])\n\n  useEffect(() => {\n    if (isEditing) return\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=559561\n    const inputEl = inputRef.current\n    if (inputEl?.ownerDocument.activeElement === inputEl) {\n      inputEl?.blur()\n    }\n  }, [isEditing])\n\n  const onChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      setValue(event.currentTarget.value)\n    },\n    [setValue],\n  )\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Escape: onCancel,\n        Enter: (event) => {\n          if (!event.shiftKey && !event.metaKey) {\n            onSubmit()\n          }\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [onCancel, onSubmit],\n  )\n\n  const onKeyDownWithoutSubmit = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Escape: onCancel,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [onCancel],\n  )\n\n  const isValueEmpty = value.length === 0\n\n  const onBlur = useCallback(\n    (event: React.FocusEvent) => {\n      if (!isEditing) return\n      const doc = event.currentTarget.ownerDocument\n      const relatedTarget = (event.relatedTarget ??\n        doc.activeElement) as HTMLElement\n      const targetIsCancel = contains(cancelButtonRef.current, relatedTarget)\n      const targetIsSubmit = contains(submitButtonRef.current, relatedTarget)\n      const isValidBlur = !targetIsCancel && !targetIsSubmit\n\n      if (isValidBlur) {\n        if (submitOnBlur) {\n          onSubmit()\n        } else {\n          onCancel()\n        }\n      }\n    },\n    [submitOnBlur, onSubmit, onCancel, isEditing],\n  )\n\n  const getPreviewProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const tabIndex = isInteractive && isPreviewFocusable ? 0 : undefined\n      return {\n        ...props,\n        ref: mergeRefs(ref, previewRef),\n        children: isValueEmpty ? placeholder : value,\n        hidden: isEditing,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        tabIndex,\n        onFocus: callAllHandlers(props.onFocus, onEdit, onUpdatePrevValue),\n      }\n    },\n    [\n      isDisabled,\n      isEditing,\n      isInteractive,\n      isPreviewFocusable,\n      isValueEmpty,\n      onEdit,\n      onUpdatePrevValue,\n      placeholder,\n      value,\n    ],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, onUpdatePrevValue),\n    }),\n    [\n      isDisabled,\n      isEditing,\n      onBlur,\n      onChange,\n      onKeyDown,\n      onUpdatePrevValue,\n      placeholder,\n      value,\n    ],\n  )\n\n  const getTextareaProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      hidden: !isEditing,\n      placeholder,\n      ref: mergeRefs(ref, inputRef),\n      disabled: isDisabled,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      value,\n      onBlur: callAllHandlers(props.onBlur, onBlur),\n      onChange: callAllHandlers(props.onChange, onChange),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDownWithoutSubmit),\n      onFocus: callAllHandlers(props.onFocus, onUpdatePrevValue),\n    }),\n    [\n      isDisabled,\n      isEditing,\n      onBlur,\n      onChange,\n      onKeyDownWithoutSubmit,\n      onUpdatePrevValue,\n      placeholder,\n      value,\n    ],\n  )\n\n  const getEditButtonProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      \"aria-label\": \"Edit\",\n      ...props,\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onEdit),\n      ref: mergeRefs(ref, editButtonRef),\n      disabled: isDisabled,\n    }),\n    [onEdit, isDisabled],\n  )\n\n  const getSubmitButtonProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      \"aria-label\": \"Submit\",\n      ref: mergeRefs(submitButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onSubmit),\n      disabled: isDisabled,\n    }),\n    [onSubmit, isDisabled],\n  )\n\n  const getCancelButtonProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      \"aria-label\": \"Cancel\",\n      id: \"cancel\",\n      ...props,\n      ref: mergeRefs(cancelButtonRef, ref),\n      type: \"button\",\n      onClick: callAllHandlers(props.onClick, onCancel),\n      disabled: isDisabled,\n    }),\n    [onCancel, isDisabled],\n  )\n\n  return {\n    isEditing,\n    isDisabled,\n    isValueEmpty,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getTextareaProps,\n    getEditButtonProps,\n    getSubmitButtonProps,\n    getCancelButtonProps,\n    htmlProps,\n  }\n}\n\nexport type UseEditableReturn = ReturnType<typeof useEditable>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}