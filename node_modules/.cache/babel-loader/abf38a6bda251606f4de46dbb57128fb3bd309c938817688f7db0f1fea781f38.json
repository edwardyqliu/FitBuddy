{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"icon\", \"iconSpacing\", \"command\", \"commandSpacing\", \"children\"];\nimport { MenuCommand } from \"./chunk-4CNGLKYX.mjs\";\nimport { StyledMenuItem } from \"./chunk-M565QO7N.mjs\";\nimport { MenuIcon } from \"./chunk-HB6KBUMZ.mjs\";\nimport { useMenuItem } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-item.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuItem = forwardRef(function (props, ref) {\n  var icon = props.icon,\n    _props$iconSpacing = props.iconSpacing,\n    iconSpacing = _props$iconSpacing === void 0 ? \"0.75rem\" : _props$iconSpacing,\n    command = props.command,\n    _props$commandSpacing = props.commandSpacing,\n    commandSpacing = _props$commandSpacing === void 0 ? \"0.75rem\" : _props$commandSpacing,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var menuitemProps = useMenuItem(rest, ref);\n  var shouldWrap = icon || command;\n  var _children = shouldWrap ? /* @__PURE__ */jsx(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    },\n    children: children\n  }) : children;\n  return /* @__PURE__ */jsxs(StyledMenuItem, _objectSpread(_objectSpread({}, menuitemProps), {}, {\n    className: cx(\"chakra-menu__menuitem\", menuitemProps.className),\n    children: [icon && /* @__PURE__ */jsx(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      children: icon\n    }), _children, command && /* @__PURE__ */jsx(MenuCommand, {\n      marginStart: commandSpacing,\n      children: command\n    })]\n  }));\n});\nMenuItem.displayName = \"MenuItem\";\nexport { MenuItem };","map":{"version":3,"names":["forwardRef","cx","jsx","jsxs","MenuItem","props","ref","icon","_props$iconSpacing","iconSpacing","command","_props$commandSpacing","commandSpacing","children","rest","_objectWithoutProperties","_excluded","menuitemProps","useMenuItem","shouldWrap","_children","style","pointerEvents","flex","StyledMenuItem","_objectSpread","className","MenuIcon","fontSize","marginEnd","MenuCommand","marginStart","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/menu/src/menu-item.tsx"],"sourcesContent":["import { forwardRef, HTMLChakraProps, SystemProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { MenuCommand } from \"./menu-command\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { useMenuItem, UseMenuItemProps } from \"./use-menu\"\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\n/**\n * Use prop `isDisabled` instead\n */\ntype IsDisabledProps = \"disabled\" | \"aria-disabled\"\n\nexport interface MenuItemProps\n  extends Omit<HTMLChakraProps<\"button\">, IsDisabledProps>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nMenuItem.displayName = \"MenuItem\"\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAA,QAAgD;AACzD,SAASC,EAAA,QAAU;AA6Df,SAAAC,GAAA,EAMAC,IAAA,QANA;AAfG,IAAMC,QAAA,GAAWJ,UAAA,CAAoC,UAACK,KAAA,EAAOC,GAAA,EAAQ;EAC1E,IACEC,IAAA,GAMEF,KAAA,CANFE,IAAA;IAAAC,kBAAA,GAMEH,KAAA,CALFI,WAAA;IAAAA,WAAA,GAAAD,kBAAA,cAAc,YAAAA,kBAAA;IACdE,OAAA,GAIEL,KAAA,CAJFK,OAAA;IAAAC,qBAAA,GAIEN,KAAA,CAHFO,cAAA;IAAAA,cAAA,GAAAD,qBAAA,cAAiB,YAAAA,qBAAA;IACjBE,QAAA,GAEER,KAAA,CAFFQ,QAAA;IACGC,IAAA,GAAAC,wBAAA,CACDV,KAAA,EAAAW,SAAA;EAEJ,IAAMC,aAAA,GAAgBC,WAAA,CAAYJ,IAAA,EAAMR,GAAG;EAE3C,IAAMa,UAAA,GAAaZ,IAAA,IAAQG,OAAA;EAE3B,IAAMU,SAAA,GAAYD,UAAA,GAChB,eAAAjB,GAAA,CAAC;IAAKmB,KAAA,EAAO;MAAEC,aAAA,EAAe;MAAQC,IAAA,EAAM;IAAE;IAAIV,QAAA,EAAAA;EAAA,CAAS,IAE3DA,QAAA;EAGF,OACE,eAAAV,IAAA,CAACqB,cAAA,EAAAC,aAAA,CAAAA,aAAA,KACKR,aAAA;IACJS,SAAA,EAAWzB,EAAA,CAAG,yBAAyBgB,aAAA,CAAcS,SAAS;IAE7Db,QAAA,GAAAN,IAAA,IACC,eAAAL,GAAA,CAACyB,QAAA;MAASC,QAAA,EAAS;MAAQC,SAAA,EAAWpB,WAAA;MACnCI,QAAA,EAAAN;IAAA,CACH,GAEDa,SAAA,EACAV,OAAA,IACC,eAAAR,GAAA,CAAC4B,WAAA;MAAYC,WAAA,EAAanB,cAAA;MAAiBC,QAAA,EAAAH;IAAA,CAAQ;EAAA,EAEvD;AAEJ,CAAC;AAEDN,QAAA,CAAS4B,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}