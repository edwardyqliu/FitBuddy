{"ast":null,"code":"'use client';\n\n// src/use-attr-observer.ts\nimport _createForOfIteratorHelper from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(function () {\n    var _a;\n    if (!ref.current || !enabled) return;\n    var win = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    var attrs = Array.isArray(attributes) ? attributes : [attributes];\n    var obs = new win.MutationObserver(function (changes) {\n      var _iterator = _createForOfIteratorHelper(changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n            fn(change);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return function () {\n      return obs.disconnect();\n    };\n  });\n}\nexport { useAttributeObserver };","map":{"version":3,"names":["useEffect","useAttributeObserver","ref","attributes","fn","enabled","_a","current","win","ownerDocument","defaultView","window","attrs","Array","isArray","obs","MutationObserver","changes","_iterator","_createForOfIteratorHelper","_step","s","n","done","change","value","type","attributeName","includes","err","e","f","observe","attributeFilter","disconnect"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/number-input/src/use-attr-observer.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\nexport function useAttributeObserver(\n  ref: React.RefObject<HTMLElement | null>,\n  attributes: string | string[],\n  fn: (v: MutationRecord) => void,\n  enabled: boolean,\n) {\n  useEffect(() => {\n    if (!ref.current || !enabled) return\n    const win = ref.current.ownerDocument.defaultView ?? window\n    const attrs = Array.isArray(attributes) ? attributes : [attributes]\n    const obs = new win.MutationObserver((changes) => {\n      for (const change of changes) {\n        if (\n          change.type === \"attributes\" &&\n          change.attributeName &&\n          attrs.includes(change.attributeName)\n        ) {\n          fn(change)\n        }\n      }\n    })\n\n    obs.observe(ref.current, { attributes: true, attributeFilter: attrs })\n\n    return () => obs.disconnect()\n  })\n}\n"],"mappings":";;;;AAAA,SAASA,SAAA,QAAiB;AAEnB,SAASC,qBACdC,GAAA,EACAC,UAAA,EACAC,EAAA,EACAC,OAAA,EACA;EACAL,SAAA,CAAU,YAAM;IARlB,IAAAM,EAAA;IASI,IAAI,CAACJ,GAAA,CAAIK,OAAA,IAAW,CAACF,OAAA,EAAS;IAC9B,IAAMG,GAAA,IAAMF,EAAA,GAAAJ,GAAA,CAAIK,OAAA,CAAQE,aAAA,CAAcC,WAAA,KAA1B,OAAAJ,EAAA,GAAyCK,MAAA;IACrD,IAAMC,KAAA,GAAQC,KAAA,CAAMC,OAAA,CAAQX,UAAU,IAAIA,UAAA,GAAa,CAACA,UAAU;IAClE,IAAMY,GAAA,GAAM,IAAIP,GAAA,CAAIQ,gBAAA,CAAiB,UAACC,OAAA,EAAY;MAAA,IAAAC,SAAA,GAAAC,0BAAA,CAC3BF,OAAA;QAAAG,KAAA;MAAA;QAArB,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8B;UAAA,IAAnBC,MAAA,GAAAJ,KAAA,CAAAK,KAAA;UACT,IACED,MAAA,CAAOE,IAAA,KAAS,gBAChBF,MAAA,CAAOG,aAAA,IACPf,KAAA,CAAMgB,QAAA,CAASJ,MAAA,CAAOG,aAAa,GACnC;YACAvB,EAAA,CAAGoB,MAAM;UACX;QACF;MAAA,SAAAK,GAAA;QAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;MAAA;QAAAX,SAAA,CAAAa,CAAA;MAAA;IACF,CAAC;IAEDhB,GAAA,CAAIiB,OAAA,CAAQ9B,GAAA,CAAIK,OAAA,EAAS;MAAEJ,UAAA,EAAY;MAAM8B,eAAA,EAAiBrB;IAAM,CAAC;IAErE,OAAO;MAAA,OAAMG,GAAA,CAAImB,UAAA,CAAW;IAAA;EAC9B,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}