{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"motionProps\"];\nimport { useAccordionContext } from \"./chunk-74QY6M57.mjs\";\nimport { useAccordionItemContext, useAccordionStyles } from \"./chunk-RUEU7BLR.mjs\";\n\n// src/accordion-panel.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AccordionPanel = forwardRef(function AccordionPanel2(props, ref) {\n  var className = props.className,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useAccordionContext = useAccordionContext(),\n    reduceMotion = _useAccordionContext.reduceMotion;\n  var _useAccordionItemCont = useAccordionItemContext(),\n    getPanelProps = _useAccordionItemCont.getPanelProps,\n    isOpen = _useAccordionItemCont.isOpen;\n  var panelProps = getPanelProps(rest, ref);\n  var _className = cx(\"chakra-accordion__panel\", className);\n  var styles = useAccordionStyles();\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n  var child = /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, panelProps), {}, {\n    __css: styles.panel,\n    className: _className\n  }));\n  if (!reduceMotion) {\n    return /* @__PURE__ */jsx(Collapse, _objectSpread(_objectSpread({\n      in: isOpen\n    }, motionProps), {}, {\n      children: child\n    }));\n  }\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\";\nexport { AccordionPanel };","map":{"version":3,"names":["chakra","forwardRef","Collapse","cx","jsx","AccordionPanel","AccordionPanel2","props","ref","className","motionProps","rest","_objectWithoutProperties","_excluded","_useAccordionContext","useAccordionContext","reduceMotion","_useAccordionItemCont","useAccordionItemContext","getPanelProps","isOpen","panelProps","_className","styles","useAccordionStyles","hidden","child","div","_objectSpread","__css","panel","in","children","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/accordion/src/accordion-panel.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { Collapse, CollapseProps } from \"@chakra-ui/transition\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  useAccordionItemContext,\n  useAccordionStyles,\n} from \"./accordion-context\"\nimport { useAccordionContext } from \"./use-accordion\"\n\nexport interface AccordionPanelProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The properties passed to the underlying `Collapse` component.\n   */\n  motionProps?: CollapseProps\n}\n\n/**\n * Accordion panel that holds the content for each accordion.\n * It shows and hides based on the state login from the `AccordionItem`.\n *\n * It uses the `Collapse` component to animate its height.\n */\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  function AccordionPanel(props, ref) {\n    const { className, motionProps, ...rest } = props\n\n    const { reduceMotion } = useAccordionContext()\n    const { getPanelProps, isOpen } = useAccordionItemContext()\n\n    // remove `hidden` prop, 'coz we're using height animation\n    const panelProps = getPanelProps(rest, ref)\n\n    const _className = cx(\"chakra-accordion__panel\", className)\n    const styles = useAccordionStyles()\n\n    if (!reduceMotion) {\n      delete panelProps.hidden\n    }\n\n    const child = (\n      <chakra.div {...panelProps} __css={styles.panel} className={_className} />\n    )\n\n    if (!reduceMotion) {\n      return (\n        <Collapse in={isOpen} {...motionProps}>\n          {child}\n        </Collapse>\n      )\n    }\n\n    return child\n  },\n)\n\nAccordionPanel.displayName = \"AccordionPanel\"\n"],"mappings":";;;;;;;;;AAAA,SAASA,MAAA,EAAQC,UAAA,QAAmC;AACpD,SAASC,QAAA,QAA+B;AACxC,SAASC,EAAA,QAAU;AAsCb,SAAAC,GAAA;AAlBC,IAAMC,cAAA,GAAiBJ,UAAA,CAC5B,SAASK,gBAAeC,KAAA,EAAOC,GAAA,EAAK;EAClC,IAAQC,SAAA,GAAoCF,KAAA,CAApCE,SAAA;IAAWC,WAAA,GAAyBH,KAAA,CAAzBG,WAAA;IAAgBC,IAAA,GAAAC,wBAAA,CAASL,KAAA,EAAAM,SAAA;EAE5C,IAAAC,oBAAA,GAAyBC,mBAAA,CAAoB;IAArCC,YAAA,GAAAF,oBAAA,CAAAE,YAAA;EACR,IAAAC,qBAAA,GAAkCC,uBAAA,CAAwB;IAAlDC,aAAA,GAAAF,qBAAA,CAAAE,aAAA;IAAeC,MAAA,GAAAH,qBAAA,CAAAG,MAAA;EAGvB,IAAMC,UAAA,GAAaF,aAAA,CAAcR,IAAA,EAAMH,GAAG;EAE1C,IAAMc,UAAA,GAAanB,EAAA,CAAG,2BAA2BM,SAAS;EAC1D,IAAMc,MAAA,GAASC,kBAAA,CAAmB;EAElC,IAAI,CAACR,YAAA,EAAc;IACjB,OAAOK,UAAA,CAAWI,MAAA;EACpB;EAEA,IAAMC,KAAA,GACJ,eAAAtB,GAAA,CAACJ,MAAA,CAAO2B,GAAA,EAAAC,aAAA,CAAAA,aAAA,KAAQP,UAAA;IAAYQ,KAAA,EAAON,MAAA,CAAOO,KAAA;IAAOrB,SAAA,EAAWa;EAAA,EAAY;EAG1E,IAAI,CAACN,YAAA,EAAc;IACjB,OACE,eAAAZ,GAAA,CAACF,QAAA,EAAA0B,aAAA,CAAAA,aAAA;MAASG,EAAA,EAAIX;IAAA,GAAYV,WAAA;MACvBsB,QAAA,EAAAN;IAAA,EACH;EAEJ;EAEA,OAAOA,KAAA;AACT,CACF;AAEArB,cAAA,CAAe4B,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}