{"ast":null,"code":"'use client';\n\n// src/use-image.ts\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  var loading = props.loading,\n    src = props.src,\n    srcSet = props.srcSet,\n    onLoad = props.onLoad,\n    onError = props.onError,\n    crossOrigin = props.crossOrigin,\n    sizes = props.sizes,\n    ignoreFallback = props.ignoreFallback;\n  var _useState = useState(\"pending\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(function () {\n    if (ignoreFallback) return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = function shouldShowFallbackImage(status, fallbackStrategy) {\n  return status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n};\nexport { useImage, shouldShowFallbackImage };","map":{"version":3,"names":["useSafeLayoutEffect","useCallback","useEffect","useRef","useState","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","_useState","_useState2","_slicedToArray","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","event","onerror","error","current","shouldShowFallbackImage","fallbackStrategy"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/image/src/use-image.ts"],"sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n"],"mappings":";;;;AAAA,SAASA,mBAAA,QAA2B;AACpC,SAASC,WAAA,EAAaC,SAAA,EAAWC,MAAA,EAAQC,QAAA,QAAgB;AA6DlD,SAASC,SAASC,KAAA,EAAsB;EAC7C,IACEC,OAAA,GAQED,KAAA,CARFC,OAAA;IACAC,GAAA,GAOEF,KAAA,CAPFE,GAAA;IACAC,MAAA,GAMEH,KAAA,CANFG,MAAA;IACAC,MAAA,GAKEJ,KAAA,CALFI,MAAA;IACAC,OAAA,GAIEL,KAAA,CAJFK,OAAA;IACAC,WAAA,GAGEN,KAAA,CAHFM,WAAA;IACAC,KAAA,GAEEP,KAAA,CAFFO,KAAA;IACAC,cAAA,GACER,KAAA,CADFQ,cAAA;EAGF,IAAAC,SAAA,GAA4BX,QAAA,CAAiB,SAAS;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,MAAA,GAAAF,UAAA;IAAQG,SAAS,GAAAH,UAAA;EAExBd,SAAA,CAAU,YAAM;IACdiB,SAAA,CAAUX,GAAA,GAAM,YAAY,SAAS;EACvC,GAAG,CAACA,GAAG,CAAC;EAER,IAAMY,QAAA,GAAWjB,MAAA,CAAgC;EAEjD,IAAMkB,IAAA,GAAOpB,WAAA,CAAY,YAAM;IAC7B,IAAI,CAACO,GAAA,EAAK;IAEVc,KAAA,CAAM;IAEN,IAAMC,GAAA,GAAM,IAAIC,KAAA,CAAM;IACtBD,GAAA,CAAIf,GAAA,GAAMA,GAAA;IACV,IAAII,WAAA,EAAaW,GAAA,CAAIX,WAAA,GAAcA,WAAA;IACnC,IAAIH,MAAA,EAAQc,GAAA,CAAIE,MAAA,GAAShB,MAAA;IACzB,IAAII,KAAA,EAAOU,GAAA,CAAIV,KAAA,GAAQA,KAAA;IACvB,IAAIN,OAAA,EAASgB,GAAA,CAAIhB,OAAA,GAAUA,OAAA;IAE3BgB,GAAA,CAAIG,MAAA,GAAS,UAACC,KAAA,EAAU;MACtBL,KAAA,CAAM;MACNH,SAAA,CAAU,QAAQ;MAClBT,MAAA,oBAAAA,MAAA,CAASiB,KAAA;IACX;IACAJ,GAAA,CAAIK,OAAA,GAAU,UAACC,KAAA,EAAU;MACvBP,KAAA,CAAM;MACNH,SAAA,CAAU,QAAQ;MAClBR,OAAA,oBAAAA,OAAA,CAAUkB,KAAA;IACZ;IAEAT,QAAA,CAASU,OAAA,GAAUP,GAAA;EACrB,GAAG,CAACf,GAAA,EAAKI,WAAA,EAAaH,MAAA,EAAQI,KAAA,EAAOH,MAAA,EAAQC,OAAA,EAASJ,OAAO,CAAC;EAE9D,IAAMe,KAAA,GAAQ,SAARA,MAAA,EAAc;IAClB,IAAIF,QAAA,CAASU,OAAA,EAAS;MACpBV,QAAA,CAASU,OAAA,CAAQJ,MAAA,GAAS;MAC1BN,QAAA,CAASU,OAAA,CAAQF,OAAA,GAAU;MAC3BR,QAAA,CAASU,OAAA,GAAU;IACrB;EACF;EAEA9B,mBAAA,CAAoB,YAAM;IAKxB,IAAIc,cAAA,EAAgB,OAAO;IAE3B,IAAII,MAAA,KAAW,WAAW;MACxBG,IAAA,CAAK;IACP;IACA,OAAO,YAAM;MACXC,KAAA,CAAM;IACR;EACF,GAAG,CAACJ,MAAA,EAAQG,IAAA,EAAMP,cAAc,CAAC;EAMjC,OAAOA,cAAA,GAAiB,WAAWI,MAAA;AACrC;AAEO,IAAMa,uBAAA,GAA0B,SAA1BA,wBACXb,MAAA,EACAc,gBAAA;EAAA,OAECd,MAAA,KAAW,YAAYc,gBAAA,KAAqB,uBAC5Cd,MAAA,KAAW,YAAYc,gBAAA,KAAqB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}