{"ast":null,"code":"'use client';\n\n// src/heading.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  var styles = useStyleConfig(\"Heading\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  return /* @__PURE__ */jsx(chakra.h2, _objectSpread(_objectSpread({\n    ref: ref,\n    className: cx(\"chakra-heading\", props.className)\n  }, rest), {}, {\n    __css: styles\n  }));\n});\nHeading.displayName = \"Heading\";\nexport { Heading };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","jsx","Heading","Heading2","props","ref","styles","_omitThemingProps","className","rest","_objectWithoutProperties","_excluded","h2","_objectSpread","__css","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"mappings":";;;;;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAEAC,cAAA,QAEK;AACP,SAASC,EAAA,QAAU;AAqBf,SAAAC,GAAA;AARG,IAAMC,OAAA,GAAUL,UAAA,CAA+B,SAASM,SAC7DC,KAAA,EACAC,GAAA,EACA;EACA,IAAMC,MAAA,GAASP,cAAA,CAAe,WAAWK,KAAK;EAC9C,IAAAG,iBAAA,GAA+BT,gBAAA,CAAiBM,KAAK;IAA7CI,SAAA,GAAAD,iBAAA,CAAAC,SAAA;IAAcC,IAAA,GAAAC,wBAAA,CAAAH,iBAAA,EAAAI,SAAA;EAEtB,OACE,eAAAV,GAAA,CAACL,MAAA,CAAOgB,EAAA,EAAAC,aAAA,CAAAA,aAAA;IACNR,GAAA,EAAAA,GAAA;IACAG,SAAA,EAAWR,EAAA,CAAG,kBAAkBI,KAAA,CAAMI,SAAS;EAAA,GAC3CC,IAAA;IACJK,KAAA,EAAOR;EAAA,EACT;AAEJ,CAAC;AAEDJ,OAAA,CAAQa,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}