{"ast":null,"code":"import _toConsumableArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { fromEntries } from \"./chunk-YTQ3XZ3T.mjs\";\nimport { getLastItem } from \"./chunk-YTAYUX3P.mjs\";\nimport { isNumber, isObject } from \"./chunk-Y5FGD7DM.mjs\";\n\n// src/breakpoint.ts\nfunction analyzeCSSValue(value) {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit: unit\n  };\n}\nfunction px(value) {\n  if (value == null) return value;\n  var _analyzeCSSValue = analyzeCSSValue(value),\n    unitless = _analyzeCSSValue.unitless;\n  return unitless || isNumber(value) ? \"\".concat(value, \"px\") : value;\n}\nvar sortByBreakpointValue = function sortByBreakpointValue(a, b) {\n  return parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\n};\nvar sortBps = function sortBps(breakpoints) {\n  return fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\n};\nfunction normalize(breakpoints) {\n  var sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints) {\n  var value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value) return value;\n  value = (_a = px(value)) != null ? _a : value;\n  var factor = value.endsWith(\"px\") ? -0.02 : -0.01;\n  return isNumber(value) ? \"\".concat(value + factor) : value.replace(/([0-9]+\\.?[0-9]*)/, function (m) {\n    return \"\".concat(parseFloat(m) + factor);\n  });\n}\nfunction toMediaQueryString(min, max) {\n  var query = [\"@media screen\"];\n  if (min) query.push(\"and\", \"(min-width: \".concat(px(min), \")\"));\n  if (max) query.push(\"and\", \"(max-width: \".concat(px(max), \")\"));\n  return query.join(\" \");\n}\nfunction analyzeBreakpoints(breakpoints) {\n  var _a;\n  if (!breakpoints) return null;\n  breakpoints.base = (_a = breakpoints.base) != null ? _a : \"0px\";\n  var normalized = normalize(breakpoints);\n  var queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(function (_ref, index, entry) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      breakpoint = _ref2[0],\n      minW = _ref2[1];\n    var _a2;\n    var _ref3 = (_a2 = entry[index + 1]) != null ? _a2 : [],\n      _ref4 = _slicedToArray(_ref3, 2),\n      maxW = _ref4[1];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint: breakpoint,\n      minW: minW,\n      maxW: maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n  var _keys = keys(breakpoints);\n  var _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized: normalized,\n    isResponsive: function isResponsive(test) {\n      var keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every(function (key) {\n        return _keys.has(key);\n      });\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    media: [null].concat(_toConsumableArray(normalized.map(function (minW) {\n      return toMediaQueryString(minW);\n    }).slice(1))),\n    toArrayValue: function toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      var result = _keysArr.map(function (bp) {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue: function toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce(function (acc, value, index) {\n        var key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\nexport { px, toMediaQueryString, analyzeBreakpoints };","map":{"version":3,"names":["fromEntries","getLastItem","isNumber","isObject","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","px","_analyzeCSSValue","concat","sortByBreakpointValue","a","b","parseInt","sortBps","breakpoints","Object","entries","sort","normalize","sorted","assign","values","keys","Set","subtract","_a","factor","endsWith","m","toMediaQueryString","min","max","query","push","join","analyzeBreakpoints","base","normalized","queries","map","_ref","index","entry","_ref2","_slicedToArray","breakpoint","minW","_a2","_ref3","_ref4","maxW","_minW","maxWQuery","minWQuery","minMaxQuery","_keys","_keysArr","Array","from","isResponsive","test","keys2","length","every","key","has","asObject","asArray","details","media","_toConsumableArray","slice","toArrayValue","Error","result","bp","pop","toObjectValue","isArray","reduce","acc"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/utils/dist/chunk-FDX7JCYE.mjs"],"sourcesContent":["import {\n  fromEntries\n} from \"./chunk-YTQ3XZ3T.mjs\";\nimport {\n  getLastItem\n} from \"./chunk-YTAYUX3P.mjs\";\nimport {\n  isNumber,\n  isObject\n} from \"./chunk-Y5FGD7DM.mjs\";\n\n// src/breakpoint.ts\nfunction analyzeCSSValue(value) {\n  const num = parseFloat(value.toString());\n  const unit = value.toString().replace(String(num), \"\");\n  return { unitless: !unit, value: num, unit };\n}\nfunction px(value) {\n  if (value == null)\n    return value;\n  const { unitless } = analyzeCSSValue(value);\n  return unitless || isNumber(value) ? `${value}px` : value;\n}\nvar sortByBreakpointValue = (a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\nvar sortBps = (breakpoints) => fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\nfunction normalize(breakpoints) {\n  const sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints) {\n  const value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value)\n    return value;\n  value = (_a = px(value)) != null ? _a : value;\n  const factor = value.endsWith(\"px\") ? -0.02 : -0.01;\n  return isNumber(value) ? `${value + factor}` : value.replace(/(\\d+\\.?\\d*)/u, (m) => `${parseFloat(m) + factor}`);\n}\nfunction toMediaQueryString(min, max) {\n  const query = [\"@media screen\"];\n  if (min)\n    query.push(\"and\", `(min-width: ${px(min)})`);\n  if (max)\n    query.push(\"and\", `(max-width: ${px(max)})`);\n  return query.join(\" \");\n}\nfunction analyzeBreakpoints(breakpoints) {\n  var _a;\n  if (!breakpoints)\n    return null;\n  breakpoints.base = (_a = breakpoints.base) != null ? _a : \"0px\";\n  const normalized = normalize(breakpoints);\n  const queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(([breakpoint, minW], index, entry) => {\n    var _a2;\n    let [, maxW] = (_a2 = entry[index + 1]) != null ? _a2 : [];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n  const _keys = keys(breakpoints);\n  const _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized,\n    isResponsive(test) {\n      const keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every((key) => _keys.has(key));\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    media: [\n      null,\n      ...normalized.map((minW) => toMediaQueryString(minW)).slice(1)\n    ],\n    toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      const result = _keysArr.map((bp) => {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce((acc, value, index) => {\n        const key = _keysArr[index];\n        if (key != null && value != null)\n          acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n\nexport {\n  px,\n  toMediaQueryString,\n  analyzeBreakpoints\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}