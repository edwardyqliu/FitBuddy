{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"src\", \"srcSet\", \"name\", \"showBorder\", \"borderRadius\", \"onError\", \"onLoad\", \"getInitials\", \"icon\", \"iconLabel\", \"loading\", \"children\", \"borderColor\", \"ignoreFallback\", \"crossOrigin\", \"referrerPolicy\"];\nimport { AvatarImage } from \"./chunk-V2ATFO44.mjs\";\nimport { initials } from \"./chunk-O25PJXSD.mjs\";\nimport { AvatarStylesProvider } from \"./chunk-RD3LQCU3.mjs\";\nimport { GenericAvatarIcon } from \"./chunk-CXYPMOCL.mjs\";\n\n// src/avatar.tsx\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Avatar\", props);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoaded = _useState2[0],\n    setIsLoaded = _useState2[1];\n  var _omitThemingProps = omitThemingProps(props),\n    src = _omitThemingProps.src,\n    srcSet = _omitThemingProps.srcSet,\n    name = _omitThemingProps.name,\n    showBorder = _omitThemingProps.showBorder,\n    _omitThemingProps$bor = _omitThemingProps.borderRadius,\n    borderRadius = _omitThemingProps$bor === void 0 ? \"full\" : _omitThemingProps$bor,\n    onError = _omitThemingProps.onError,\n    onLoadProp = _omitThemingProps.onLoad,\n    _omitThemingProps$get = _omitThemingProps.getInitials,\n    getInitials = _omitThemingProps$get === void 0 ? initials : _omitThemingProps$get,\n    _omitThemingProps$ico = _omitThemingProps.icon,\n    icon = _omitThemingProps$ico === void 0 ? /* @__PURE__ */jsx(GenericAvatarIcon, {}) : _omitThemingProps$ico,\n    _omitThemingProps$ico2 = _omitThemingProps.iconLabel,\n    iconLabel = _omitThemingProps$ico2 === void 0 ? \" avatar\" : _omitThemingProps$ico2,\n    loading = _omitThemingProps.loading,\n    children = _omitThemingProps.children,\n    borderColor = _omitThemingProps.borderColor,\n    ignoreFallback = _omitThemingProps.ignoreFallback,\n    crossOrigin = _omitThemingProps.crossOrigin,\n    referrerPolicy = _omitThemingProps.referrerPolicy,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var avatarStyles = _objectSpread(_objectSpread({\n    borderRadius: borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0\n  }, baseStyle), styles.container);\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    ref: ref\n  }, rest), {}, {\n    className: cx(\"chakra-avatar\", props.className),\n    \"data-loaded\": dataAttr(isLoaded),\n    __css: avatarStyles,\n    children: /* @__PURE__ */jsxs(AvatarStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(AvatarImage, {\n        src: src,\n        srcSet: srcSet,\n        loading: loading,\n        onLoad: callAllHandlers(onLoadProp, function () {\n          setIsLoaded(true);\n        }),\n        onError: onError,\n        getInitials: getInitials,\n        name: name,\n        borderRadius: borderRadius,\n        icon: icon,\n        iconLabel: iconLabel,\n        ignoreFallback: ignoreFallback,\n        crossOrigin: crossOrigin,\n        referrerPolicy: referrerPolicy\n      }), children]\n    })\n  }));\n});\nAvatar.displayName = \"Avatar\";\nexport { baseStyle, Avatar };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useMultiStyleConfig","callAllHandlers","cx","dataAttr","useState","jsx","jsxs","baseStyle","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","props","ref","styles","_useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_omitThemingProps","src","srcSet","name","showBorder","_omitThemingProps$bor","borderRadius","onError","onLoadProp","onLoad","_omitThemingProps$get","getInitials","initials","_omitThemingProps$ico","icon","GenericAvatarIcon","_omitThemingProps$ico2","iconLabel","loading","children","borderColor","ignoreFallback","crossOrigin","referrerPolicy","rest","_objectWithoutProperties","_excluded","avatarStyles","_objectSpread","borderWidth","container","span","className","__css","AvatarStylesProvider","value","AvatarImage","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/avatar/src/avatar.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { AvatarStylesProvider } from \"./avatar-context\"\nimport { AvatarImage } from \"./avatar-image\"\nimport { GenericAvatarIcon } from \"./generic-avatar-icon\"\nimport { initials } from \"./avatar-name\"\nimport { AvatarOptions } from \"./avatar-types\"\nimport { useState } from \"react\"\n\nexport const baseStyle: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0,\n}\n\nexport interface AvatarProps\n  extends Omit<HTMLChakraProps<\"span\">, \"onError\">,\n    AvatarOptions,\n    ThemingProps<\"Avatar\"> {\n  crossOrigin?: HTMLChakraProps<\"img\">[\"crossOrigin\"]\n  iconLabel?: string\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and\n   * renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n}\n\n/**\n * Avatar component that renders an user avatar with\n * support for fallback avatar and name-only avatars\n */\nexport const Avatar = forwardRef<AvatarProps, \"span\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = <GenericAvatarIcon />,\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    referrerPolicy,\n    ...rest\n  } = omitThemingProps(props)\n\n  const avatarStyles: SystemStyleObject = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : undefined,\n    ...baseStyle,\n    ...styles.container,\n  }\n\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor\n  }\n\n  return (\n    <chakra.span\n      ref={ref}\n      {...rest}\n      className={cx(\"chakra-avatar\", props.className)}\n      data-loaded={dataAttr(isLoaded)}\n      __css={avatarStyles}\n    >\n      <AvatarStylesProvider value={styles}>\n        <AvatarImage\n          src={src}\n          srcSet={srcSet}\n          loading={loading}\n          onLoad={callAllHandlers(onLoadProp, () => {\n            setIsLoaded(true)\n          })}\n          onError={onError}\n          getInitials={getInitials}\n          name={name}\n          borderRadius={borderRadius}\n          icon={icon}\n          iconLabel={iconLabel}\n          ignoreFallback={ignoreFallback}\n          crossOrigin={crossOrigin}\n          referrerPolicy={referrerPolicy}\n        />\n        {children}\n      </AvatarStylesProvider>\n    </chakra.span>\n  )\n})\n\nAvatar.displayName = \"Avatar\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}