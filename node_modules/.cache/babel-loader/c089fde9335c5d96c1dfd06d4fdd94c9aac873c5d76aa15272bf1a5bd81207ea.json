{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onClick\", \"className\"];\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/modal-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ModalCloseButton = forwardRef(function (props, ref) {\n  var onClick = props.onClick,\n    className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    onClose = _useModalContext.onClose;\n  var _className = cx(\"chakra-modal__close-btn\", className);\n  var styles = useModalStyles();\n  return /* @__PURE__ */jsx(CloseButton, _objectSpread({\n    ref: ref,\n    __css: styles.closeButton,\n    className: _className,\n    onClick: callAllHandlers(onClick, function (event) {\n      event.stopPropagation();\n      onClose();\n    })\n  }, rest));\n});\nModalCloseButton.displayName = \"ModalCloseButton\";\nexport { ModalCloseButton };","map":{"version":3,"names":["CloseButton","cx","callAllHandlers","forwardRef","jsx","ModalCloseButton","props","ref","onClick","className","rest","_objectWithoutProperties","_excluded","_useModalContext","useModalContext","onClose","_className","styles","useModalStyles","_objectSpread","__css","closeButton","event","stopPropagation","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/modal/src/modal-close-button.tsx"],"sourcesContent":["import { CloseButtonProps, CloseButton } from \"@chakra-ui/close-button\"\nimport { cx, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { forwardRef } from \"@chakra-ui/system\"\n\nimport { useModalContext, useModalStyles } from \"./modal\"\n\nexport type ModalCloseButtonProps = CloseButtonProps\n\n/**\n * ModalCloseButton is used closes the modal.\n *\n * You don't need to pass the `onClick` to it, it reads the\n * `onClose` action from the modal context.\n */\nexport const ModalCloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const { onClick, className, ...rest } = props\n    const { onClose } = useModalContext()\n\n    const _className = cx(\"chakra-modal__close-btn\", className)\n\n    const styles = useModalStyles()\n\n    return (\n      <CloseButton\n        ref={ref}\n        __css={styles.closeButton}\n        className={_className}\n        onClick={callAllHandlers(onClick, (event: React.MouseEvent) => {\n          event.stopPropagation()\n          onClose()\n        })}\n        {...rest}\n      />\n    )\n  },\n)\n\nModalCloseButton.displayName = \"ModalCloseButton\"\n"],"mappings":";;;;;;;;AAAA,SAA2BA,WAAA,QAAmB;AAC9C,SAASC,EAAA,EAAIC,eAAA,QAAuB;AACpC,SAASC,UAAA,QAAkB;AAsBrB,SAAAC,GAAA;AAVC,IAAMC,gBAAA,GAAmBF,UAAA,CAC9B,UAACG,KAAA,EAAOC,GAAA,EAAQ;EACd,IAAQC,OAAA,GAAgCF,KAAA,CAAhCE,OAAA;IAASC,SAAA,GAAuBH,KAAA,CAAvBG,SAAA;IAAcC,IAAA,GAAAC,wBAAA,CAASL,KAAA,EAAAM,SAAA;EACxC,IAAAC,gBAAA,GAAoBC,eAAA,CAAgB;IAA5BC,OAAA,GAAAF,gBAAA,CAAAE,OAAA;EAER,IAAMC,UAAA,GAAaf,EAAA,CAAG,2BAA2BQ,SAAS;EAE1D,IAAMQ,MAAA,GAASC,cAAA,CAAe;EAE9B,OACE,eAAAd,GAAA,CAACJ,WAAA,EAAAmB,aAAA;IACCZ,GAAA,EAAAA,GAAA;IACAa,KAAA,EAAOH,MAAA,CAAOI,WAAA;IACdZ,SAAA,EAAWO,UAAA;IACXR,OAAA,EAASN,eAAA,CAAgBM,OAAA,EAAS,UAACc,KAAA,EAA4B;MAC7DA,KAAA,CAAMC,eAAA,CAAgB;MACtBR,OAAA,CAAQ;IACV,CAAC;EAAA,GACGL,IAAA,CACN;AAEJ,CACF;AAEAL,gBAAA,CAAiBmB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}