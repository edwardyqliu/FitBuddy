{"ast":null,"code":"'use client';\n\n// src/code.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Code = forwardRef(function Code2(props, ref) {\n  var styles = useStyleConfig(\"Code\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  return /* @__PURE__ */jsx(chakra.code, _objectSpread(_objectSpread({\n    ref: ref,\n    className: cx(\"chakra-code\", props.className)\n  }, rest), {}, {\n    __css: _objectSpread({\n      display: \"inline-block\"\n    }, styles)\n  }));\n});\nCode.displayName = \"Code\";\nexport { Code };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","jsx","Code","Code2","props","ref","styles","_omitThemingProps","className","rest","_objectWithoutProperties","_excluded","code","_objectSpread","__css","display","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/layout/src/code.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface CodeProps\n  extends HTMLChakraProps<\"code\">,\n    ThemingProps<\"Code\"> {}\n\n/**\n * React component to render inline code snippets.\n *\n * @see Docs https://chakra-ui.com/code\n */\nexport const Code = forwardRef<CodeProps, \"code\">(function Code(props, ref) {\n  const styles = useStyleConfig(\"Code\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.code\n      ref={ref}\n      className={cx(\"chakra-code\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nCode.displayName = \"Code\"\n"],"mappings":";;;;;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAEAC,cAAA,QAEK;AACP,SAASC,EAAA,QAAU;AAgBf,SAAAC,GAAA;AALG,IAAMC,IAAA,GAAOL,UAAA,CAA8B,SAASM,MAAKC,KAAA,EAAOC,GAAA,EAAK;EAC1E,IAAMC,MAAA,GAASP,cAAA,CAAe,QAAQK,KAAK;EAC3C,IAAAG,iBAAA,GAA+BT,gBAAA,CAAiBM,KAAK;IAA7CI,SAAA,GAAAD,iBAAA,CAAAC,SAAA;IAAcC,IAAA,GAAAC,wBAAA,CAAAH,iBAAA,EAAAI,SAAA;EAEtB,OACE,eAAAV,GAAA,CAACL,MAAA,CAAOgB,IAAA,EAAAC,aAAA,CAAAA,aAAA;IACNR,GAAA,EAAAA,GAAA;IACAG,SAAA,EAAWR,EAAA,CAAG,eAAeI,KAAA,CAAMI,SAAS;EAAA,GACxCC,IAAA;IACJK,KAAA,EAAAD,aAAA;MACEE,OAAA,EAAS;IAAA,GACNT,MAAA;EACL,EACF;AAEJ,CAAC;AAEDJ,IAAA,CAAKc,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}