{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { commonStyles } from \"./chunk-6XCKNNTK.mjs\";\nimport { useEditableContext, useEditableStyles } from \"./chunk-WYY72ITE.mjs\";\n\n// src/editable-input.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar EditableInput = forwardRef(function EditableInput2(props, ref) {\n  var _useEditableContext = useEditableContext(),\n    getInputProps = _useEditableContext.getInputProps;\n  var styles = useEditableStyles();\n  var inputProps = getInputProps(props, ref);\n  var _className = cx(\"chakra-editable__input\", props.className);\n  return /* @__PURE__ */jsx(chakra.input, _objectSpread(_objectSpread({}, inputProps), {}, {\n    __css: _objectSpread(_objectSpread({\n      outline: 0\n    }, commonStyles), styles.input),\n    className: _className\n  }));\n});\nEditableInput.displayName = \"EditableInput\";\nexport { EditableInput };","map":{"version":3,"names":["chakra","forwardRef","cx","jsx","EditableInput","EditableInput2","props","ref","_useEditableContext","useEditableContext","getInputProps","styles","useEditableStyles","inputProps","_className","className","input","_objectSpread","__css","outline","commonStyles","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/editable/src/editable-input.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useEditableContext, useEditableStyles } from \"./editable-context\"\nimport { commonStyles } from \"./shared\"\n\nexport interface EditableInputProps extends HTMLChakraProps<\"input\"> {}\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\n\nexport const EditableInput = forwardRef<EditableInputProps, \"input\">(\n  function EditableInput(props, ref) {\n    const { getInputProps } = useEditableContext()\n    const styles = useEditableStyles()\n\n    const inputProps = getInputProps(props, ref)\n    const _className = cx(\"chakra-editable__input\", props.className)\n\n    return (\n      <chakra.input\n        {...inputProps}\n        __css={{\n          outline: 0,\n          ...commonStyles,\n          ...styles.input,\n        }}\n        className={_className}\n      />\n    )\n  },\n)\nEditableInput.displayName = \"EditableInput\"\n"],"mappings":";;;;;;;AAAA,SAASA,MAAA,EAAQC,UAAA,QAAmC;AACpD,SAASC,EAAA,QAAU;AAoBb,SAAAC,GAAA;AATC,IAAMC,aAAA,GAAgBH,UAAA,CAC3B,SAASI,eAAcC,KAAA,EAAOC,GAAA,EAAK;EACjC,IAAAC,mBAAA,GAA0BC,kBAAA,CAAmB;IAArCC,aAAA,GAAAF,mBAAA,CAAAE,aAAA;EACR,IAAMC,MAAA,GAASC,iBAAA,CAAkB;EAEjC,IAAMC,UAAA,GAAaH,aAAA,CAAcJ,KAAA,EAAOC,GAAG;EAC3C,IAAMO,UAAA,GAAaZ,EAAA,CAAG,0BAA0BI,KAAA,CAAMS,SAAS;EAE/D,OACE,eAAAZ,GAAA,CAACH,MAAA,CAAOgB,KAAA,EAAAC,aAAA,CAAAA,aAAA,KACFJ,UAAA;IACJK,KAAA,EAAAD,aAAA,CAAAA,aAAA;MACEE,OAAA,EAAS;IAAA,GACNC,YAAA,GACAT,MAAA,CAAOK,KAAA,CACZ;IACAD,SAAA,EAAWD;EAAA,EACb;AAEJ,CACF;AACAV,aAAA,CAAciB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}