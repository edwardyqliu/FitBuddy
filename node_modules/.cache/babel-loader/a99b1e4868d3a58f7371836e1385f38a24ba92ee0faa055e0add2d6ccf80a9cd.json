{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"children\"];\nimport { useMenuStyles } from \"./chunk-UZJ3TPNQ.mjs\";\n\n// src/menu-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MenuIcon = function MenuIcon(props) {\n  var className = props.className,\n    children = props.children,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = useMenuStyles();\n  var child = Children.only(children);\n  var clone = isValidElement(child) ? cloneElement(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: cx(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  var _className = cx(\"chakra-menu__icon-wrapper\", className);\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    className: _className\n  }, rest), {}, {\n    __css: styles.icon,\n    children: clone\n  }));\n};\nMenuIcon.displayName = \"MenuIcon\";\nexport { MenuIcon };","map":{"version":3,"names":["chakra","cx","Children","cloneElement","isValidElement","jsx","MenuIcon","props","className","children","rest","_objectWithoutProperties","_excluded","styles","useMenuStyles","child","only","clone","focusable","_className","span","_objectSpread","__css","icon","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/menu/src/menu-icon.tsx"],"sourcesContent":["import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n"],"mappings":";;;;;;;;AAAA,SAA0BA,MAAA,QAAc;AACxC,SAASC,EAAA,QAAU;AAEnB,SAASC,QAAA,EAAUC,YAAA,EAAcC,cAAA,QAAsB;AAqBnD,SAAAC,GAAA;AAlBG,IAAMC,QAAA,GAA8C,SAA9CA,SAA+CC,KAAA,EAAU;EACpE,IAAQC,SAAA,GAAiCD,KAAA,CAAjCC,SAAA;IAAWC,QAAA,GAAsBF,KAAA,CAAtBE,QAAA;IAAaC,IAAA,GAAAC,wBAAA,CAASJ,KAAA,EAAAK,SAAA;EAEzC,IAAMC,MAAA,GAASC,aAAA,CAAc;EAE7B,IAAMC,KAAA,GAAQb,QAAA,CAASc,IAAA,CAAKP,QAAQ;EAEpC,IAAMQ,KAAA,GAAQb,cAAA,CAAeW,KAAK,IAC9BZ,YAAA,CAAkBY,KAAA,EAAO;IACvBG,SAAA,EAAW;IACX,eAAe;IACfV,SAAA,EAAWP,EAAA,CAAG,qBAAqBc,KAAA,CAAMR,KAAA,CAAMC,SAAS;EAC1D,CAAC,IACD;EAEJ,IAAMW,UAAA,GAAalB,EAAA,CAAG,6BAA6BO,SAAS;EAE5D,OACE,eAAAH,GAAA,CAACL,MAAA,CAAOoB,IAAA,EAAAC,aAAA,CAAAA,aAAA;IAAKb,SAAA,EAAWW;EAAA,GAAgBT,IAAA;IAAMY,KAAA,EAAOT,MAAA,CAAOU,IAAA;IACzDd,QAAA,EAAAQ;EAAA,EACH;AAEJ;AAEAX,QAAA,CAASkB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}