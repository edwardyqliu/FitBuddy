{"ast":null,"code":"'use client';\n\n// src/use-tooltip.ts\nimport _defineProperty from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"openDelay\", \"closeDelay\", \"closeOnClick\", \"closeOnMouseDown\", \"closeOnScroll\", \"closeOnPointerDown\", \"closeOnEsc\", \"onOpen\", \"onClose\", \"placement\", \"id\", \"isOpen\", \"defaultIsOpen\", \"arrowSize\", \"arrowShadowColor\", \"arrowPadding\", \"modifiers\", \"isDisabled\", \"gutter\", \"offset\", \"direction\"];\nimport { getScrollParent } from \"@chakra-ui/dom-utils\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useEffect, useId, useRef } from \"react\";\nvar getDoc = function getDoc(ref) {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = function getWin(ref) {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction useTooltip() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$openDelay = props.openDelay,\n    openDelay = _props$openDelay === void 0 ? 0 : _props$openDelay,\n    _props$closeDelay = props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 0 : _props$closeDelay,\n    _props$closeOnClick = props.closeOnClick,\n    closeOnClick = _props$closeOnClick === void 0 ? true : _props$closeOnClick,\n    closeOnMouseDown = props.closeOnMouseDown,\n    closeOnScroll = props.closeOnScroll,\n    _props$closeOnPointer = props.closeOnPointerDown,\n    closeOnPointerDown = _props$closeOnPointer === void 0 ? closeOnMouseDown : _props$closeOnPointer,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    onOpenProp = props.onOpen,\n    onCloseProp = props.onClose,\n    placement = props.placement,\n    id = props.id,\n    isOpenProp = props.isOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    _props$arrowSize = props.arrowSize,\n    arrowSize = _props$arrowSize === void 0 ? 10 : _props$arrowSize,\n    arrowShadowColor = props.arrowShadowColor,\n    arrowPadding = props.arrowPadding,\n    modifiers = props.modifiers,\n    isDisabled = props.isDisabled,\n    gutter = props.gutter,\n    offset = props.offset,\n    direction = props.direction,\n    htmlProps = _objectWithoutProperties(props, _excluded);\n  var _useDisclosure = useDisclosure({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpen,\n      onOpen: onOpenProp,\n      onClose: onCloseProp\n    }),\n    isOpen = _useDisclosure.isOpen,\n    onOpen = _useDisclosure.onOpen,\n    onClose = _useDisclosure.onClose;\n  var _usePopper = usePopper({\n      enabled: isOpen,\n      placement: placement,\n      arrowPadding: arrowPadding,\n      modifiers: modifiers,\n      gutter: gutter,\n      offset: offset,\n      direction: direction\n    }),\n    referenceRef = _usePopper.referenceRef,\n    getPopperProps = _usePopper.getPopperProps,\n    getArrowInnerProps = _usePopper.getArrowInnerProps,\n    getArrowProps = _usePopper.getArrowProps;\n  var uuid = useId();\n  var uid = id != null ? id : uuid;\n  var tooltipId = \"tooltip-\".concat(uid);\n  var ref = useRef(null);\n  var enterTimeout = useRef();\n  var clearEnterTimeout = useCallback(function () {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  var exitTimeout = useRef();\n  var clearExitTimeout = useCallback(function () {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  var closeNow = useCallback(function () {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  var dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  var openWithDelay = useCallback(function () {\n    if (!isDisabled && !enterTimeout.current) {\n      if (isOpen) dispatchCloseEvent();\n      var win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, isOpen, onOpen, openDelay]);\n  var closeWithDelay = useCallback(function () {\n    clearEnterTimeout();\n    var win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  var onClick = useCallback(function () {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  var onPointerDown = useCallback(function () {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  var onKeyDown = useCallback(function (event) {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay();\n    }\n  }, [isOpen, closeWithDelay]);\n  useEventListener(function () {\n    return getDoc(ref);\n  }, \"keydown\", closeOnEsc ? onKeyDown : void 0);\n  useEventListener(function () {\n    var node = ref.current;\n    if (!node) return null;\n    var scrollParent = getScrollParent(node);\n    return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent;\n  }, \"scroll\", function () {\n    if (isOpen && closeOnScroll) {\n      closeNow();\n    }\n  }, {\n    passive: true,\n    capture: true\n  });\n  useEffect(function () {\n    if (!isDisabled) return;\n    clearEnterTimeout();\n    if (isOpen) onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  useEffect(function () {\n    return function () {\n      clearEnterTimeout();\n      clearExitTimeout();\n    };\n  }, [clearEnterTimeout, clearExitTimeout]);\n  useEventListener(function () {\n    return ref.current;\n  }, \"pointerleave\", closeWithDelay);\n  var getTriggerProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var triggerProps = _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(ref, _ref, referenceRef),\n      onPointerEnter: callAllHandlers(props2.onPointerEnter, function (e) {\n        if (e.pointerType === \"touch\") return;\n        openWithDelay();\n      }),\n      onClick: callAllHandlers(props2.onClick, onClick),\n      onPointerDown: callAllHandlers(props2.onPointerDown, onPointerDown),\n      onFocus: callAllHandlers(props2.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props2.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    });\n    return triggerProps;\n  }, [openWithDelay, closeWithDelay, onPointerDown, isOpen, tooltipId, onClick, referenceRef]);\n  var getTooltipPositionerProps = useCallback(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps(_objectSpread(_objectSpread({}, props2), {}, {\n      style: _objectSpread(_objectSpread({}, props2.style), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, popperCSSVars.arrowSize.var, arrowSize ? \"\".concat(arrowSize, \"px\") : void 0), _defineProperty(_objectSpread2, popperCSSVars.arrowShadowColor.var, arrowShadowColor), _objectSpread2))\n    }), forwardedRef);\n  }, [getPopperProps, arrowSize, arrowShadowColor]);\n  var getTooltipProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var styles = _objectSpread(_objectSpread({}, props2.style), {}, {\n      position: \"relative\",\n      transformOrigin: popperCSSVars.transformOrigin.varRef\n    });\n    return _objectSpread(_objectSpread(_objectSpread({\n      ref: ref2\n    }, htmlProps), props2), {}, {\n      id: tooltipId,\n      role: \"tooltip\",\n      style: styles\n    });\n  }, [htmlProps, tooltipId]);\n  return {\n    isOpen: isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps: getTriggerProps,\n    getTooltipProps: getTooltipProps,\n    getTooltipPositionerProps: getTooltipPositionerProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  useEffect(function () {\n    var doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return function () {\n      return doc.removeEventListener(closeEventName, close);\n    };\n  }, [close, ref]);\n  return function () {\n    var doc = getDoc(ref);\n    var win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\nexport { useTooltip };","map":{"version":3,"names":["getScrollParent","popperCSSVars","usePopper","useDisclosure","useEventListener","mergeRefs","callAllHandlers","useCallback","useEffect","useId","useRef","getDoc","ref","_a","current","ownerDocument","document","getWin","_b","defaultView","window","useTooltip","props","arguments","length","undefined","_props$openDelay","openDelay","_props$closeDelay","closeDelay","_props$closeOnClick","closeOnClick","closeOnMouseDown","closeOnScroll","_props$closeOnPointer","closeOnPointerDown","_props$closeOnEsc","closeOnEsc","onOpenProp","onOpen","onCloseProp","onClose","placement","id","isOpenProp","isOpen","defaultIsOpen","_props$arrowSize","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","direction","htmlProps","_objectWithoutProperties","_excluded","_useDisclosure","_usePopper","enabled","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","uuid","uid","tooltipId","concat","enterTimeout","clearEnterTimeout","clearTimeout","exitTimeout","clearExitTimeout","closeNow","dispatchCloseEvent","useCloseEvent","openWithDelay","win","setTimeout","closeWithDelay","onClick","onPointerDown","onKeyDown","event","key","node","scrollParent","localName","passive","capture","getTriggerProps","props2","_ref","triggerProps","_objectSpread","onPointerEnter","e","pointerType","onFocus","onBlur","getTooltipPositionerProps","_objectSpread2","forwardedRef","style","_defineProperty","var","getTooltipProps","ref2","styles","position","transformOrigin","varRef","role","show","hide","closeEventName","close","doc","addEventListener","removeEventListener","dispatchEvent","CustomEvent"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/tooltip/src/use-tooltip.ts"],"sourcesContent":["import { getScrollParent } from \"@chakra-ui/dom-utils\"\nimport { popperCSSVars, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\"\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport React, {\n  useCallback,\n  useEffect,\n  useId,\n  useRef,\n  type RefObject,\n} from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    | \"modifiers\"\n    | \"gutter\"\n    | \"offset\"\n    | \"arrowPadding\"\n    | \"direction\"\n    | \"placement\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   * @default true\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse is down\n   * @deprecated - use `closeOnPointerDown` instead\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * If `true`, the tooltip will hide while the pointer is down\n   * @default true\n   */\n  closeOnPointerDown?: boolean\n  /**\n   * If `true`, the tooltip will hide on pressing Esc key\n   * @default true\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   * @default false\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   * @default false\n   */\n  defaultIsOpen?: boolean\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * @default false\n   */\n  closeOnScroll?: boolean\n  /**\n   * @default 10\n   */\n  arrowSize?: number\n  arrowShadowColor?: string\n}\n\nconst getDoc = (ref: React.RefObject<Element | null>) =>\n  ref.current?.ownerDocument || document\n\nconst getWin = (ref: React.RefObject<Element | null>) =>\n  ref.current?.ownerDocument?.defaultView || window\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const { referenceRef, getPopperProps, getArrowInnerProps, getArrowProps } =\n    usePopper({\n      enabled: isOpen,\n      placement,\n      arrowPadding,\n      modifiers,\n      gutter,\n      offset,\n      direction,\n    })\n\n  const uuid = useId()\n  const uid = id ?? uuid\n  const tooltipId = `tooltip-${uid}`\n\n  const ref = useRef<HTMLElement>(null)\n\n  const enterTimeout = useRef<number>()\n  const clearEnterTimeout = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n      enterTimeout.current = undefined\n    }\n  }, [])\n\n  const exitTimeout = useRef<number>()\n  const clearExitTimeout = useCallback(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current)\n      exitTimeout.current = undefined\n    }\n  }, [])\n\n  const closeNow = useCallback(() => {\n    clearExitTimeout()\n    onClose()\n  }, [onClose, clearExitTimeout])\n\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow)\n\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      if (isOpen) dispatchCloseEvent()\n      const win = getWin(ref)\n      enterTimeout.current = win.setTimeout(onOpen, openDelay)\n    }\n  }, [dispatchCloseEvent, isDisabled, isOpen, onOpen, openDelay])\n\n  const closeWithDelay = useCallback(() => {\n    clearEnterTimeout()\n    const win = getWin(ref)\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay)\n  }, [closeDelay, closeNow, clearEnterTimeout])\n\n  const onClick = useCallback(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay, isOpen])\n\n  const onPointerDown = useCallback(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay()\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen])\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (isOpen && event.key === \"Escape\") {\n        closeWithDelay()\n      }\n    },\n    [isOpen, closeWithDelay],\n  )\n\n  useEventListener(\n    () => getDoc(ref),\n    \"keydown\",\n    closeOnEsc ? onKeyDown : undefined,\n  )\n\n  useEventListener(\n    () => {\n      const node = ref.current\n      if (!node) return null\n      const scrollParent = getScrollParent(node)\n      return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent\n    },\n    \"scroll\",\n    () => {\n      if (isOpen && closeOnScroll) {\n        closeNow()\n      }\n    },\n    { passive: true, capture: true },\n  )\n\n  useEffect(() => {\n    if (!isDisabled) return\n    clearEnterTimeout()\n    if (isOpen) onClose()\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout])\n\n  useEffect(() => {\n    return () => {\n      clearEnterTimeout()\n      clearExitTimeout()\n    }\n  }, [clearEnterTimeout, clearExitTimeout])\n\n  /**\n   * This allows for catching pointerleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onPointerLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(() => ref.current, \"pointerleave\", closeWithDelay)\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps = {\n        ...props,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onPointerEnter: callAllHandlers(props.onPointerEnter, (e) => {\n          if (e.pointerType === \"touch\") return\n          openWithDelay()\n        }),\n        onClick: callAllHandlers(props.onClick, onClick),\n        onPointerDown: callAllHandlers(props.onPointerDown, onPointerDown),\n        onFocus: callAllHandlers(props.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : undefined,\n      }\n\n      return triggerProps\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onPointerDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef,\n    ],\n  )\n\n  const getTooltipPositionerProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            ...props.style,\n            [popperCSSVars.arrowSize.var]: arrowSize\n              ? `${arrowSize}px`\n              : undefined,\n            [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n          },\n        },\n        forwardedRef,\n      ),\n    [getPopperProps, arrowSize, arrowShadowColor],\n  )\n\n  const getTooltipProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const styles: React.CSSProperties = {\n        ...props.style,\n        position: \"relative\",\n        transformOrigin: popperCSSVars.transformOrigin.varRef,\n      }\n\n      return {\n        ref,\n        ...htmlProps,\n        ...props,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: styles,\n      }\n    },\n    [htmlProps, tooltipId],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n\nconst closeEventName = \"chakra-ui:close-tooltip\"\n\nfunction useCloseEvent(ref: RefObject<Element>, close: () => void) {\n  useEffect(() => {\n    const doc = getDoc(ref)\n    doc.addEventListener(closeEventName, close)\n    return () => doc.removeEventListener(closeEventName, close)\n  }, [close, ref])\n\n  return () => {\n    const doc = getDoc(ref)\n    const win = getWin(ref)\n    doc.dispatchEvent(new win.CustomEvent(closeEventName))\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}