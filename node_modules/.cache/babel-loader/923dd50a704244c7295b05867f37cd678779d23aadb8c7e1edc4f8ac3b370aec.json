{"ast":null,"code":"'use client';\n\n// src/indicator.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"offsetX\", \"offsetY\", \"offset\", \"placement\"];\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Indicator = forwardRef(function Indicator2(props, ref) {\n  var offsetX = props.offsetX,\n    offsetY = props.offsetY,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? \"0\" : _props$offset,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? \"top-end\" : _props$placement,\n    rest = _objectWithoutProperties(props, _excluded);\n  var styles = useMemo(function () {\n    return {\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      insetBlockStart: mapResponsive(placement, function (v) {\n        var _v$split = v.split(\"-\"),\n          _v$split2 = _slicedToArray(_v$split, 1),\n          side = _v$split2[0];\n        var map = {\n          top: offsetY != null ? offsetY : offset,\n          middle: \"50%\",\n          bottom: \"auto\"\n        };\n        return map[side];\n      }),\n      insetBlockEnd: mapResponsive(placement, function (v) {\n        var _v$split3 = v.split(\"-\"),\n          _v$split4 = _slicedToArray(_v$split3, 1),\n          side = _v$split4[0];\n        var map = {\n          top: \"auto\",\n          middle: \"50%\",\n          bottom: offsetY != null ? offsetY : offset\n        };\n        return map[side];\n      }),\n      insetStart: mapResponsive(placement, function (v) {\n        var _v$split5 = v.split(\"-\"),\n          _v$split6 = _slicedToArray(_v$split5, 2),\n          align = _v$split6[1];\n        var map = {\n          start: offsetX != null ? offsetX : offset,\n          center: \"50%\",\n          end: \"auto\"\n        };\n        return map[align];\n      }),\n      insetEnd: mapResponsive(placement, function (v) {\n        var _v$split7 = v.split(\"-\"),\n          _v$split8 = _slicedToArray(_v$split7, 2),\n          align = _v$split8[1];\n        var map = {\n          start: \"auto\",\n          center: \"50%\",\n          end: offsetX != null ? offsetX : offset\n        };\n        return map[align];\n      }),\n      translate: mapResponsive(placement, function (v) {\n        var _v$split9 = v.split(\"-\"),\n          _v$split10 = _slicedToArray(_v$split9, 2),\n          side = _v$split10[0],\n          align = _v$split10[1];\n        var mapX = {\n          start: \"-50%\",\n          center: \"-50%\",\n          end: \"50%\"\n        };\n        var mapY = {\n          top: \"-50%\",\n          middle: \"-50%\",\n          bottom: \"50%\"\n        };\n        return \"\".concat(mapX[align], \" \").concat(mapY[side]);\n      })\n    };\n  }, [offset, offsetX, offsetY, placement]);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\nexport { Indicator };","map":{"version":3,"names":["mapResponsive","chakra","forwardRef","useMemo","jsx","Indicator","Indicator2","props","ref","offsetX","offsetY","_props$offset","offset","_props$placement","placement","rest","_objectWithoutProperties","_excluded","styles","display","justifyContent","alignItems","position","insetBlockStart","v","_v$split","split","_v$split2","_slicedToArray","side","map","top","middle","bottom","insetBlockEnd","_v$split3","_v$split4","insetStart","_v$split5","_v$split6","align","start","center","end","insetEnd","_v$split7","_v$split8","translate","_v$split9","_v$split10","mapX","mapY","concat","div","_objectSpread","__css"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/layout/src/indicator.tsx"],"sourcesContent":["import { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport {\n  HTMLChakraProps,\n  ResponsiveValue,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\n\ntype Dict = Record<string, any>\n\nexport interface IndicatorOptions {\n  /**\n   * The x offset of the indicator\n   */\n  offsetX?: SystemStyleObject[\"left\"]\n  /**\n   * The y offset of the indicator\n   */\n  offsetY?: SystemStyleObject[\"top\"]\n  /**\n   * The x and y offset of the indicator\n   */\n  offset?: SystemStyleObject[\"top\"]\n  /**\n   * The placement of the indicator\n   * @default \"top-end\"\n   */\n  placement?: ResponsiveValue<\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"bottom-center\"\n    | \"top-center\"\n    | \"middle-center\"\n    | \"middle-end\"\n    | \"middle-start\"\n  >\n}\n\nexport interface IndicatorProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof IndicatorOptions>,\n    IndicatorOptions {}\n\nexport const Indicator = forwardRef<IndicatorProps, \"div\">(function Indicator(\n  props,\n  ref,\n) {\n  const {\n    offsetX,\n    offsetY,\n    offset = \"0\",\n    placement = \"top-end\",\n    ...rest\n  } = props\n\n  const styles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      insetBlockStart: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: offsetY ?? offset,\n          middle: \"50%\",\n          bottom: \"auto\",\n        }\n        return map[side]\n      }),\n      insetBlockEnd: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: \"auto\",\n          middle: \"50%\",\n          bottom: offsetY ?? offset,\n        }\n        return map[side]\n      }),\n      insetStart: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: offsetX ?? offset,\n          center: \"50%\",\n          end: \"auto\",\n        }\n        return map[align]\n      }),\n      insetEnd: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: \"auto\",\n          center: \"50%\",\n          end: offsetX ?? offset,\n        }\n        return map[align]\n      }),\n      translate: mapResponsive(placement, (v) => {\n        const [side, align] = v.split(\"-\")\n        const mapX: Dict = { start: \"-50%\", center: \"-50%\", end: \"50%\" }\n        const mapY: Dict = { top: \"-50%\", middle: \"-50%\", bottom: \"50%\" }\n        return `${mapX[align]} ${mapY[side]}`\n      }),\n    }),\n    [offset, offsetX, offsetY, placement],\n  )\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}