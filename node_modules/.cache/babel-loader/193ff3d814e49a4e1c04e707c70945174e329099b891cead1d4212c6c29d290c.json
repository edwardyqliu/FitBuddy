{"ast":null,"code":"'use client';\n\n// src/button-icon.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"className\"];\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  var children = props.children,\n    className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  var _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0\n  }, rest), {}, {\n    className: _className,\n    children: _children\n  }));\n}\nButtonIcon.displayName = \"ButtonIcon\";\nexport { ButtonIcon };","map":{"version":3,"names":["chakra","cx","cloneElement","isValidElement","jsx","ButtonIcon","props","children","className","rest","_objectWithoutProperties","_excluded","_children","focusable","_className","span","_objectSpread","display","alignSelf","flexShrink","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/button/src/button-icon.tsx"],"sourcesContent":["import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { cloneElement, isValidElement } from \"react\"\n\nexport function ButtonIcon(props: HTMLChakraProps<\"span\">) {\n  const { children, className, ...rest } = props\n\n  const _children = isValidElement(children)\n    ? cloneElement<any>(children, {\n        \"aria-hidden\": true,\n        focusable: false,\n      })\n    : children\n\n  const _className = cx(\"chakra-button__icon\", className)\n\n  return (\n    <chakra.span\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      {...rest}\n      className={_className}\n    >\n      {_children}\n    </chakra.span>\n  )\n}\n\nButtonIcon.displayName = \"ButtonIcon\"\n"],"mappings":";;;;;;AAAA,SAASA,MAAA,QAA+B;AACxC,SAASC,EAAA,QAAU;AACnB,SAASC,YAAA,EAAcC,cAAA,QAAsB;AAezC,SAAAC,GAAA;AAbG,SAASC,WAAWC,KAAA,EAAgC;EACzD,IAAQC,QAAA,GAAiCD,KAAA,CAAjCC,QAAA;IAAUC,SAAA,GAAuBF,KAAA,CAAvBE,SAAA;IAAcC,IAAA,GAAAC,wBAAA,CAASJ,KAAA,EAAAK,SAAA;EAEzC,IAAMC,SAAA,GAAYT,cAAA,CAAeI,QAAQ,IACrCL,YAAA,CAAkBK,QAAA,EAAU;IAC1B,eAAe;IACfM,SAAA,EAAW;EACb,CAAC,IACDN,QAAA;EAEJ,IAAMO,UAAA,GAAab,EAAA,CAAG,uBAAuBO,SAAS;EAEtD,OACE,eAAAJ,GAAA,CAACJ,MAAA,CAAOe,IAAA,EAAAC,aAAA,CAAAA,aAAA;IACNC,OAAA,EAAQ;IACRC,SAAA,EAAU;IACVC,UAAA,EAAY;EAAA,GACRV,IAAA;IACJD,SAAA,EAAWM,UAAA;IAEVP,QAAA,EAAAK;EAAA,EACH;AAEJ;AAEAP,UAAA,CAAWe,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}