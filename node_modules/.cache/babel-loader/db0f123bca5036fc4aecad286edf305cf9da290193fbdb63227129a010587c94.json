{"ast":null,"code":"'use client';\n\nimport { useMediaQuery } from \"./chunk-57I6FYPZ.mjs\";\n\n// src/use-breakpoint.ts\nimport { useTheme } from \"@chakra-ui/system\";\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction useBreakpoint(arg) {\n  var _a, _b;\n  var opts = isObject(arg) ? arg : {\n    fallback: arg != null ? arg : \"base\"\n  };\n  var theme = useTheme();\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n      breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n  var fallback = breakpoints.map(function (bp) {\n    return bp.breakpoint === opts.fallback;\n  });\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), {\n    fallback: fallback,\n    ssr: opts.ssr\n  });\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_b = (_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) != null ? _b : opts.fallback;\n}\nexport { useBreakpoint };","map":{"version":3,"names":["useTheme","isObject","useBreakpoint","arg","_a","_b","opts","fallback","theme","breakpoints","__breakpoints","details","map","_ref","minMaxQuery","breakpoint","query","replace","bp","values","useMediaQuery","ssr","index","findIndex","value"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/media-query/src/use-breakpoint.ts"],"sourcesContent":["import { useTheme } from \"@chakra-ui/system\"\nimport { isObject } from \"@chakra-ui/shared-utils\"\nimport { useMediaQuery } from \"./use-media-query\"\n\nexport type UseBreakpointOptions = {\n  ssr?: boolean\n  fallback?: string\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent.\n */\nexport function useBreakpoint(arg?: string | UseBreakpointOptions) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" }\n  const theme = useTheme()\n\n  const breakpoints = theme.__breakpoints!.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\"),\n    }),\n  )\n\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback)\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr },\n  )\n\n  const index = values.findIndex((value) => value == true)\n  return breakpoints[index]?.breakpoint ?? opts.fallback\n}\n"],"mappings":";;;;;AAAA,SAASA,QAAA,QAAgB;AACzB,SAASC,QAAA,QAAgB;AAclB,SAASC,cAAcC,GAAA,EAAqC;EAfnE,IAAAC,EAAA,EAAAC,EAAA;EAgBE,IAAMC,IAAA,GAAOL,QAAA,CAASE,GAAG,IAAIA,GAAA,GAAM;IAAEI,QAAA,EAAUJ,GAAA,WAAAA,GAAA,GAAO;EAAO;EAC7D,IAAMK,KAAA,GAAQR,QAAA,CAAS;EAEvB,IAAMS,WAAA,GAAcD,KAAA,CAAME,aAAA,CAAeC,OAAA,CAAQC,GAAA,CAC/C,UAAAC,IAAA;IAAA,IAAGC,WAAA,GAAAD,IAAA,CAAAC,WAAA;MAAaC,UAAA,GAAAF,IAAA,CAAAE,UAAA;IAAA,OAAkB;MAChCA,UAAA,EAAAA,UAAA;MACAC,KAAA,EAAOF,WAAA,CAAYG,OAAA,CAAQ,sBAAsB,EAAE;IACrD;EAAA,CACF;EAEA,IAAMV,QAAA,GAAWE,WAAA,CAAYG,GAAA,CAAI,UAACM,EAAA;IAAA,OAAOA,EAAA,CAAGH,UAAA,KAAeT,IAAA,CAAKC,QAAQ;EAAA;EACxE,IAAMY,MAAA,GAASC,aAAA,CACbX,WAAA,CAAYG,GAAA,CAAI,UAACM,EAAA;IAAA,OAAOA,EAAA,CAAGF,KAAK;EAAA,IAChC;IAAET,QAAA,EAAAA,QAAA;IAAUc,GAAA,EAAKf,IAAA,CAAKe;EAAI,CAC5B;EAEA,IAAMC,KAAA,GAAQH,MAAA,CAAOI,SAAA,CAAU,UAACC,KAAA;IAAA,OAAUA,KAAA,IAAS,IAAI;EAAA;EACvD,QAAOnB,EAAA,IAAAD,EAAA,GAAAK,WAAA,CAAYa,KAAK,MAAjB,gBAAAlB,EAAA,CAAoBW,UAAA,KAApB,OAAAV,EAAA,GAAkCC,IAAA,CAAKC,QAAA;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}