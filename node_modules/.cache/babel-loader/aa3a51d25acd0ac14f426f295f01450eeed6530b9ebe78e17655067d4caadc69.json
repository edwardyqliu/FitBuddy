{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n  _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\nimport { useFormControlContext } from \"./chunk-OSN4JR34.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n    isDisabled = _useFormControlProps.isDisabled,\n    isInvalid = _useFormControlProps.isInvalid,\n    isReadOnly = _useFormControlProps.isReadOnly,\n    isRequired = _useFormControlProps.isRequired,\n    rest = _objectWithoutProperties(_useFormControlProps, _excluded);\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  var field = useFormControlContext();\n  var id = props.id,\n    disabled = props.disabled,\n    readOnly = props.readOnly,\n    required = props.required,\n    isRequired = props.isRequired,\n    isInvalid = props.isInvalid,\n    isReadOnly = props.isReadOnly,\n    isDisabled = props.isDisabled,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return _objectSpread(_objectSpread({}, rest), {}, {\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\nexport { useFormControl, useFormControlProps };","map":{"version":3,"names":["ariaAttr","callAllHandlers","useFormControl","props","_useFormControlProps","useFormControlProps","isDisabled","isInvalid","isReadOnly","isRequired","rest","_objectWithoutProperties","_excluded","_objectSpread","disabled","readOnly","required","_a","_b","_c","field","useFormControlContext","id","onFocus","onBlur","_excluded2","labelIds","hasFeedbackText","push","feedbackId","hasHelpText","helpTextId","join"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/form-control/src/use-form-control.ts"],"sourcesContent":["import { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: React.FocusEventHandler<T>\n  onBlur?: React.FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n  \"aria-describedby\"?: string\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } =\n    useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\n/**\n * @internal\n */\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = props[\"aria-describedby\"]\n    ? [props[\"aria-describedby\"]]\n    : []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAASA,QAAA,EAAUC,eAAA,QAAuB;AAuBnC,SAASC,eACdC,KAAA,EACA;EACA,IAAAC,oBAAA,GACEC,mBAAA,CAAoBF,KAAK;IADnBG,UAAA,GAAAF,oBAAA,CAAAE,UAAA;IAAYC,SAAA,GAAAH,oBAAA,CAAAG,SAAA;IAAWC,UAAA,GAAAJ,oBAAA,CAAAI,UAAA;IAAYC,UAAA,GAAAL,oBAAA,CAAAK,UAAA;IAAeC,IAAA,GAAAC,wBAAA,CAAAP,oBAAA,EAAAQ,SAAA;EAG1D,OAAAC,aAAA,CAAAA,aAAA,KACKH,IAAA;IACHI,QAAA,EAAUR,UAAA;IACVS,QAAA,EAAUP,UAAA;IACVQ,QAAA,EAAUP,UAAA;IACV,gBAAgBT,QAAA,CAASO,SAAS;IAClC,iBAAiBP,QAAA,CAASS,UAAU;IACpC,iBAAiBT,QAAA,CAASQ,UAAU;EAAA;AAExC;AAKO,SAASH,oBACdF,KAAA,EACA;EA7CF,IAAAc,EAAA,EAAAC,EAAA,EAAAC,EAAA;EA8CE,IAAMC,KAAA,GAAQC,qBAAA,CAAsB;EAEpC,IACEC,EAAA,GAWEnB,KAAA,CAXFmB,EAAA;IACAR,QAAA,GAUEX,KAAA,CAVFW,QAAA;IACAC,QAAA,GASEZ,KAAA,CATFY,QAAA;IACAC,QAAA,GAQEb,KAAA,CARFa,QAAA;IACAP,UAAA,GAOEN,KAAA,CAPFM,UAAA;IACAF,SAAA,GAMEJ,KAAA,CANFI,SAAA;IACAC,UAAA,GAKEL,KAAA,CALFK,UAAA;IACAF,UAAA,GAIEH,KAAA,CAJFG,UAAA;IACAiB,OAAA,GAGEpB,KAAA,CAHFoB,OAAA;IACAC,MAAA,GAEErB,KAAA,CAFFqB,MAAA;IACGd,IAAA,GAAAC,wBAAA,CACDR,KAAA,EAAAsB,UAAA;EAEJ,IAAMC,QAAA,GAAqBvB,KAAA,CAAM,kBAAkB,IAC/C,CAACA,KAAA,CAAM,kBAAkB,CAAC,IAC1B,EAAC;EAGL,KAAIiB,KAAA,oBAAAA,KAAA,CAAOO,eAAA,MAAmBP,KAAA,oBAAAA,KAAA,CAAOb,SAAA,GAAW;IAC9CmB,QAAA,CAASE,IAAA,CAAKR,KAAA,CAAMS,UAAU;EAChC;EAEA,IAAIT,KAAA,oBAAAA,KAAA,CAAOU,WAAA,EAAa;IACtBJ,QAAA,CAASE,IAAA,CAAKR,KAAA,CAAMW,UAAU;EAChC;EAEA,OAAAlB,aAAA,CAAAA,aAAA,KACKH,IAAA;IACH,oBAAoBgB,QAAA,CAASM,IAAA,CAAK,GAAG,KAAK;IAC1CV,EAAA,EAAIA,EAAA,WAAAA,EAAA,GAAMF,KAAA,oBAAAA,KAAA,CAAOE,EAAA;IACjBhB,UAAA,GAAYW,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYR,UAAA,KAAZ,OAAAW,EAAA,GAA0BG,KAAA,oBAAAA,KAAA,CAAOd,UAAA;IAC7CE,UAAA,GAAYU,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYP,UAAA,KAAZ,OAAAU,EAAA,GAA0BE,KAAA,oBAAAA,KAAA,CAAOZ,UAAA;IAC7CC,UAAA,GAAYU,EAAA,GAAAH,QAAA,WAAAA,QAAA,GAAYP,UAAA,KAAZ,OAAAU,EAAA,GAA0BC,KAAA,oBAAAA,KAAA,CAAOX,UAAA;IAC7CF,SAAA,EAAWA,SAAA,WAAAA,SAAA,GAAaa,KAAA,oBAAAA,KAAA,CAAOb,SAAA;IAC/BgB,OAAA,EAAStB,eAAA,CAAgBmB,KAAA,oBAAAA,KAAA,CAAOG,OAAA,EAASA,OAAO;IAChDC,MAAA,EAAQvB,eAAA,CAAgBmB,KAAA,oBAAAA,KAAA,CAAOI,MAAA,EAAQA,MAAM;EAAA;AAEjD"},"metadata":{},"sourceType":"module","externalDependencies":[]}