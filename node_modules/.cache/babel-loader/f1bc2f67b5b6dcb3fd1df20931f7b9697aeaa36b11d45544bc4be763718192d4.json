{"ast":null,"code":"'use client';\n\n// src/spinner.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"label\", \"thickness\", \"speed\", \"emptyColor\", \"className\"];\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar Spinner = forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Spinner\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    _omitThemingProps$lab = _omitThemingProps.label,\n    label = _omitThemingProps$lab === void 0 ? \"Loading...\" : _omitThemingProps$lab,\n    _omitThemingProps$thi = _omitThemingProps.thickness,\n    thickness = _omitThemingProps$thi === void 0 ? \"2px\" : _omitThemingProps$thi,\n    _omitThemingProps$spe = _omitThemingProps.speed,\n    speed = _omitThemingProps$spe === void 0 ? \"0.45s\" : _omitThemingProps$spe,\n    _omitThemingProps$emp = _omitThemingProps.emptyColor,\n    emptyColor = _omitThemingProps$emp === void 0 ? \"transparent\" : _omitThemingProps$emp,\n    className = _omitThemingProps.className,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var _className = cx(\"chakra-spinner\", className);\n  var spinnerStyles = _objectSpread({\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: \"\".concat(spin, \" \").concat(speed, \" linear infinite\")\n  }, styles);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    __css: spinnerStyles,\n    className: _className\n  }, rest), {}, {\n    children: label && /* @__PURE__ */jsx(chakra.span, {\n      srOnly: true,\n      children: label\n    })\n  }));\n});\nSpinner.displayName = \"Spinner\";\nexport { Spinner };","map":{"version":3,"names":["chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","cx","jsx","spin","transform","Spinner","props","ref","styles","_omitThemingProps","_omitThemingProps$lab","label","_omitThemingProps$thi","thickness","_omitThemingProps$spe","speed","_omitThemingProps$emp","emptyColor","className","rest","_objectWithoutProperties","_excluded","_className","spinnerStyles","_objectSpread","display","borderColor","borderStyle","borderRadius","borderWidth","borderBottomColor","borderLeftColor","animation","concat","div","__css","children","span","srOnly","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/spinner/src/spinner.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   * @default \"transparent\"\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @default \"2px\"\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @default \"0.45s\"\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   * @default \"Loading...\"\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <chakra.span srOnly>{label}</chakra.span>}\n    </chakra.div>\n  )\n})\n\nSpinner.displayName = \"Spinner\"\n"],"mappings":";;;;;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,SAAA,EACAC,gBAAA,EAEAC,cAAA,QAEK;AACP,SAASC,EAAA,QAAU;AA2FH,SAAAC,GAAA;AAzFhB,IAAMC,IAAA,GAAOL,SAAA,CAAU;EACrB,MAAM;IACJM,SAAA,EAAW;EACb;EACA,QAAQ;IACNA,SAAA,EAAW;EACb;AACF,CAAC;AAiDM,IAAMC,OAAA,GAAUR,UAAA,CAAgC,UAACS,KAAA,EAAOC,GAAA,EAAQ;EACrE,IAAMC,MAAA,GAASR,cAAA,CAAe,WAAWM,KAAK;EAE9C,IAAAG,iBAAA,GAOIV,gBAAA,CAAiBO,KAAK;IAAAI,qBAAA,GAAAD,iBAAA,CANxBE,KAAA;IAAAA,KAAA,GAAAD,qBAAA,cAAQ,eAAAA,qBAAA;IAAAE,qBAAA,GAAAH,iBAAA,CACRI,SAAA;IAAAA,SAAA,GAAAD,qBAAA,cAAY,QAAAA,qBAAA;IAAAE,qBAAA,GAAAL,iBAAA,CACZM,KAAA;IAAAA,KAAA,GAAAD,qBAAA,cAAQ,UAAAA,qBAAA;IAAAE,qBAAA,GAAAP,iBAAA,CACRQ,UAAA;IAAAA,UAAA,GAAAD,qBAAA,cAAa,gBAAAA,qBAAA;IACbE,SAAA,GAAAT,iBAAA,CAAAS,SAAA;IACGC,IAAA,GAAAC,wBAAA,CAAAX,iBAAA,EAAAY,SAAA;EAGL,IAAMC,UAAA,GAAarB,EAAA,CAAG,kBAAkBiB,SAAS;EAEjD,IAAMK,aAAA,GAAAC,aAAA;IACJC,OAAA,EAAS;IACTC,WAAA,EAAa;IACbC,WAAA,EAAa;IACbC,YAAA,EAAc;IACdC,WAAA,EAAahB,SAAA;IACbiB,iBAAA,EAAmBb,UAAA;IACnBc,eAAA,EAAiBd,UAAA;IACjBe,SAAA,KAAAC,MAAA,CAAc9B,IAAA,OAAA8B,MAAA,CAAQlB,KAAA;EAAA,GACnBP,MAAA,CACL;EAEA,OACE,eAAAN,GAAA,CAACN,MAAA,CAAOsC,GAAA,EAAAV,aAAA,CAAAA,aAAA;IACNjB,GAAA,EAAAA,GAAA;IACA4B,KAAA,EAAOZ,aAAA;IACPL,SAAA,EAAWI;EAAA,GACPH,IAAA;IAEHiB,QAAA,EAAAzB,KAAA,IAAS,eAAAT,GAAA,CAACN,MAAA,CAAOyC,IAAA,EAAP;MAAYC,MAAA,EAAM;MAAEF,QAAA,EAAAzB;IAAA,CAAM;EAAA,EACvC;AAEJ,CAAC;AAEDN,OAAA,CAAQkC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}