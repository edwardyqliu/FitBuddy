{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"id\", \"closeOnSelect\", \"closeOnBlur\", \"initialFocusRef\", \"autoSelect\", \"isLazy\", \"isOpen\", \"defaultIsOpen\", \"onClose\", \"onOpen\", \"placement\", \"lazyBehavior\", \"direction\", \"computePositionOnMount\"],\n  _excluded2 = [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"onFocus\", \"isDisabled\", \"isFocusable\", \"closeOnSelect\", \"type\"],\n  _excluded3 = [\"type\", \"isChecked\"],\n  _excluded4 = [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"];\nimport { useShortcut } from \"./chunk-YSKACL7R.mjs\";\nimport { getNextItemFromSearch } from \"./chunk-BWUXSGSJ.mjs\";\n\n// src/use-menu.ts\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\";\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { lazyDisclosure } from \"@chakra-ui/lazy-utils\";\nimport { cloneElement, useCallback, useRef, useState, useId, useMemo, useEffect } from \"react\";\nvar _createDescendantCont = createDescendantContext(),\n  _createDescendantCont2 = _slicedToArray(_createDescendantCont, 4),\n  MenuDescendantsProvider = _createDescendantCont2[0],\n  useMenuDescendantsContext = _createDescendantCont2[1],\n  useMenuDescendants = _createDescendantCont2[2],\n  useMenuDescendant = _createDescendantCont2[3];\nvar _createContext = createContext({\n    strict: false,\n    name: \"MenuContext\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  MenuProvider = _createContext2[0],\n  useMenuContext = _createContext2[1];\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n  var reactId = useId();\n  var id = idProp || reactId;\n  return useMemo(function () {\n    return prefixes.map(function (prefix) {\n      return \"\".concat(prefix, \"-\").concat(id);\n    });\n  }, [id, prefixes]);\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\nfunction isActiveElement(element) {\n  var doc = getOwnerDocument(element);\n  return doc.activeElement === element;\n}\nfunction useMenu() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = props.id,\n    _props$closeOnSelect = props.closeOnSelect,\n    closeOnSelect = _props$closeOnSelect === void 0 ? true : _props$closeOnSelect,\n    _props$closeOnBlur = props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    initialFocusRef = props.initialFocusRef,\n    _props$autoSelect = props.autoSelect,\n    autoSelect = _props$autoSelect === void 0 ? true : _props$autoSelect,\n    isLazy = props.isLazy,\n    isOpenProp = props.isOpen,\n    defaultIsOpen = props.defaultIsOpen,\n    onCloseProp = props.onClose,\n    onOpenProp = props.onOpen,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? \"bottom-start\" : _props$placement,\n    _props$lazyBehavior = props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    direction = props.direction,\n    _props$computePositio = props.computePositionOnMount,\n    computePositionOnMount = _props$computePositio === void 0 ? false : _props$computePositio,\n    popperProps = _objectWithoutProperties(props, _excluded);\n  var menuRef = useRef(null);\n  var buttonRef = useRef(null);\n  var descendants = useMenuDescendants();\n  var focusMenu = useCallback(function () {\n    requestAnimationFrame(function () {\n      var _a;\n      (_a = menuRef.current) == null ? void 0 : _a.focus({\n        preventScroll: false\n      });\n    });\n  }, []);\n  var focusFirstItem = useCallback(function () {\n    var id2 = setTimeout(function () {\n      var _a;\n      if (initialFocusRef) {\n        (_a = initialFocusRef.current) == null ? void 0 : _a.focus();\n      } else {\n        var first = descendants.firstEnabled();\n        if (first) setFocusedIndex(first.index);\n      }\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  var focusLastItem = useCallback(function () {\n    var id2 = setTimeout(function () {\n      var last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants]);\n  var onOpenInternal = useCallback(function () {\n    onOpenProp == null ? void 0 : onOpenProp();\n    if (autoSelect) {\n      focusFirstItem();\n    } else {\n      focusMenu();\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);\n  var _useDisclosure = useDisclosure({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpen,\n      onClose: onCloseProp,\n      onOpen: onOpenInternal\n    }),\n    isOpen = _useDisclosure.isOpen,\n    onOpen = _useDisclosure.onOpen,\n    onClose = _useDisclosure.onClose,\n    onToggle = _useDisclosure.onToggle;\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: function handler(event) {\n      var _a;\n      if (!((_a = buttonRef.current) == null ? void 0 : _a.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  var popper = usePopper(_objectSpread(_objectSpread({}, popperProps), {}, {\n    enabled: isOpen || computePositionOnMount,\n    placement: placement,\n    direction: direction\n  }));\n  var _useState = useState(-1),\n    _useState2 = _slicedToArray(_useState, 2),\n    focusedIndex = _useState2[0],\n    setFocusedIndex = _useState2[1];\n  useUpdateEffect(function () {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  var animationState = useAnimationState({\n    isOpen: isOpen,\n    ref: menuRef\n  });\n  var _useIds = useIds(id, \"menu-button\", \"menu-list\"),\n    _useIds2 = _slicedToArray(_useIds, 2),\n    buttonId = _useIds2[0],\n    menuId = _useIds2[1];\n  var openAndFocusMenu = useCallback(function () {\n    onOpen();\n    focusMenu();\n  }, [onOpen, focusMenu]);\n  var timeoutIds = useRef( /* @__PURE__ */new Set([]));\n  useEffect(function () {\n    var ids = timeoutIds.current;\n    return function () {\n      ids.forEach(function (id2) {\n        return clearTimeout(id2);\n      });\n      ids.clear();\n    };\n  }, []);\n  var openAndFocusFirstItem = useCallback(function () {\n    onOpen();\n    focusFirstItem();\n  }, [focusFirstItem, onOpen]);\n  var openAndFocusLastItem = useCallback(function () {\n    onOpen();\n    focusLastItem();\n  }, [onOpen, focusLastItem]);\n  var refocus = useCallback(function () {\n    var _a, _b;\n    var doc = getOwnerDocument(menuRef.current);\n    var hasFocusWithin = (_a = menuRef.current) == null ? void 0 : _a.contains(doc.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var node = (_b = descendants.item(focusedIndex)) == null ? void 0 : _b.node;\n    node == null ? void 0 : node.focus({\n      preventScroll: true\n    });\n  }, [isOpen, focusedIndex, descendants]);\n  var rafId = useRef(null);\n  return {\n    openAndFocusMenu: openAndFocusMenu,\n    openAndFocusFirstItem: openAndFocusFirstItem,\n    openAndFocusLastItem: openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants: descendants,\n    popper: popper,\n    buttonId: buttonId,\n    menuId: menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen: isOpen,\n    onToggle: onToggle,\n    onOpen: onOpen,\n    onClose: onClose,\n    menuRef: menuRef,\n    buttonRef: buttonRef,\n    focusedIndex: focusedIndex,\n    closeOnSelect: closeOnSelect,\n    closeOnBlur: closeOnBlur,\n    autoSelect: autoSelect,\n    setFocusedIndex: setFocusedIndex,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    initialFocusRef: initialFocusRef,\n    rafId: rafId\n  };\n}\nfunction useMenuButton() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var externalRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var menu = useMenuContext();\n  var onToggle = menu.onToggle,\n    popper = menu.popper,\n    openAndFocusFirstItem = menu.openAndFocusFirstItem,\n    openAndFocusLastItem = menu.openAndFocusLastItem;\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\nfunction isTargetMenuItem(target) {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"menuitem\"));\n}\nfunction useMenuList() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var menu = useMenuContext();\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n  var focusedIndex = menu.focusedIndex,\n    setFocusedIndex = menu.setFocusedIndex,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    onClose = menu.onClose,\n    menuId = menu.menuId,\n    isLazy = menu.isLazy,\n    lazyBehavior = menu.lazyBehavior,\n    animated = menu.unstable__animationState;\n  var descendants = useMenuDescendantsContext();\n  var createTypeaheadHandler = useShortcut({\n    preventDefault: function preventDefault(event) {\n      return event.key !== \" \" && isTargetMenuItem(event.target);\n    }\n  });\n  var onKeyDown = useCallback(function (event) {\n    if (!event.currentTarget.contains(event.target)) return;\n    var eventKey = event.key;\n    var keyMap = {\n      Tab: function Tab(event2) {\n        return event2.preventDefault();\n      },\n      Escape: onClose,\n      ArrowDown: function ArrowDown() {\n        var next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: function ArrowUp() {\n        var prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    var fn = keyMap[eventKey];\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    var onTypeahead = createTypeaheadHandler(function (character) {\n      var nextItem = getNextItemFromSearch(descendants.values(), character, function (item) {\n        var _a, _b;\n        return (_b = (_a = item == null ? void 0 : item.node) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n      }, descendants.item(focusedIndex));\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n    if (isTargetMenuItem(event.target)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  var hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  return _objectSpread(_objectSpread({}, props), {}, {\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _objectSpread(_objectSpread({}, props.style), {}, {\n      transformOrigin: \"var(--popper-transform-origin)\"\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\nfunction useMenuPositioner() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _useMenuContext = useMenuContext(),\n    popper = _useMenuContext.popper,\n    isOpen = _useMenuContext.isOpen;\n  return popper.getPopperProps(_objectSpread(_objectSpread({}, props), {}, {\n    style: _objectSpread({\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }, props.style)\n  }));\n}\nfunction useMenuItem() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var externalRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var onMouseEnterProp = props.onMouseEnter,\n    onMouseMoveProp = props.onMouseMove,\n    onMouseLeaveProp = props.onMouseLeave,\n    onClickProp = props.onClick,\n    onFocusProp = props.onFocus,\n    isDisabled = props.isDisabled,\n    isFocusable = props.isFocusable,\n    closeOnSelect = props.closeOnSelect,\n    typeProp = props.type,\n    htmlProps = _objectWithoutProperties(props, _excluded2);\n  var menu = useMenuContext();\n  var setFocusedIndex = menu.setFocusedIndex,\n    focusedIndex = menu.focusedIndex,\n    menuCloseOnSelect = menu.closeOnSelect,\n    onClose = menu.onClose,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    menuId = menu.menuId,\n    rafId = menu.rafId;\n  var ref = useRef(null);\n  var id = \"\".concat(menuId, \"-menuitem-\").concat(useId());\n  var _useMenuDescendant = useMenuDescendant({\n      disabled: isDisabled && !isFocusable\n    }),\n    index = _useMenuDescendant.index,\n    register = _useMenuDescendant.register;\n  var onMouseEnter = useCallback(function (event) {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = useCallback(function (event) {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = useCallback(function (event) {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = useCallback(function (event) {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event.currentTarget)) return;\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  var onFocus = useCallback(function (event) {\n    onFocusProp == null ? void 0 : onFocusProp(event);\n    setFocusedIndex(index);\n  }, [setFocusedIndex, onFocusProp, index]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(function () {\n    if (!isOpen) return;\n    if (isFocused && !trulyDisabled && ref.current) {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n      rafId.current = requestAnimationFrame(function () {\n        var _a;\n        (_a = ref.current) == null ? void 0 : _a.focus({\n          preventScroll: true\n        });\n        rafId.current = null;\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({\n        preventScroll: true\n      });\n    }\n    return function () {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var clickableProps = useClickable({\n    onClick: onClick,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable\n  });\n  return _objectSpread(_objectSpread(_objectSpread({}, htmlProps), clickableProps), {}, {\n    type: typeProp != null ? typeProp : clickableProps.type,\n    id: id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\nfunction useMenuOption() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var _props$type = props.type,\n    type = _props$type === void 0 ? \"radio\" : _props$type,\n    isChecked = props.isChecked,\n    rest = _objectWithoutProperties(props, _excluded3);\n  var ownProps = useMenuItem(rest, ref);\n  return _objectSpread(_objectSpread({}, ownProps), {}, {\n    role: \"menuitem\".concat(type),\n    \"aria-checked\": isChecked\n  });\n}\nfunction useMenuOptionGroup() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var children = props.children,\n    _props$type2 = props.type,\n    type = _props$type2 === void 0 ? \"radio\" : _props$type2,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    onChangeProp = props.onChange,\n    htmlProps = _objectWithoutProperties(props, _excluded4);\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var _useControllableState = useControllableState({\n      defaultValue: defaultValue != null ? defaultValue : fallback,\n      value: valueProp,\n      onChange: onChangeProp\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    value = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  var onChange = useCallback(function (selectedValue) {\n    if (type === \"radio\" && typeof value === \"string\") {\n      setValue(selectedValue);\n    }\n    if (type === \"checkbox\" && Array.isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? value.filter(function (item) {\n        return item !== selectedValue;\n      }) : value.concat(selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type.id !== \"MenuItemOption\") return child;\n    var onClick = function onClick(event) {\n      var _a, _b;\n      onChange(child.props.value);\n      (_b = (_a = child.props).onClick) == null ? void 0 : _b.call(_a, event);\n    };\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return cloneElement(child, {\n      type: type,\n      onClick: onClick,\n      isChecked: isChecked\n    });\n  });\n  return _objectSpread(_objectSpread({}, htmlProps), {}, {\n    children: clones\n  });\n}\nfunction useMenuState() {\n  var _useMenuContext2 = useMenuContext(),\n    isOpen = _useMenuContext2.isOpen,\n    onClose = _useMenuContext2.onClose;\n  return {\n    isOpen: isOpen,\n    onClose: onClose\n  };\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) return false;\n  var win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nexport { MenuDescendantsProvider, useMenuDescendantsContext, useMenuDescendants, useMenuDescendant, MenuProvider, useMenuContext, useMenu, useMenuButton, useMenuList, useMenuPositioner, useMenuItem, useMenuOption, useMenuOptionGroup, useMenuState };","map":{"version":3,"names":["useClickable","createDescendantContext","useFocusOnHide","usePopper","useDisclosure","useOutsideClick","useAnimationState","createContext","getValidChildren","useControllableState","useUpdateEffect","mergeRefs","dataAttr","callAllHandlers","lazyDisclosure","cloneElement","useCallback","useRef","useState","useId","useMemo","useEffect","_createDescendantCont","_createDescendantCont2","_slicedToArray","MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","_createContext","strict","name","_createContext2","MenuProvider","useMenuContext","useIds","idProp","_len","arguments","length","prefixes","Array","_key","reactId","id","map","prefix","concat","getOwnerDocument","node","_a","ownerDocument","document","isActiveElement","element","doc","activeElement","useMenu","props","undefined","_props$closeOnSelect","closeOnSelect","_props$closeOnBlur","closeOnBlur","initialFocusRef","_props$autoSelect","autoSelect","isLazy","isOpenProp","isOpen","defaultIsOpen","onCloseProp","onClose","onOpenProp","onOpen","_props$placement","placement","_props$lazyBehavior","lazyBehavior","direction","_props$computePositio","computePositionOnMount","popperProps","_objectWithoutProperties","_excluded","menuRef","buttonRef","descendants","focusMenu","requestAnimationFrame","current","focus","preventScroll","focusFirstItem","id2","setTimeout","first","firstEnabled","setFocusedIndex","index","timeoutIds","add","focusLastItem","last","lastEnabled","onOpenInternal","_useDisclosure","onToggle","enabled","ref","handler","event","contains","target","popper","_objectSpread","_useState","_useState2","focusedIndex","focusRef","visible","shouldFocus","animationState","_useIds","_useIds2","buttonId","menuId","openAndFocusMenu","Set","ids","forEach","clearTimeout","clear","openAndFocusFirstItem","openAndFocusLastItem","refocus","_b","hasFocusWithin","shouldRefocus","item","rafId","onTransitionEnd","unstable__animationState","forceUpdate","orientation","useMenuButton","externalRef","menu","onKeyDown","eventKey","key","keyMap","Enter","ArrowDown","ArrowUp","action","preventDefault","stopPropagation","referenceRef","onClick","isTargetMenuItem","isHTMLElement","getAttribute","startsWith","useMenuList","Error","animated","createTypeaheadHandler","useShortcut","currentTarget","Tab","event2","Escape","next","nextEnabled","prev","prevEnabled","fn","onTypeahead","character","nextItem","getNextItemFromSearch","values","textContent","indexOf","hasBeenOpened","shouldRenderChildren","wasSelected","mode","isSelected","present","children","tabIndex","role","style","transformOrigin","useMenuPositioner","_useMenuContext","getPopperProps","visibility","useMenuItem","onMouseEnterProp","onMouseEnter","onMouseMoveProp","onMouseMove","onMouseLeaveProp","onMouseLeave","onClickProp","onFocusProp","onFocus","isDisabled","isFocusable","typeProp","type","htmlProps","_excluded2","menuCloseOnSelect","_useMenuDescendant","disabled","register","isFocused","trulyDisabled","cancelAnimationFrame","clickableProps","useMenuOption","_props$type","isChecked","rest","_excluded3","ownProps","useMenuOptionGroup","_props$type2","valueProp","value","defaultValue","onChangeProp","onChange","_excluded4","isRadio","fallback","_useControllableState","_useControllableState2","setValue","selectedValue","isArray","nextValue","includes","filter","validChildren","clones","child","call","useMenuState","_useMenuContext2","el","isElement","win","defaultView","window","HTMLElement","nodeType","Node","ELEMENT_NODE"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/menu/src/use-menu.ts"],"sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  useDisclosure,\n  UseDisclosureProps,\n} from \"@chakra-ui/react-use-disclosure\"\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\"\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\n\nimport React, {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  useId,\n  useMemo,\n  useEffect,\n} from \"react\"\nimport { useShortcut } from \"./use-shortcut\"\nimport { getNextItemFromSearch } from \"./get-next-item-from-search\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps\n  extends Omit<UsePopperProps, \"enabled\">,\n    UseDisclosureProps {\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: React.RefObject<{ focus(): void }>\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   *\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * If `rtl`, proper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note 🚨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   *\n   * @default false\n   */\n  computePositionOnMount?: boolean\n}\n\nfunction useIds(idProp?: string, ...prefixes: string[]) {\n  const reactId = useId()\n  const id = idProp || reactId\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n\nfunction isActiveElement(element: HTMLElement) {\n  const doc = getOwnerDocument(element)\n  return doc.activeElement === (element as HTMLElement)\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  const focusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      menuRef.current?.focus({ preventScroll: false })\n    })\n  }, [])\n\n  const focusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) {\n        initialFocusRef.current?.focus()\n      } else {\n        const first = descendants.firstEnabled()\n        if (first) setFocusedIndex(first.index)\n      }\n    })\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const focusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const onOpenInternal = useCallback(() => {\n    onOpenProp?.()\n    if (autoSelect) {\n      focusFirstItem()\n    } else {\n      focusMenu()\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp])\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal,\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper: any = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  const animationState = useAnimationState({ isOpen, ref: menuRef })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = useCallback(() => {\n    onOpen()\n    focusMenu()\n  }, [onOpen, focusMenu])\n\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  // clean up timeouts\n  useEffect(() => {\n    const ids = timeoutIds.current\n    return () => {\n      ids.forEach((id) => clearTimeout(id))\n      ids.clear()\n    }\n  }, [])\n\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen()\n    focusFirstItem()\n  }, [focusFirstItem, onOpen])\n\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen()\n    focusLastItem()\n  }, [onOpen, focusLastItem])\n\n  const refocus = useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    node?.focus({ preventScroll: true })\n  }, [isOpen, focusedIndex, descendants])\n\n  /**\n   * Track the animation frame which is scheduled to focus\n   * a menu item, so it can be cancelled if another item\n   * is focused before the animation executes. This prevents\n   * infinite rerenders.\n   */\n  const rafId = useRef<number | null>(null)\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n): React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      // ignore events bubbles from portal children\n      if (!event.currentTarget.contains(event.target as Element)) return\n\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\" | \"disabled\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n  /**\n   * The type of the menuitem.\n   */\n  type?: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"]\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId,\n  } = menu\n\n  const ref = useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = useCallback(\n    (event: any) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = useCallback(\n    (event: any) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = useCallback(\n    (event: any) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const onFocus = useCallback(\n    (event: React.FocusEvent) => {\n      onFocusProp?.(event)\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, onFocusProp, index],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      // Cancel any pending animations\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n      rafId.current = requestAnimationFrame(() => {\n        ref.current?.focus({ preventScroll: true })\n        rafId.current = null\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({ preventScroll: true })\n    }\n\n    return () => {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp ?? (clickableProps as any).type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends Omit<UseMenuItemProps, \"type\">,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && typeof value === \"string\") {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && Array.isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? value.filter((item) => item !== selectedValue)\n          : value.concat(selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n\nfunction isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) return false\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nfunction isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}