{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"min\", \"max\", \"value\", \"isIndeterminate\", \"role\"],\n  _excluded2 = [\"value\", \"min\", \"max\", \"hasStripe\", \"isAnimated\", \"children\", \"borderRadius\", \"isIndeterminate\", \"aria-label\", \"aria-labelledby\", \"aria-valuetext\", \"title\", \"role\"];\nimport { getProgressProps, progress, stripe } from \"./chunk-TXZFUZNG.mjs\";\n\n// src/progress.tsx\nimport { chakra, omitThemingProps, useMultiStyleConfig, forwardRef } from \"@chakra-ui/system\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"ProgressStylesContext\",\n    errorMessage: \"useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Progress />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  ProgressStylesProvider = _createContext2[0],\n  useProgressStyles = _createContext2[1];\nvar ProgressFilledTrack = forwardRef(function (props, ref) {\n  var min = props.min,\n    max = props.max,\n    value = props.value,\n    isIndeterminate = props.isIndeterminate,\n    role = props.role,\n    rest = _objectWithoutProperties(props, _excluded);\n  var progress2 = getProgressProps({\n    value: value,\n    min: min,\n    max: max,\n    isIndeterminate: isIndeterminate,\n    role: role\n  });\n  var styles = useProgressStyles();\n  var trackStyles = _objectSpread({\n    height: \"100%\"\n  }, styles.filledTrack);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref,\n    style: _objectSpread({\n      width: \"\".concat(progress2.percent, \"%\")\n    }, rest.style)\n  }, progress2.bind), rest), {}, {\n    __css: trackStyles\n  }));\n});\nvar Progress = forwardRef(function (props, ref) {\n  var _a;\n  var _omitThemingProps = omitThemingProps(props),\n    value = _omitThemingProps.value,\n    _omitThemingProps$min = _omitThemingProps.min,\n    min = _omitThemingProps$min === void 0 ? 0 : _omitThemingProps$min,\n    _omitThemingProps$max = _omitThemingProps.max,\n    max = _omitThemingProps$max === void 0 ? 100 : _omitThemingProps$max,\n    hasStripe = _omitThemingProps.hasStripe,\n    isAnimated = _omitThemingProps.isAnimated,\n    children = _omitThemingProps.children,\n    propBorderRadius = _omitThemingProps.borderRadius,\n    isIndeterminate = _omitThemingProps.isIndeterminate,\n    ariaLabel = _omitThemingProps[\"aria-label\"],\n    ariaLabelledBy = _omitThemingProps[\"aria-labelledby\"],\n    ariaValueText = _omitThemingProps[\"aria-valuetext\"],\n    title = _omitThemingProps.title,\n    role = _omitThemingProps.role,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded2);\n  var styles = useMultiStyleConfig(\"Progress\", props);\n  var borderRadius = propBorderRadius != null ? propBorderRadius : (_a = styles.track) == null ? void 0 : _a.borderRadius;\n  var stripeAnimation = {\n    animation: \"\".concat(stripe, \" 1s linear infinite\")\n  };\n  var shouldAddStripe = !isIndeterminate && hasStripe;\n  var shouldAnimateStripe = shouldAddStripe && isAnimated;\n  var css = _objectSpread(_objectSpread({}, shouldAnimateStripe && stripeAnimation), isIndeterminate && {\n    position: \"absolute\",\n    willChange: \"left\",\n    minWidth: \"50%\",\n    animation: \"\".concat(progress, \" 1s ease infinite normal none running\")\n  });\n  var trackStyles = _objectSpread({\n    overflow: \"hidden\",\n    position: \"relative\"\n  }, styles.track);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    borderRadius: borderRadius,\n    __css: trackStyles\n  }, rest), {}, {\n    children: /* @__PURE__ */jsxs(ProgressStylesProvider, {\n      value: styles,\n      children: [/* @__PURE__ */jsx(ProgressFilledTrack, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-valuetext\": ariaValueText,\n        min: min,\n        max: max,\n        value: value,\n        isIndeterminate: isIndeterminate,\n        css: css,\n        borderRadius: borderRadius,\n        title: title,\n        role: role\n      }), children]\n    })\n  }));\n});\nProgress.displayName = \"Progress\";\nexport { useProgressStyles, Progress };","map":{"version":3,"names":["chakra","omitThemingProps","useMultiStyleConfig","forwardRef","createContext","jsx","jsxs","_createContext","name","errorMessage","_createContext2","_slicedToArray","ProgressStylesProvider","useProgressStyles","ProgressFilledTrack","props","ref","min","max","value","isIndeterminate","role","rest","_objectWithoutProperties","_excluded","progress2","getProgressProps","styles","trackStyles","_objectSpread","height","filledTrack","div","style","width","concat","percent","bind","__css","Progress","_a","_omitThemingProps","_omitThemingProps$min","_omitThemingProps$max","hasStripe","isAnimated","children","propBorderRadius","borderRadius","ariaLabel","ariaLabelledBy","ariaValueText","title","_excluded2","track","stripeAnimation","animation","stripe","shouldAddStripe","shouldAnimateStripe","css","position","willChange","minWidth","progress","overflow","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/progress/src/progress.tsx"],"sourcesContent":["import {\n  chakra,\n  Interpolation,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport {\n  getProgressProps,\n  GetProgressPropsOptions,\n  progress,\n  stripe,\n} from \"./progress.utils\"\n\nconst [ProgressStylesProvider, useProgressStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgressStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `,\n})\n\nexport { useProgressStyles }\n\nexport interface ProgressFilledTrackProps\n  extends HTMLChakraProps<\"div\">,\n    GetProgressPropsOptions {}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nconst ProgressFilledTrack = forwardRef<ProgressFilledTrackProps, \"div\">(\n  (props, ref) => {\n    const { min, max, value, isIndeterminate, role, ...rest } = props\n    const progress = getProgressProps({\n      value,\n      min,\n      max,\n      isIndeterminate,\n      role,\n    })\n\n    const styles = useProgressStyles()\n    const trackStyles = {\n      height: \"100%\",\n      ...styles.filledTrack,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        style={{ width: `${progress.percent}%`, ...rest.style }}\n        {...progress.bind}\n        {...rest}\n        __css={trackStyles}\n      />\n    )\n  },\n)\n\nexport interface ProgressTrackProps extends HTMLChakraProps<\"div\"> {}\n\ninterface ProgressOptions {\n  /**\n   * The `value` of the progress indicator.\n   * If `undefined` the progress bar will be in `indeterminate` state\n   */\n  value?: number\n  /**\n   * The minimum value of the progress\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum value of the progress\n   * @default 100\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe\n   *\n   * @default false\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated\n   *\n   * @default false\n   */\n  isAnimated?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value`\n   * prop will be ignored\n   *\n   * @default false\n   */\n  isIndeterminate?: boolean\n}\n\nexport interface ProgressProps\n  extends ProgressOptions,\n    ThemingProps<\"Progress\">,\n    HTMLChakraProps<\"div\"> {}\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nexport const Progress = forwardRef<ProgressProps, \"div\">((props, ref) => {\n  const {\n    value,\n    min = 0,\n    max = 100,\n    hasStripe,\n    isAnimated,\n    children,\n    borderRadius: propBorderRadius,\n    isIndeterminate,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueText,\n    title,\n    role,\n    ...rest\n  } = omitThemingProps(props)\n\n  const styles = useMultiStyleConfig(\"Progress\", props)\n\n  const borderRadius =\n    propBorderRadius ??\n    (styles.track?.borderRadius as string | number | undefined)\n\n  const stripeAnimation = { animation: `${stripe} 1s linear infinite` }\n\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n  const shouldAddStripe = !isIndeterminate && hasStripe\n\n  const shouldAnimateStripe = shouldAddStripe && isAnimated\n\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n  const css: Interpolation<any> = {\n    ...(shouldAnimateStripe && stripeAnimation),\n    ...(isIndeterminate && {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: `${progress} 1s ease infinite normal none running`,\n    }),\n  }\n\n  const trackStyles: SystemStyleObject = {\n    overflow: \"hidden\",\n    position: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      borderRadius={borderRadius}\n      __css={trackStyles}\n      {...rest}\n    >\n      <ProgressStylesProvider value={styles}>\n        <ProgressFilledTrack\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-valuetext={ariaValueText}\n          min={min}\n          max={max}\n          value={value}\n          isIndeterminate={isIndeterminate}\n          css={css}\n          borderRadius={borderRadius}\n          title={title}\n          role={role}\n        />\n        {children}\n      </ProgressStylesProvider>\n    </chakra.div>\n  )\n})\n\nProgress.displayName = \"Progress\"\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}