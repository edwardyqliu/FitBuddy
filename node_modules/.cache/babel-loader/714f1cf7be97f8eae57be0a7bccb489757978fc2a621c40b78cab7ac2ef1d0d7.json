{"ast":null,"code":"'use client';\n\n// src/index.ts\nimport { useEffect } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useInterval(callback, delay) {\n  var fn = useCallbackRef(callback);\n  useEffect(function () {\n    var intervalId = null;\n    var tick = function tick() {\n      return fn();\n    };\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return function () {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\nexport { useInterval };","map":{"version":3,"names":["useEffect","useCallbackRef","useInterval","callback","delay","fn","intervalId","tick","window","setInterval","clearInterval"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/react-use-interval/src/index.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\nexport function useInterval(callback: () => void, delay: number | null) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    let intervalId: number | null = null\n    const tick = () => fn()\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay)\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId)\n      }\n    }\n  }, [delay, fn])\n}\n"],"mappings":";;;AAAA,SAASA,SAAA,QAAiB;AAC1B,SAASC,cAAA,QAAsB;AAQxB,SAASC,YAAYC,QAAA,EAAsBC,KAAA,EAAsB;EACtE,IAAMC,EAAA,GAAKJ,cAAA,CAAeE,QAAQ;EAElCH,SAAA,CAAU,YAAM;IACd,IAAIM,UAAA,GAA4B;IAChC,IAAMC,IAAA,GAAO,SAAPA,KAAA;MAAA,OAAaF,EAAA,CAAG;IAAA;IACtB,IAAID,KAAA,KAAU,MAAM;MAClBE,UAAA,GAAaE,MAAA,CAAOC,WAAA,CAAYF,IAAA,EAAMH,KAAK;IAC7C;IACA,OAAO,YAAM;MACX,IAAIE,UAAA,EAAY;QACdE,MAAA,CAAOE,aAAA,CAAcJ,UAAU;MACjC;IACF;EACF,GAAG,CAACF,KAAA,EAAOC,EAAE,CAAC;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}