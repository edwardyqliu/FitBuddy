{"ast":null,"code":"'use client';\n\n// src/aspect-ratio.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"ratio\", \"children\", \"className\"];\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AspectRatio = forwardRef(function (props, ref) {\n  var _props$ratio = props.ratio,\n    ratio = _props$ratio === void 0 ? 4 / 3 : _props$ratio,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutProperties(props, _excluded);\n  var child = Children.only(children);\n  var _className = cx(\"chakra-aspect-ratio\", className);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: \"\\\"\\\"\",\n      display: \"block\",\n      paddingBottom: mapResponsive(ratio, function (r) {\n        return \"\".concat(1 / r * 100, \"%\");\n      })\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    }\n  }, rest), {}, {\n    children: child\n  }));\n});\nAspectRatio.displayName = \"AspectRatio\";\nexport { AspectRatio };","map":{"version":3,"names":["chakra","forwardRef","mapResponsive","cx","Children","jsx","AspectRatio","props","ref","_props$ratio","ratio","children","className","rest","_objectWithoutProperties","_excluded","child","only","_className","div","_objectSpread","position","_before","height","content","display","paddingBottom","r","concat","__css","overflow","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/layout/src/aspect-ratio.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children } from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends Omit<HTMLChakraProps<\"div\">, \"aspectRatio\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(function (\n  props,\n  ref,\n) {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        },\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nAspectRatio.displayName = \"AspectRatio\"\n"],"mappings":";;;;;;AAAA,SACEA,MAAA,EACAC,UAAA,QAGK;AACP,SAASC,aAAA,QAAqB;AAC9B,SAASC,EAAA,QAAU;AAEnB,SAASC,QAAA,QAAgB;AAiCrB,SAAAC,GAAA;AAZG,IAAMC,WAAA,GAAcL,UAAA,CAAoC,UAC7DM,KAAA,EACAC,GAAA,EACA;EACA,IAAAC,YAAA,GAAwDF,KAAA,CAAhDG,KAAA;IAAAA,KAAA,GAAAD,YAAA,cAAQ,IAAI,IAAAA,YAAA;IAAGE,QAAA,GAAiCJ,KAAA,CAAjCI,QAAA;IAAUC,SAAA,GAAuBL,KAAA,CAAvBK,SAAA;IAAcC,IAAA,GAAAC,wBAAA,CAASP,KAAA,EAAAQ,SAAA;EAGxD,IAAMC,KAAA,GAAQZ,QAAA,CAASa,IAAA,CAAKN,QAAQ;EAEpC,IAAMO,UAAA,GAAaf,EAAA,CAAG,uBAAuBS,SAAS;EAEtD,OACE,eAAAP,GAAA,CAACL,MAAA,CAAOmB,GAAA,EAAAC,aAAA,CAAAA,aAAA;IACNZ,GAAA,EAAAA,GAAA;IACAa,QAAA,EAAS;IACTT,SAAA,EAAWM,UAAA;IACXI,OAAA,EAAS;MACPC,MAAA,EAAQ;MACRC,OAAA,QAAS;MACTC,OAAA,EAAS;MACTC,aAAA,EAAexB,aAAA,CAAcQ,KAAA,EAAO,UAACiB,CAAA;QAAA,UAAAC,MAAA,CAAU,IAAID,CAAA,GAAK,GAAG;MAAA,CAAG;IAChE;IACAE,KAAA,EAAO;MACL,oBAAoB;QAClBC,QAAA,EAAU;QACVT,QAAA,EAAU;QACVU,GAAA,EAAK;QACLC,KAAA,EAAO;QACPC,MAAA,EAAQ;QACRC,IAAA,EAAM;QACNT,OAAA,EAAS;QACTU,cAAA,EAAgB;QAChBC,UAAA,EAAY;QACZC,KAAA,EAAO;QACPd,MAAA,EAAQ;MACV;MACA,sBAAsB;QACpBe,SAAA,EAAW;MACb;IACF;EAAA,GACIzB,IAAA;IAEHF,QAAA,EAAAK;EAAA,EACH;AAEJ,CAAC;AAEDV,WAAA,CAAYiC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}