{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"variants\"];\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-transition.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction mergeVariants(variants) {\n  if (!variants) return;\n  return {\n    enter: _objectSpread(_objectSpread({}, variants.enter), {}, {\n      visibility: \"visible\"\n    }),\n    exit: _objectSpread(_objectSpread({}, variants.exit), {}, {\n      transitionEnd: {\n        visibility: \"hidden\"\n      }\n    })\n  };\n}\nvar scaleFade = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1]\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1]\n    }\n  }\n};\nvar MotionSection = chakra(motion.section);\nvar PopoverTransition = forwardRef(function PopoverTransition2(props, ref) {\n  var _props$variants = props.variants,\n    variants = _props$variants === void 0 ? scaleFade : _props$variants,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _usePopoverContext = usePopoverContext(),\n    isOpen = _usePopoverContext.isOpen;\n  return /* @__PURE__ */jsx(MotionSection, _objectSpread({\n    ref: ref,\n    variants: mergeVariants(variants),\n    initial: false,\n    animate: isOpen ? \"enter\" : \"exit\"\n  }, rest));\n});\nPopoverTransition.displayName = \"PopoverTransition\";\nexport { PopoverTransition };","map":{"version":3,"names":["chakra","forwardRef","motion","jsx","mergeVariants","variants","enter","_objectSpread","visibility","exit","transitionEnd","scaleFade","opacity","scale","transition","duration","ease","MotionSection","section","PopoverTransition","PopoverTransition2","props","ref","_props$variants","rest","_objectWithoutProperties","_excluded","_usePopoverContext","usePopoverContext","isOpen","initial","animate","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/popover/src/popover-transition.tsx"],"sourcesContent":["import { chakra, HTMLChakraProps, forwardRef } from \"@chakra-ui/system\"\nimport { HTMLMotionProps, motion, Variant } from \"framer-motion\"\nimport React from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\ntype HTMLMotionChakraProps<T extends keyof React.ReactHTML> = Omit<\n  HTMLChakraProps<T>,\n  keyof HTMLMotionProps<T>\n> &\n  Omit<\n    HTMLMotionProps<T>,\n    | \"style\"\n    | \"onDrag\"\n    | \"onDragEnd\"\n    | \"onDragStart\"\n    | \"onAnimationStart\"\n    | \"variants\"\n    | \"transition\"\n    | \"children\"\n  > & {\n    variants?: MotionVariants\n  }\n\ntype MotionVariants = Partial<Record<\"enter\" | \"exit\", Variant>>\n\nfunction mergeVariants(variants?: MotionVariants): any {\n  if (!variants) return\n  return {\n    enter: {\n      ...variants.enter,\n      visibility: \"visible\",\n    },\n    exit: {\n      ...variants.exit,\n      transitionEnd: {\n        visibility: \"hidden\",\n      },\n    },\n  }\n}\n\nconst scaleFade: MotionVariants = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1],\n    },\n  },\n}\n\nconst MotionSection = chakra(motion.section)\n\nexport interface PopoverTransitionProps\n  extends HTMLMotionChakraProps<\"section\"> {}\n\nexport const PopoverTransition = forwardRef(function PopoverTransition(\n  props: PopoverTransitionProps,\n  ref: React.Ref<any>,\n) {\n  const { variants = scaleFade, ...rest } = props\n  const { isOpen } = usePopoverContext()\n  return (\n    <MotionSection\n      ref={ref}\n      variants={mergeVariants(variants)}\n      initial={false}\n      animate={isOpen ? \"enter\" : \"exit\"}\n      {...rest}\n    />\n  )\n})\n\nPopoverTransition.displayName = \"PopoverTransition\"\n"],"mappings":";;;;;;;;AAAA,SAASA,MAAA,EAAyBC,UAAA,QAAkB;AACpD,SAA0BC,MAAA,QAAuB;AAuE7C,SAAAC,GAAA;AA/CJ,SAASC,cAAcC,QAAA,EAAgC;EACrD,IAAI,CAACA,QAAA,EAAU;EACf,OAAO;IACLC,KAAA,EAAAC,aAAA,CAAAA,aAAA,KACKF,QAAA,CAASC,KAAA;MACZE,UAAA,EAAY;IAAA,EACd;IACAC,IAAA,EAAAF,aAAA,CAAAA,aAAA,KACKF,QAAA,CAASI,IAAA;MACZC,aAAA,EAAe;QACbF,UAAA,EAAY;MACd;IAAA;EAEJ;AACF;AAEA,IAAMG,SAAA,GAA4B;EAChCF,IAAA,EAAM;IACJG,OAAA,EAAS;IACTC,KAAA,EAAO;IACPC,UAAA,EAAY;MACVC,QAAA,EAAU;MACVC,IAAA,EAAM,CAAC,KAAK,GAAG,GAAG,CAAC;IACrB;EACF;EACAV,KAAA,EAAO;IACLO,KAAA,EAAO;IACPD,OAAA,EAAS;IACTE,UAAA,EAAY;MACVC,QAAA,EAAU;MACVC,IAAA,EAAM,CAAC,GAAG,GAAG,KAAK,CAAC;IACrB;EACF;AACF;AAEA,IAAMC,aAAA,GAAgBjB,MAAA,CAAOE,MAAA,CAAOgB,OAAO;AAKpC,IAAMC,iBAAA,GAAoBlB,UAAA,CAAW,SAASmB,mBACnDC,KAAA,EACAC,GAAA,EACA;EACA,IAAAC,eAAA,GAA0CF,KAAA,CAAlChB,QAAA;IAAAA,QAAA,GAAAkB,eAAA,cAAWZ,SAAA,GAAAY,eAAA;IAAcC,IAAA,GAAAC,wBAAA,CAASJ,KAAA,EAAAK,SAAA;EAC1C,IAAAC,kBAAA,GAAmBC,iBAAA,CAAkB;IAA7BC,MAAA,GAAAF,kBAAA,CAAAE,MAAA;EACR,OACE,eAAA1B,GAAA,CAACc,aAAA,EAAAV,aAAA;IACCe,GAAA,EAAAA,GAAA;IACAjB,QAAA,EAAUD,aAAA,CAAcC,QAAQ;IAChCyB,OAAA,EAAS;IACTC,OAAA,EAASF,MAAA,GAAS,UAAU;EAAA,GACxBL,IAAA,CACN;AAEJ,CAAC;AAEDL,iBAAA,CAAkBa,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}