{"ast":null,"code":"import _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"onUpdate\", \"onComplete\"];\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\nvar supportsWaapi = memo(function () {\n  return Object.hasOwnProperty.call(Element.prototype, \"animate\");\n});\n/**\n * A list of values that can be hardware-accelerated.\n */\nvar acceleratedValues = new Set([\"opacity\", \"clipPath\", \"filter\", \"transform\", \"backgroundColor\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nvar sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nvar maxDuration = 20000;\nvar requiresPregeneratedKeyframes = function requiresPregeneratedKeyframes(valueName, options) {\n  return options.type === \"spring\" || valueName === \"backgroundColor\" || !isWaapiSupportedEasing(options.ease);\n};\nfunction createAcceleratedAnimation(value, valueName, _ref) {\n  var onUpdate = _ref.onUpdate,\n    onComplete = _ref.onComplete,\n    options = _objectWithoutProperties(_ref, _excluded);\n  var canAccelerateAnimation = supportsWaapi() && acceleratedValues.has(valueName) && !options.repeatDelay && options.repeatType !== \"mirror\" && options.damping !== 0 && options.type !== \"inertia\";\n  if (!canAccelerateAnimation) return false;\n  /**\n   * TODO: Unify with js/index\n   */\n  var hasStopped = false;\n  var resolveFinishedPromise;\n  var currentFinishedPromise;\n  /**\n   * Resolve the current Promise every time we enter the\n   * finished state. This is WAAPI-compatible behaviour.\n   */\n  var updateFinishedPromise = function updateFinishedPromise() {\n    currentFinishedPromise = new Promise(function (resolve) {\n      resolveFinishedPromise = resolve;\n    });\n  };\n  // Create the first finished promise\n  updateFinishedPromise();\n  var keyframes = options.keyframes,\n    _options$duration = options.duration,\n    duration = _options$duration === void 0 ? 300 : _options$duration,\n    ease = options.ease,\n    times = options.times;\n  /**\n   * If this animation needs pre-generated keyframes then generate.\n   */\n  if (requiresPregeneratedKeyframes(valueName, options)) {\n    var sampleAnimation = animateValue(_objectSpread(_objectSpread({}, options), {}, {\n      repeat: 0,\n      delay: 0\n    }));\n    var state = {\n      done: false,\n      value: keyframes[0]\n    };\n    var pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    var t = 0;\n    while (!state.done && t < maxDuration) {\n      state = sampleAnimation.sample(t);\n      pregeneratedKeyframes.push(state.value);\n      t += sampleDelta;\n    }\n    times = undefined;\n    keyframes = pregeneratedKeyframes;\n    duration = t - sampleDelta;\n    ease = \"linear\";\n  }\n  var animation = animateStyle(value.owner.current, valueName, keyframes, _objectSpread(_objectSpread({}, options), {}, {\n    duration: duration,\n    /**\n     * This function is currently not called if ease is provided\n     * as a function so the cast is safe.\n     *\n     * However it would be possible for a future refinement to port\n     * in easing pregeneration from Motion One for browsers that\n     * support the upcoming `linear()` easing function.\n     */\n    ease: ease,\n    times: times\n  }));\n  /**\n   * WAAPI animations don't resolve startTime synchronously. But a blocked\n   * thread could delay the startTime resolution by a noticeable amount.\n   * For synching handoff animations with the new Motion animation we want\n   * to ensure startTime is synchronously set.\n   */\n  if (options.syncStart) {\n    animation.startTime = frameData.isProcessing ? frameData.timestamp : document.timeline ? document.timeline.currentTime : performance.now();\n  }\n  var cancelAnimation = function cancelAnimation() {\n    return animation.cancel();\n  };\n  var safeCancel = function safeCancel() {\n    frame.update(cancelAnimation);\n    resolveFinishedPromise();\n    updateFinishedPromise();\n  };\n  /**\n   * Prefer the `onfinish` prop as it's more widely supported than\n   * the `finished` promise.\n   *\n   * Here, we synchronously set the provided MotionValue to the end\n   * keyframe. If we didn't, when the WAAPI animation is finished it would\n   * be removed from the element which would then revert to its old styles.\n   */\n  animation.onfinish = function () {\n    value.set(getFinalKeyframe(keyframes, options));\n    onComplete && onComplete();\n    safeCancel();\n  };\n  /**\n   * Animation interrupt callback.\n   */\n  var controls = {\n    then: function then(resolve, reject) {\n      return currentFinishedPromise.then(resolve, reject);\n    },\n    attachTimeline: function attachTimeline(timeline) {\n      animation.timeline = timeline;\n      animation.onfinish = null;\n      return noop;\n    },\n    get time() {\n      return millisecondsToSeconds(animation.currentTime || 0);\n    },\n    set time(newTime) {\n      animation.currentTime = secondsToMilliseconds(newTime);\n    },\n    get speed() {\n      return animation.playbackRate;\n    },\n    set speed(newSpeed) {\n      animation.playbackRate = newSpeed;\n    },\n    get duration() {\n      return millisecondsToSeconds(duration);\n    },\n    play: function play() {\n      if (hasStopped) return;\n      animation.play();\n      /**\n       * Cancel any pending cancel tasks\n       */\n      cancelFrame(cancelAnimation);\n    },\n    pause: function pause() {\n      return animation.pause();\n    },\n    stop: function stop() {\n      hasStopped = true;\n      if (animation.playState === \"idle\") return;\n      /**\n       * WAAPI doesn't natively have any interruption capabilities.\n       *\n       * Rather than read commited styles back out of the DOM, we can\n       * create a renderless JS animation and sample it twice to calculate\n       * its current value, \"previous\" value, and therefore allow\n       * Motion to calculate velocity for any subsequent animation.\n       */\n      var currentTime = animation.currentTime;\n      if (currentTime) {\n        var _sampleAnimation = animateValue(_objectSpread(_objectSpread({}, options), {}, {\n          autoplay: false\n        }));\n        value.setWithVelocity(_sampleAnimation.sample(currentTime - sampleDelta).value, _sampleAnimation.sample(currentTime).value, sampleDelta);\n      }\n      safeCancel();\n    },\n    complete: function complete() {\n      return animation.finish();\n    },\n    cancel: safeCancel\n  };\n  return controls;\n}\nexport { createAcceleratedAnimation };","map":{"version":3,"names":["animateStyle","isWaapiSupportedEasing","getFinalKeyframe","animateValue","millisecondsToSeconds","secondsToMilliseconds","memo","noop","frameData","frame","cancelFrame","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","sampleDelta","maxDuration","requiresPregeneratedKeyframes","valueName","options","type","ease","createAcceleratedAnimation","value","_ref","onUpdate","onComplete","_objectWithoutProperties","_excluded","canAccelerateAnimation","has","repeatDelay","repeatType","damping","hasStopped","resolveFinishedPromise","currentFinishedPromise","updateFinishedPromise","Promise","resolve","keyframes","_options$duration","duration","times","sampleAnimation","_objectSpread","repeat","delay","state","done","pregeneratedKeyframes","t","sample","push","undefined","animation","owner","current","syncStart","startTime","isProcessing","timestamp","document","timeline","currentTime","performance","now","cancelAnimation","cancel","safeCancel","update","onfinish","set","controls","then","reject","attachTimeline","time","newTime","speed","playbackRate","newSpeed","play","pause","stop","playState","autoplay","setWithVelocity","complete","finish"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs"],"sourcesContent":["import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}