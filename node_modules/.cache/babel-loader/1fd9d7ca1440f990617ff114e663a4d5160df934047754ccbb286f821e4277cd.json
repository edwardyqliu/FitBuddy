{"ast":null,"code":"import _classCallCheck from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nvar FocusGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(FocusGesture, _Feature);\n  var _super = _createSuper(FocusGesture);\n  function FocusGesture() {\n    var _this;\n    _classCallCheck(this, FocusGesture);\n    _this = _super.apply(this, arguments);\n    _this.isActive = false;\n    return _this;\n  }\n  _createClass(FocusGesture, [{\n    key: \"onFocus\",\n    value: function onFocus() {\n      var isFocusVisible = false;\n      /**\n       * If this element doesn't match focus-visible then don't\n       * apply whileHover. But, if matches throws that focus-visible\n       * is not a valid selector then in that browser outline styles will be applied\n       * to the element by default and we want to match that behaviour with whileFocus.\n       */\n      try {\n        isFocusVisible = this.node.current.matches(\":focus-visible\");\n      } catch (e) {\n        isFocusVisible = true;\n      }\n      if (!isFocusVisible || !this.node.animationState) return;\n      this.node.animationState.setActive(\"whileFocus\", true);\n      this.isActive = true;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      if (!this.isActive || !this.node.animationState) return;\n      this.node.animationState.setActive(\"whileFocus\", false);\n      this.isActive = false;\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _this2 = this;\n      this.unmount = pipe(addDomEvent(this.node.current, \"focus\", function () {\n        return _this2.onFocus();\n      }), addDomEvent(this.node.current, \"blur\", function () {\n        return _this2.onBlur();\n      }));\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n  return FocusGesture;\n}(Feature);\nexport { FocusGesture };","map":{"version":3,"names":["addDomEvent","Feature","pipe","FocusGesture","_Feature","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","isActive","_createClass","key","value","onFocus","isFocusVisible","node","current","matches","e","animationState","setActive","onBlur","mount","_this2","unmount"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/framer-motion/dist/es/gestures/focus.mjs"],"sourcesContent":["import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n"],"mappings":";;;;AAAA,SAASA,WAAW,QAAQ,6BAA6B;AACzD,SAASC,OAAO,QAAQ,gCAAgC;AACxD,SAASC,IAAI,QAAQ,mBAAmB;AAAC,IAEnCC,YAAY,0BAAAC,QAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,QAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EACd,SAAAA,aAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,YAAA;IACVK,KAAA,GAAAF,MAAA,CAAAI,KAAA,OAASC,SAAS;IAClBH,KAAA,CAAKI,QAAQ,GAAG,KAAK;IAAC,OAAAJ,KAAA;EAC1B;EAACK,YAAA,CAAAV,YAAA;IAAAW,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAA,EAAU;MACN,IAAIC,cAAc,GAAG,KAAK;MAC1B;AACR;AACA;AACA;AACA;AACA;MACQ,IAAI;QACAA,cAAc,GAAG,IAAI,CAACC,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAChE,CAAC,CACD,OAAOC,CAAC,EAAE;QACNJ,cAAc,GAAG,IAAI;MACzB;MACA,IAAI,CAACA,cAAc,IAAI,CAAC,IAAI,CAACC,IAAI,CAACI,cAAc,EAC5C;MACJ,IAAI,CAACJ,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC;MACtD,IAAI,CAACX,QAAQ,GAAG,IAAI;IACxB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAS,OAAA,EAAS;MACL,IAAI,CAAC,IAAI,CAACZ,QAAQ,IAAI,CAAC,IAAI,CAACM,IAAI,CAACI,cAAc,EAC3C;MACJ,IAAI,CAACJ,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC;MACvD,IAAI,CAACX,QAAQ,GAAG,KAAK;IACzB;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAU,MAAA,EAAQ;MAAA,IAAAC,MAAA;MACJ,IAAI,CAACC,OAAO,GAAGzB,IAAI,CAACF,WAAW,CAAC,IAAI,CAACkB,IAAI,CAACC,OAAO,EAAE,OAAO,EAAE;QAAA,OAAMO,MAAI,CAACV,OAAO,CAAC,CAAC;MAAA,EAAC,EAAEhB,WAAW,CAAC,IAAI,CAACkB,IAAI,CAACC,OAAO,EAAE,MAAM,EAAE;QAAA,OAAMO,MAAI,CAACF,MAAM,CAAC,CAAC;MAAA,EAAC,CAAC;IACnJ;EAAC;IAAAV,GAAA;IAAAC,KAAA,EACD,SAAAY,QAAA,EAAU,CAAE;EAAC;EAAA,OAAAxB,YAAA;AAAA,EAjCUF,OAAO;AAoClC,SAASE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}