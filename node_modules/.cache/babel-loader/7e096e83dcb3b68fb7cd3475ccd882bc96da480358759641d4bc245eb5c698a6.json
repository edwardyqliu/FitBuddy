{"ast":null,"code":"'use client';\n\nimport { usePopoverContext } from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement } from \"react\";\nfunction PopoverTrigger(props) {\n  var child = Children.only(props.children);\n  var _usePopoverContext = usePopoverContext(),\n    getTriggerProps = _usePopoverContext.getTriggerProps;\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\nPopoverTrigger.displayName = \"PopoverTrigger\";\nexport { PopoverTrigger };","map":{"version":3,"names":["Children","cloneElement","PopoverTrigger","props","child","only","children","_usePopoverContext","usePopoverContext","getTriggerProps","ref","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/popover/src/popover-trigger.tsx"],"sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\nexport function PopoverTrigger(props: { children: React.ReactNode }) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\"\n"],"mappings":";;;;;AAAA,SAASA,QAAA,EAAUC,YAAA,QAAoB;AAQhC,SAASC,eAAeC,KAAA,EAAsC;EAEnE,IAAMC,KAAA,GAAaJ,QAAA,CAASK,IAAA,CAAKF,KAAA,CAAMG,QAAQ;EAC/C,IAAAC,kBAAA,GAA4BC,iBAAA,CAAkB;IAAtCC,eAAA,GAAAF,kBAAA,CAAAE,eAAA;EACR,OAAOR,YAAA,CAAaG,KAAA,EAAOK,eAAA,CAAgBL,KAAA,CAAMD,KAAA,EAAOC,KAAA,CAAMM,GAAG,CAAC;AACpE;AAEAR,cAAA,CAAeS,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}