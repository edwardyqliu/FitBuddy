{"ast":null,"code":"'use client';\n\n// src/use-popover.ts\nimport _defineProperty from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"closeOnBlur\", \"closeOnEsc\", \"initialFocusRef\", \"id\", \"returnFocusOnClose\", \"autoFocus\", \"arrowSize\", \"arrowShadowColor\", \"trigger\", \"openDelay\", \"closeDelay\", \"isLazy\", \"lazyBehavior\", \"computePositionOnMount\"];\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\";\nimport { useFocusOnPointerDown } from \"@chakra-ui/react-use-focus-on-pointer-down\";\nimport { useFocusOnHide, useFocusOnShow } from \"@chakra-ui/react-use-focus-effect\";\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { lazyDisclosure } from \"@chakra-ui/lazy-utils\";\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\";\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\nfunction usePopover() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$closeOnBlur = props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    _props$closeOnEsc = props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    initialFocusRef = props.initialFocusRef,\n    id = props.id,\n    _props$returnFocusOnC = props.returnFocusOnClose,\n    returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,\n    _props$autoFocus = props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    arrowSize = props.arrowSize,\n    arrowShadowColor = props.arrowShadowColor,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger,\n    _props$openDelay = props.openDelay,\n    openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay,\n    _props$closeDelay = props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,\n    isLazy = props.isLazy,\n    _props$lazyBehavior = props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    computePositionOnMount = props.computePositionOnMount,\n    popperProps = _objectWithoutProperties(props, _excluded);\n  var _useDisclosure = useDisclosure(props),\n    isOpen = _useDisclosure.isOpen,\n    onClose = _useDisclosure.onClose,\n    onOpen = _useDisclosure.onOpen,\n    onToggle = _useDisclosure.onToggle;\n  var anchorRef = useRef(null);\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var isHoveringRef = useRef(false);\n  var hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasHeader = _useState2[0],\n    setHasHeader = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hasBody = _useState4[0],\n    setHasBody = _useState4[1];\n  var uuid = useId();\n  var uid = id != null ? id : uuid;\n  var _map = [\"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"].map(function (id2) {\n      return \"\".concat(id2, \"-\").concat(uid);\n    }),\n    _map2 = _slicedToArray(_map, 4),\n    triggerId = _map2[0],\n    popoverId = _map2[1],\n    headerId = _map2[2],\n    bodyId = _map2[3];\n  var _usePopper = usePopper(_objectSpread(_objectSpread({}, popperProps), {}, {\n      enabled: isOpen || !!computePositionOnMount\n    })),\n    referenceRef = _usePopper.referenceRef,\n    getArrowProps = _usePopper.getArrowProps,\n    getPopperProps = _usePopper.getPopperProps,\n    getArrowInnerProps = _usePopper.getArrowInnerProps,\n    forceUpdate = _usePopper.forceUpdate;\n  var animated = useAnimationState({\n    isOpen: isOpen,\n    ref: popoverRef\n  });\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  var shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  var getPopoverProps = useCallback(function () {\n    var _objectSpread2;\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var popoverProps = _objectSpread(_objectSpread({}, props2), {}, {\n      style: _objectSpread(_objectSpread({}, props2.style), {}, (_objectSpread2 = {\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      }, _defineProperty(_objectSpread2, popperCSSVars.arrowSize.var, arrowSize ? \"\".concat(arrowSize, \"px\") : void 0), _defineProperty(_objectSpread2, popperCSSVars.arrowShadowColor.var, arrowShadowColor), _objectSpread2)),\n      ref: mergeRefs(popoverRef, _ref),\n      children: shouldRenderChildren ? props2.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props2.onKeyDown, function (event) {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var targetIsPopover = contains(popoverRef.current, relatedTarget);\n        var targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        var isValidBlur = !targetIsPopover && !targetIsTrigger;\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : void 0,\n      \"aria-describedby\": hasBody ? bodyId : void 0\n    });\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, function () {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, function (event) {\n        if (event.nativeEvent.relatedTarget === null) {\n          return;\n        }\n        isHoveringRef.current = false;\n        setTimeout(function () {\n          return onClose();\n        }, closeDelay);\n      });\n    }\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  var getPopoverPositionerProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return getPopperProps(_objectSpread(_objectSpread({}, props2), {}, {\n      style: _objectSpread({\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }, props2.style)\n    }), forwardedRef);\n  }, [isOpen, getPopperProps]);\n  var getAnchorProps = useCallback(function (props2) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      // If anchor is rendered, it is used as reference.\n      ref: mergeRefs(_ref, anchorRef, referenceRef)\n    });\n  }, [anchorRef, referenceRef]);\n  var openTimeout = useRef();\n  var closeTimeout = useRef();\n  var maybeReferenceRef = useCallback(function (node) {\n    if (anchorRef.current == null) {\n      referenceRef(node);\n    }\n  }, [referenceRef]);\n  var getTriggerProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var triggerProps = _objectSpread(_objectSpread({}, props2), {}, {\n      ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props2.onClick, onToggle);\n    }\n    if (trigger === TRIGGER.hover) {\n      triggerProps.onFocus = callAllHandlers(props2.onFocus, function () {\n        if (openTimeout.current === void 0) {\n          onOpen();\n        }\n      });\n      triggerProps.onBlur = callAllHandlers(props2.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var isValidBlur = !contains(popoverRef.current, relatedTarget);\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      });\n      triggerProps.onKeyDown = callAllHandlers(props2.onKeyDown, function (event) {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props2.onMouseEnter, function () {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(function () {\n          return onOpen();\n        }, openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props2.onMouseLeave, function () {\n        isHoveringRef.current = false;\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = void 0;\n        }\n        closeTimeout.current = window.setTimeout(function () {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, maybeReferenceRef, onToggle, onOpen, closeOnBlur, onClose, openDelay, closeDelay]);\n  useEffect(function () {\n    return function () {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  var getHeaderProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      id: headerId,\n      ref: mergeRefs(ref, function (node) {\n        setHasHeader(!!node);\n      })\n    });\n  }, [headerId]);\n  var getBodyProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread(_objectSpread({}, props2), {}, {\n      id: bodyId,\n      ref: mergeRefs(ref, function (node) {\n        setHasBody(!!node);\n      })\n    });\n  }, [bodyId]);\n  return {\n    forceUpdate: forceUpdate,\n    isOpen: isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose: onClose,\n    getAnchorProps: getAnchorProps,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getPopoverPositionerProps: getPopoverPositionerProps,\n    getPopoverProps: getPopoverProps,\n    getTriggerProps: getTriggerProps,\n    getHeaderProps: getHeaderProps,\n    getBodyProps: getBodyProps\n  };\n}\nfunction contains(parent, child) {\n  return parent === child || (parent == null ? void 0 : parent.contains(child));\n}\nfunction getRelatedTarget(event) {\n  var _a;\n  var activeEl = event.currentTarget.ownerDocument.activeElement;\n  return (_a = event.relatedTarget) != null ? _a : activeEl;\n}\nexport { usePopover };","map":{"version":3,"names":["useAnimationState","useFocusOnPointerDown","useFocusOnHide","useFocusOnShow","useDisclosure","popperCSSVars","usePopper","mergeRefs","callAllHandlers","lazyDisclosure","useCallback","useEffect","useId","useRef","useState","TRIGGER","click","hover","usePopover","props","arguments","length","undefined","_props$closeOnBlur","closeOnBlur","_props$closeOnEsc","closeOnEsc","initialFocusRef","id","_props$returnFocusOnC","returnFocusOnClose","_props$autoFocus","autoFocus","arrowSize","arrowShadowColor","_props$trigger","trigger","_props$openDelay","openDelay","_props$closeDelay","closeDelay","isLazy","_props$lazyBehavior","lazyBehavior","computePositionOnMount","popperProps","_objectWithoutProperties","_excluded","_useDisclosure","isOpen","onClose","onOpen","onToggle","anchorRef","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","_useState","_useState2","_slicedToArray","hasHeader","setHasHeader","_useState3","_useState4","hasBody","setHasBody","uuid","uid","_map","map","id2","concat","_map2","triggerId","popoverId","headerId","bodyId","_usePopper","_objectSpread","enabled","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","animated","ref","focusRef","visible","shouldFocus","shouldRenderChildren","wasSelected","mode","isSelected","present","getPopoverProps","_objectSpread2","props2","_ref","popoverProps","style","transformOrigin","varRef","_defineProperty","var","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","getRelatedTarget","targetIsPopover","contains","targetIsTrigger","isValidBlur","onMouseEnter","onMouseLeave","nativeEvent","setTimeout","getPopoverPositionerProps","forwardedRef","visibility","getAnchorProps","openTimeout","closeTimeout","maybeReferenceRef","node","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getHeaderProps","getBodyProps","onAnimationComplete","onComplete","parent","child","_a","activeEl","currentTarget","ownerDocument","activeElement"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/popover/src/use-popover.ts"],"sourcesContent":["import { useAnimationState } from \"@chakra-ui/react-use-animation-state\"\nimport { useFocusOnPointerDown } from \"@chakra-ui/react-use-focus-on-pointer-down\"\nimport {\n  useFocusOnHide,\n  useFocusOnShow,\n} from \"@chakra-ui/react-use-focus-effect\"\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\"\nimport { popperCSSVars, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { DOMAttributes, PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps extends Omit<UsePopperProps, \"enabled\"> {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-describedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: React.RefObject<{ focus(): void }>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   * @default true\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   * @default true\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   * @default true\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   *\n   * @default \"click\"\n   */\n  trigger?: keyof typeof TRIGGER\n  /**\n   * Delay in milliseconds before the popover opens after a trigger event.\n   * Only works when `trigger=\"hover\"`\n   *\n   * @default 200\n   */\n  openDelay?: number\n  /**\n   * Delay in milliseconds before the popover closes after a trigger event.\n   * Only works when `trigger=\"hover\"`\n   *\n   * @default 200\n   */\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of popover's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The popover's content is always unmounted when not open.\n   * - \"keepMounted\": The popover's content initially unmounted,\n   * but stays mounted when popover is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * If `true`, the popover will be positioned when it mounts\n   * (even if it's not open)\n   *\n   * Note 🚨: We don't recommend using this in a popover/menu intensive UI or page\n   * as it might affect scrolling performance.\n   */\n  computePositionOnMount?: boolean\n}\n\n/**\n * @internal\n */\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    computePositionOnMount,\n    ...popperProps\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const anchorRef = useRef<HTMLElement>(null)\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const [hasHeader, setHasHeader] = useState(false)\n  const [hasBody, setHasBody] = useState(false)\n\n  const uuid = useId()\n  const uid = id ?? uuid\n  const [triggerId, popoverId, headerId, bodyId] = [\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  ].map((id) => `${id}-${uid}`)\n\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate,\n  } = usePopper({\n    ...popperProps,\n    enabled: isOpen || !!computePositionOnMount,\n  })\n\n  const animated = useAnimationState({ isOpen, ref: popoverRef })\n\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: DOMAttributes = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n          [popperCSSVars.arrowSize.var]: arrowSize\n            ? `${arrowSize}px`\n            : undefined,\n          [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: shouldRenderChildren ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(\n          props.onMouseLeave,\n          (event) => {\n            // https://stackoverflow.com/questions/46831247/select-triggers-mouseleave-event-on-parent-element-in-mozilla-firefox\n            if (event.nativeEvent.relatedTarget === null) {\n              return\n            }\n            isHoveringRef.current = false\n            setTimeout(() => onClose(), closeDelay)\n          },\n        )\n      }\n\n      return popoverProps\n    },\n    [\n      shouldRenderChildren,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      isOpen,\n      closeOnBlur,\n      closeDelay,\n      arrowShadowColor,\n      arrowSize,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            visibility: isOpen ? \"visible\" : \"hidden\",\n            ...props.style,\n          },\n        },\n        forwardedRef,\n      ),\n    [isOpen, getPopperProps],\n  )\n\n  const getAnchorProps: PropGetter = useCallback(\n    (props, _ref = null) => {\n      return {\n        ...props,\n        // If anchor is rendered, it is used as reference.\n        ref: mergeRefs(_ref, anchorRef, referenceRef),\n      }\n    },\n    [anchorRef, referenceRef],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const maybeReferenceRef = useCallback(\n    (node: Element) => {\n      // Don't override referenceRef in case the PopoverAnchor is rendered.\n      if (anchorRef.current == null) {\n        referenceRef(node)\n      }\n    },\n    [referenceRef],\n  )\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: DOMAttributes = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, maybeReferenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, () => {\n          // If openTimeout.current does not exist, the user is using keyboard focus (not mouse hover/click)\n          if (openTimeout.current === undefined) {\n            onOpen()\n          }\n        })\n        triggerProps.onBlur = callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const isValidBlur = !contains(popoverRef.current, relatedTarget)\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        })\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(() => onOpen(), openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      maybeReferenceRef,\n      onToggle,\n      onOpen,\n      closeOnBlur,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current)\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current)\n      }\n    }\n  }, [])\n\n  const getHeaderProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: headerId,\n      ref: mergeRefs(ref, (node: HTMLElement | null) => {\n        setHasHeader(!!node)\n      }),\n    }),\n    [headerId],\n  )\n\n  const getBodyProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node)\n      }),\n    }),\n    [bodyId],\n  )\n\n  return {\n    forceUpdate,\n    isOpen,\n    onAnimationComplete: animated.onComplete,\n    onClose,\n    getAnchorProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n\nfunction contains(parent: HTMLElement | null, child: HTMLElement | null) {\n  return parent === child || parent?.contains(child)\n}\n\nfunction getRelatedTarget(event: React.FocusEvent) {\n  const activeEl = event.currentTarget.ownerDocument.activeElement\n  return (event.relatedTarget ?? activeEl) as HTMLElement | null\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}