{"ast":null,"code":"'use client';\n\n// src/use-clipboard.ts\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"timeout\"];\nimport { useState, useCallback, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\nfunction useClipboard(value) {\n  var optionsOrTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasCopied = _useState2[0],\n    setHasCopied = _useState2[1];\n  var _useState3 = useState(value),\n    _useState4 = _slicedToArray(_useState3, 2),\n    valueState = _useState4[0],\n    setValueState = _useState4[1];\n  useEffect(function () {\n    return setValueState(value);\n  }, [value]);\n  var _ref = typeof optionsOrTimeout === \"number\" ? {\n      timeout: optionsOrTimeout\n    } : optionsOrTimeout,\n    _ref$timeout = _ref.timeout,\n    timeout = _ref$timeout === void 0 ? 1500 : _ref$timeout,\n    copyOptions = _objectWithoutProperties(_ref, _excluded);\n  var onCopy = useCallback(function () {\n    var didCopy = copy(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  useEffect(function () {\n    var timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(function () {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\nexport { useClipboard };","map":{"version":3,"names":["useState","useCallback","useEffect","copy","useClipboard","value","optionsOrTimeout","arguments","length","undefined","_useState","_useState2","_slicedToArray","hasCopied","setHasCopied","_useState3","_useState4","valueState","setValueState","_ref","timeout","_ref$timeout","copyOptions","_objectWithoutProperties","_excluded","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","setValue"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/hooks/src/use-clipboard.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\nexport interface UseClipboardOptions {\n  /**\n   * timeout delay (in ms) to switch back to initial state once copied.\n   */\n  timeout?: number\n  /**\n   * Set the desired MIME type\n   */\n  format?: string\n}\n\n/**\n * React hook to copy content to clipboard\n *\n * @param value the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-clipboard\n */\nexport function useClipboard(\n  value: string,\n  optionsOrTimeout: number | UseClipboardOptions = {},\n) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const [valueState, setValueState] = useState(value)\n  useEffect(() => setValueState(value), [value])\n\n  const { timeout = 1500, ...copyOptions } =\n    typeof optionsOrTimeout === \"number\"\n      ? { timeout: optionsOrTimeout }\n      : optionsOrTimeout\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions)\n    setHasCopied(didCopy)\n  }, [valueState, copyOptions])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied,\n  }\n}\n"],"mappings":";;;;;;AAAA,SAASA,QAAA,EAAUC,WAAA,EAAaC,SAAA,QAAiB;AACjD,OAAOC,IAAA,MAAU;AAwBV,SAASC,aACdC,KAAA,EAEA;EAAA,IADAC,gBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiD,CAAC;EAElD,IAAAG,SAAA,GAAkCV,QAAA,CAAS,KAAK;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAA,GAAAF,UAAA;IAAWG,YAAY,GAAAH,UAAA;EAE9B,IAAAI,UAAA,GAAoCf,QAAA,CAASK,KAAK;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,UAAA,GAAAD,UAAA;IAAYE,aAAa,GAAAF,UAAA;EAChCd,SAAA,CAAU;IAAA,OAAMgB,aAAA,CAAcb,KAAK;EAAA,GAAG,CAACA,KAAK,CAAC;EAE7C,IAAAc,IAAA,GACE,OAAOb,gBAAA,KAAqB,WACxB;MAAEc,OAAA,EAASd;IAAiB,IAC5BA,gBAAA;IAAAe,YAAA,GAAAF,IAAA,CAHEC,OAAA;IAAAA,OAAA,GAAAC,YAAA,cAAU,OAAAA,YAAA;IAASC,WAAA,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EAK3B,IAAMC,MAAA,GAASxB,WAAA,CAAY,YAAM;IAC/B,IAAMyB,OAAA,GAAUvB,IAAA,CAAKc,UAAA,EAAYK,WAAW;IAC5CR,YAAA,CAAaY,OAAO;EACtB,GAAG,CAACT,UAAA,EAAYK,WAAW,CAAC;EAE5BpB,SAAA,CAAU,YAAM;IACd,IAAIyB,SAAA,GAA2B;IAE/B,IAAId,SAAA,EAAW;MACbc,SAAA,GAAYC,MAAA,CAAOC,UAAA,CAAW,YAAM;QAClCf,YAAA,CAAa,KAAK;MACpB,GAAGM,OAAO;IACZ;IAEA,OAAO,YAAM;MACX,IAAIO,SAAA,EAAW;QACbC,MAAA,CAAOE,YAAA,CAAaH,SAAS;MAC/B;IACF;EACF,GAAG,CAACP,OAAA,EAASP,SAAS,CAAC;EAEvB,OAAO;IACLR,KAAA,EAAOY,UAAA;IACPc,QAAA,EAAUb,aAAA;IACVO,MAAA,EAAAA,MAAA;IACAZ,SAAA,EAAAA;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}