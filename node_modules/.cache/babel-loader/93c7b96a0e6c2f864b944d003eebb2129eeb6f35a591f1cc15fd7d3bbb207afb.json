{"ast":null,"code":"'use client';\n\n// src/focus-lock.tsx\nimport ReactFocusLock from \"react-focus-lock\";\nimport { getAllFocusable } from \"@chakra-ui/dom-utils\";\nimport { useCallback } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _a;\nvar FocusTrap = (_a = ReactFocusLock.default) != null ? _a : ReactFocusLock;\nvar FocusLock = function FocusLock(props) {\n  var initialFocusRef = props.initialFocusRef,\n    finalFocusRef = props.finalFocusRef,\n    contentRef = props.contentRef,\n    restoreFocus = props.restoreFocus,\n    children = props.children,\n    isDisabled = props.isDisabled,\n    autoFocus = props.autoFocus,\n    persistentFocus = props.persistentFocus,\n    lockFocusAcrossFrames = props.lockFocusAcrossFrames;\n  var onActivation = useCallback(function () {\n    if (initialFocusRef == null ? void 0 : initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (contentRef == null ? void 0 : contentRef.current) {\n      var focusables = getAllFocusable(contentRef.current);\n      if (focusables.length === 0) {\n        requestAnimationFrame(function () {\n          var _a2;\n          (_a2 = contentRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n  var onDeactivation = useCallback(function () {\n    var _a2;\n    (_a2 = finalFocusRef == null ? void 0 : finalFocusRef.current) == null ? void 0 : _a2.focus();\n  }, [finalFocusRef]);\n  var returnFocus = restoreFocus && !finalFocusRef;\n  return /* @__PURE__ */jsx(FocusTrap, {\n    crossFrame: lockFocusAcrossFrames,\n    persistentFocus: persistentFocus,\n    autoFocus: autoFocus,\n    disabled: isDisabled,\n    onActivation: onActivation,\n    onDeactivation: onDeactivation,\n    returnFocus: returnFocus,\n    children: children\n  });\n};\nFocusLock.displayName = \"FocusLock\";\nvar focus_lock_default = FocusLock;\nexport { FocusLock, focus_lock_default };","map":{"version":3,"names":["ReactFocusLock","getAllFocusable","useCallback","jsx","_a","FocusTrap","default","FocusLock","props","initialFocusRef","finalFocusRef","contentRef","restoreFocus","children","isDisabled","autoFocus","persistentFocus","lockFocusAcrossFrames","onActivation","current","focus","focusables","length","requestAnimationFrame","_a2","onDeactivation","returnFocus","crossFrame","disabled","displayName","focus_lock_default"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/focus-lock/src/focus-lock.tsx"],"sourcesContent":["import ReactFocusLock from \"react-focus-lock\"\nimport { getAllFocusable } from \"@chakra-ui/dom-utils\"\nimport { useCallback } from \"react\"\n\nconst FocusTrap: typeof ReactFocusLock =\n  (ReactFocusLock as any).default ?? ReactFocusLock\n\ninterface FocusableElement {\n  focus(options?: FocusOptions): void\n}\nexport interface FocusLockProps {\n  /**\n   * `ref` of the element to receive focus initially\n   */\n  initialFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * `ref` of the element to return focus to when `FocusLock`\n   * unmounts\n   */\n  finalFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * The `ref` of the wrapper for which the focus-lock wraps\n   */\n  contentRef?: React.RefObject<HTMLElement>\n  /**\n   * If `true`, focus will be restored to the element that\n   * triggered the `FocusLock` once it unmounts\n   *\n   * @default false\n   */\n  restoreFocus?: boolean\n  /**\n   * The component to render\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, focus trapping will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the first focusable element within the `children`\n   * will auto-focused once `FocusLock` mounts\n   *\n   * @default false\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, disables text selections inside, and outside focus lock\n   *\n   * @default false\n   */\n  persistentFocus?: boolean\n  /**\n   * Enables aggressive focus capturing within iframes.\n   * - If `true`: keep focus in the lock, no matter where lock is active\n   * - If `false`:  allows focus to move outside of iframe\n   *\n   * @default false\n   */\n  lockFocusAcrossFrames?: boolean\n}\n\nexport const FocusLock: React.FC<FocusLockProps> = (props) => {\n  const {\n    initialFocusRef,\n    finalFocusRef,\n    contentRef,\n    restoreFocus,\n    children,\n    isDisabled,\n    autoFocus,\n    persistentFocus,\n    lockFocusAcrossFrames,\n  } = props\n\n  const onActivation = useCallback(() => {\n    if (initialFocusRef?.current) {\n      initialFocusRef.current.focus()\n    } else if (contentRef?.current) {\n      const focusables = getAllFocusable(contentRef.current)\n      if (focusables.length === 0) {\n        requestAnimationFrame(() => {\n          contentRef.current?.focus()\n        })\n      }\n    }\n  }, [initialFocusRef, contentRef])\n\n  const onDeactivation = useCallback(() => {\n    finalFocusRef?.current?.focus()\n  }, [finalFocusRef])\n\n  const returnFocus = restoreFocus && !finalFocusRef\n\n  return (\n    <FocusTrap\n      crossFrame={lockFocusAcrossFrames}\n      persistentFocus={persistentFocus}\n      autoFocus={autoFocus}\n      disabled={isDisabled}\n      onActivation={onActivation}\n      onDeactivation={onDeactivation}\n      returnFocus={returnFocus}\n    >\n      {children}\n    </FocusTrap>\n  )\n}\n\nFocusLock.displayName = \"FocusLock\"\n\nexport default FocusLock\n"],"mappings":";;;AAAA,OAAOA,cAAA,MAAoB;AAC3B,SAASC,eAAA,QAAuB;AAChC,SAASC,WAAA,QAAmB;AA+FxB,SAAAC,GAAA;AAjGJ,IAAAC,EAAA;AAIA,IAAMC,SAAA,IACHD,EAAA,GAAAJ,cAAA,CAAuBM,OAAA,KAAvB,OAAAF,EAAA,GAAkCJ,cAAA;AA2D9B,IAAMO,SAAA,GAAsC,SAAtCA,UAAuCC,KAAA,EAAU;EAC5D,IACEC,eAAA,GASED,KAAA,CATFC,eAAA;IACAC,aAAA,GAQEF,KAAA,CARFE,aAAA;IACAC,UAAA,GAOEH,KAAA,CAPFG,UAAA;IACAC,YAAA,GAMEJ,KAAA,CANFI,YAAA;IACAC,QAAA,GAKEL,KAAA,CALFK,QAAA;IACAC,UAAA,GAIEN,KAAA,CAJFM,UAAA;IACAC,SAAA,GAGEP,KAAA,CAHFO,SAAA;IACAC,eAAA,GAEER,KAAA,CAFFQ,eAAA;IACAC,qBAAA,GACET,KAAA,CADFS,qBAAA;EAGF,IAAMC,YAAA,GAAehB,WAAA,CAAY,YAAM;IACrC,IAAIO,eAAA,oBAAAA,eAAA,CAAiBU,OAAA,EAAS;MAC5BV,eAAA,CAAgBU,OAAA,CAAQC,KAAA,CAAM;IAChC,WAAWT,UAAA,oBAAAA,UAAA,CAAYQ,OAAA,EAAS;MAC9B,IAAME,UAAA,GAAapB,eAAA,CAAgBU,UAAA,CAAWQ,OAAO;MACrD,IAAIE,UAAA,CAAWC,MAAA,KAAW,GAAG;QAC3BC,qBAAA,CAAsB,YAAM;UAnFpC,IAAAC,GAAA;UAoFU,CAAAA,GAAA,GAAAb,UAAA,CAAWQ,OAAA,KAAX,gBAAAK,GAAA,CAAoBJ,KAAA;QACtB,CAAC;MACH;IACF;EACF,GAAG,CAACX,eAAA,EAAiBE,UAAU,CAAC;EAEhC,IAAMc,cAAA,GAAiBvB,WAAA,CAAY,YAAM;IA1F3C,IAAAsB,GAAA;IA2FI,CAAAA,GAAA,GAAAd,aAAA,oBAAAA,aAAA,CAAeS,OAAA,KAAf,gBAAAK,GAAA,CAAwBJ,KAAA;EAC1B,GAAG,CAACV,aAAa,CAAC;EAElB,IAAMgB,WAAA,GAAcd,YAAA,IAAgB,CAACF,aAAA;EAErC,OACE,eAAAP,GAAA,CAACE,SAAA;IACCsB,UAAA,EAAYV,qBAAA;IACZD,eAAA,EAAAA,eAAA;IACAD,SAAA,EAAAA,SAAA;IACAa,QAAA,EAAUd,UAAA;IACVI,YAAA,EAAAA,YAAA;IACAO,cAAA,EAAAA,cAAA;IACAC,WAAA,EAAAA,WAAA;IAECb,QAAA,EAAAA;EAAA,CACH;AAEJ;AAEAN,SAAA,CAAUsB,WAAA,GAAc;AAExB,IAAOC,kBAAA,GAAQvB,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}