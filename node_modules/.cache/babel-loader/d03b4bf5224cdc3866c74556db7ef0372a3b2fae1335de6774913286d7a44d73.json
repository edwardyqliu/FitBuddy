{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"icon\", \"children\", \"isRound\", \"aria-label\"];\nimport { Button } from \"./chunk-UVUR7MCU.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(function (props, ref) {\n  var icon = props.icon,\n    children = props.children,\n    isRound = props.isRound,\n    ariaLabel = props[\"aria-label\"],\n    rest = _objectWithoutProperties(props, _excluded);\n  var element = icon || children;\n  var _children = isValidElement(element) ? cloneElement(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */jsx(Button, _objectSpread(_objectSpread({\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref: ref,\n    \"aria-label\": ariaLabel\n  }, rest), {}, {\n    children: _children\n  }));\n});\nIconButton.displayName = \"IconButton\";\nexport { IconButton };","map":{"version":3,"names":["forwardRef","cloneElement","isValidElement","jsx","IconButton","props","ref","icon","children","isRound","ariaLabel","rest","_objectWithoutProperties","_excluded","element","_children","focusable","Button","_objectSpread","padding","borderRadius","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/button/src/icon-button.tsx"],"sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport { cloneElement, isValidElement } from \"react\"\nimport { Button, ButtonProps } from \"./button\"\n\ntype OmittedProps =\n  | \"leftIcon\"\n  | \"rightIcon\"\n  | \"loadingText\"\n  | \"iconSpacing\"\n  | \"spinnerPlacement\"\n\ninterface BaseButtonProps extends Omit<ButtonProps, OmittedProps> {}\n\nexport interface IconButtonProps extends BaseButtonProps {\n  /**\n   * The icon to be used in the button.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * If `true`, the button will be perfectly round. Else, it'll be slightly round\n   *\n   * @default false\n   */\n  isRound?: boolean\n  /**\n   * A11y: A label that describes the button\n   */\n  \"aria-label\": string\n}\n\n/**\n * Icon button renders an icon within a button.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon-button\n */\nexport const IconButton = forwardRef<IconButtonProps, \"button\">(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props\n\n    /**\n     * Passing the icon as prop or children should work\n     */\n    const element = icon || children\n    const _children = isValidElement(element)\n      ? cloneElement(element as any, {\n          \"aria-hidden\": true,\n          focusable: false,\n        })\n      : null\n\n    return (\n      <Button\n        padding=\"0\"\n        borderRadius={isRound ? \"full\" : undefined}\n        ref={ref}\n        aria-label={ariaLabel}\n        {...rest}\n      >\n        {_children}\n      </Button>\n    )\n  },\n)\n\nIconButton.displayName = \"IconButton\"\n"],"mappings":";;;;;;;;AAAA,SAASA,UAAA,QAAkB;AAC3B,SAASC,YAAA,EAAcC,cAAA,QAAsB;AAmDvC,SAAAC,GAAA;AAhBC,IAAMC,UAAA,GAAaJ,UAAA,CACxB,UAACK,KAAA,EAAOC,GAAA,EAAQ;EACd,IAAQC,IAAA,GAA8DF,KAAA,CAA9DE,IAAA;IAAMC,QAAA,GAAwDH,KAAA,CAAxDG,QAAA;IAAUC,OAAA,GAA8CJ,KAAA,CAA9CI,OAAA;IAAuBC,SAAA,GAAuBL,KAAA,CAArC;IAA4BM,IAAA,GAAAC,wBAAA,CAASP,KAAA,EAAAQ,SAAA;EAKtE,IAAMC,OAAA,GAAUP,IAAA,IAAQC,QAAA;EACxB,IAAMO,SAAA,GAAYb,cAAA,CAAeY,OAAO,IACpCb,YAAA,CAAaa,OAAA,EAAgB;IAC3B,eAAe;IACfE,SAAA,EAAW;EACb,CAAC,IACD;EAEJ,OACE,eAAAb,GAAA,CAACc,MAAA,EAAAC,aAAA,CAAAA,aAAA;IACCC,OAAA,EAAQ;IACRC,YAAA,EAAcX,OAAA,GAAU,SAAS;IACjCH,GAAA,EAAAA,GAAA;IACA,cAAYI;EAAA,GACRC,IAAA;IAEHH,QAAA,EAAAO;EAAA,EACH;AAEJ,CACF;AAEAX,UAAA,CAAWiB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}