{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createForOfIteratorHelper from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _excluded = [\"children\", \"label\", \"shouldWrapChildren\", \"aria-label\", \"hasArrow\", \"bg\", \"portalProps\", \"background\", \"backgroundColor\", \"bgColor\", \"motionProps\"];\nimport { scale } from \"./chunk-XRZH7COS.mjs\";\nimport { useTooltip } from \"./chunk-AOADCYOE.mjs\";\n\n// src/tooltip.tsx\nimport { popperCSSVars } from \"@chakra-ui/popper\";\nimport { Portal } from \"@chakra-ui/portal\";\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig, useTheme, getCSSVar } from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object) {\n  var keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var clone = Object.assign({}, object);\n  var _iterator = _createForOfIteratorHelper(keysToOmit),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (key in clone) {\n        delete clone[key];\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return clone;\n}\n\n// ../../utilities/object-utils/src/pick.ts\nfunction pick(object, keysToPick) {\n  var result = {};\n  var _iterator2 = _createForOfIteratorHelper(keysToPick),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var key = _step2.value;\n      if (key in object) {\n        result[key] = object[key];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return result;\n}\n\n// src/tooltip.tsx\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { Children, cloneElement } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(motion.div);\nvar Tooltip = forwardRef(function (props, ref) {\n  var _a, _b;\n  var styles = useStyleConfig(\"Tooltip\", props);\n  var ownProps = omitThemingProps(props);\n  var theme = useTheme();\n  var children = ownProps.children,\n    label = ownProps.label,\n    shouldWrapChildren = ownProps.shouldWrapChildren,\n    ariaLabel = ownProps[\"aria-label\"],\n    hasArrow = ownProps.hasArrow,\n    bg = ownProps.bg,\n    portalProps = ownProps.portalProps,\n    background = ownProps.background,\n    backgroundColor = ownProps.backgroundColor,\n    bgColor = ownProps.bgColor,\n    motionProps = ownProps.motionProps,\n    rest = _objectWithoutProperties(ownProps, _excluded);\n  var userDefinedBg = (_b = (_a = background != null ? background : backgroundColor) != null ? _a : bg) != null ? _b : bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    var bgVar = getCSSVar(theme, \"colors\", userDefinedBg);\n    styles[popperCSSVars.arrowBg.var] = bgVar;\n  }\n  var tooltip = useTooltip(_objectSpread(_objectSpread({}, rest), {}, {\n    direction: theme.direction\n  }));\n  var shouldWrap = typeof children === \"string\" || shouldWrapChildren;\n  var trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n      display: \"inline-block\",\n      tabIndex: 0\n    }, tooltip.getTriggerProps()), {}, {\n      children: children\n    }));\n  } else {\n    var child = Children.only(children);\n    trigger = cloneElement(child, tooltip.getTriggerProps(child.props, child.ref));\n  }\n  var hasAriaLabel = !!ariaLabel;\n  var _tooltipProps = tooltip.getTooltipProps({}, ref);\n  var tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  var srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */jsx(Fragment, {\n      children: children\n    });\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [trigger, /* @__PURE__ */jsx(AnimatePresence, {\n      children: tooltip.isOpen && /* @__PURE__ */jsx(Portal, _objectSpread(_objectSpread({}, portalProps), {}, {\n        children: /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, tooltip.getTooltipPositionerProps()), {}, {\n          __css: {\n            zIndex: styles.zIndex,\n            pointerEvents: \"none\"\n          },\n          children: /* @__PURE__ */jsxs(MotionDiv, _objectSpread(_objectSpread(_objectSpread({\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\"\n          }, motionProps), tooltipProps), {}, {\n            __css: styles,\n            children: [label, hasAriaLabel && /* @__PURE__ */jsx(chakra.span, _objectSpread(_objectSpread({\n              srOnly: true\n            }, srOnlyProps), {}, {\n              children: ariaLabel\n            })), hasArrow && /* @__PURE__ */jsx(chakra.div, {\n              \"data-popper-arrow\": true,\n              className: \"chakra-tooltip__arrow-wrapper\",\n              children: /* @__PURE__ */jsx(chakra.div, {\n                \"data-popper-arrow-inner\": true,\n                className: \"chakra-tooltip__arrow\",\n                __css: {\n                  bg: styles.bg\n                }\n              })\n            })]\n          }))\n        }))\n      }))\n    })]\n  });\n});\nTooltip.displayName = \"Tooltip\";\nexport { Tooltip };","map":{"version":3,"names":["popperCSSVars","Portal","chakra","forwardRef","omitThemingProps","useStyleConfig","useTheme","getCSSVar","omit","object","keysToOmit","arguments","length","undefined","clone","Object","assign","_iterator","_createForOfIteratorHelper","_step","s","n","done","key","value","err","e","f","pick","keysToPick","result","_iterator2","_step2","AnimatePresence","motion","Children","cloneElement","Fragment","jsx","jsxs","MotionDiv","div","Tooltip","props","ref","_a","_b","styles","ownProps","theme","children","label","shouldWrapChildren","ariaLabel","hasArrow","bg","portalProps","background","backgroundColor","bgColor","motionProps","rest","_objectWithoutProperties","_excluded","userDefinedBg","bgVar","arrowBg","var","tooltip","useTooltip","_objectSpread","direction","shouldWrap","trigger","span","display","tabIndex","getTriggerProps","child","only","hasAriaLabel","_tooltipProps","getTooltipProps","tooltipProps","srOnlyProps","isOpen","getTooltipPositionerProps","__css","zIndex","pointerEvents","variants","scale","initial","animate","exit","srOnly","className","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/tooltip/src/tooltip.tsx","/Users/eyliu/Desktop/FitBuddy/node_modules/utilities/object-utils/src/omit.ts","/Users/eyliu/Desktop/FitBuddy/node_modules/utilities/object-utils/src/pick.ts"],"sourcesContent":["import { popperCSSVars } from \"@chakra-ui/popper\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  useTheme,\n  getCSSVar,\n} from \"@chakra-ui/system\"\nimport { omit, pick } from \"@chakra-ui/object-utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport { Children, cloneElement } from \"react\"\nimport { scale } from \"./tooltip.transition\"\nimport { useTooltip, UseTooltipProps } from \"./use-tooltip\"\n\nexport interface TooltipProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Tooltip\">,\n    UseTooltipProps {\n  /**\n   * The React component to use as the\n   * trigger for the tooltip\n   */\n  children: React.ReactNode\n  /**\n   * The label of the tooltip\n   */\n  label?: React.ReactNode\n  /**\n   * The accessible, human friendly label to use for\n   * screen readers.\n   *\n   * If passed, tooltip will show the content `label`\n   * but expose only `aria-label` to assistive technologies\n   */\n  \"aria-label\"?: string\n  /**\n   * If `true`, the tooltip will wrap its children\n   * in a `<span/>` with `tabIndex=0`\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true`, the tooltip will show an arrow tip\n   * @default false\n   */\n  hasArrow?: boolean\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst MotionDiv = chakra(motion.div)\n\n/**\n * Tooltips display informative text when users hover, focus on, or tap an element.\n *\n * @see Docs     https://chakra-ui.com/docs/overlay/tooltip\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/\n */\nexport const Tooltip = forwardRef<TooltipProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Tooltip\", props)\n  const ownProps = omitThemingProps(props)\n  const theme = useTheme()\n\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    ...rest\n  } = ownProps\n\n  const userDefinedBg = background ?? backgroundColor ?? bg ?? bgColor\n\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg\n    const bgVar = getCSSVar(theme, \"colors\", userDefinedBg)\n    ;(styles as any)[popperCSSVars.arrowBg.var] = bgVar\n  }\n  const tooltip = useTooltip({ ...rest, direction: theme.direction })\n\n  const shouldWrap = typeof children === \"string\" || shouldWrapChildren\n\n  let trigger: React.ReactElement\n\n  if (shouldWrap) {\n    trigger = (\n      <chakra.span\n        display=\"inline-block\"\n        tabIndex={0}\n        {...tooltip.getTriggerProps()}\n      >\n        {children}\n      </chakra.span>\n    )\n  } else {\n    /**\n     * Ensure tooltip has only one child node\n     */\n    const child = Children.only(children) as React.ReactElement & {\n      ref?: React.Ref<any>\n    }\n    trigger = cloneElement(\n      child,\n      tooltip.getTriggerProps(child.props, child.ref),\n    )\n  }\n\n  const hasAriaLabel = !!ariaLabel\n\n  const _tooltipProps = tooltip.getTooltipProps({}, ref)\n\n  const tooltipProps = hasAriaLabel\n    ? omit(_tooltipProps, [\"role\", \"id\"])\n    : _tooltipProps\n\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"])\n\n  /**\n   * If the `label` is empty, there's no point showing the tooltip.\n   * Let's simply return the children\n   */\n  if (!label) {\n    return <>{children}</>\n  }\n\n  return (\n    <>\n      {trigger}\n      <AnimatePresence>\n        {tooltip.isOpen && (\n          <Portal {...portalProps}>\n            <chakra.div\n              {...tooltip.getTooltipPositionerProps()}\n              __css={{\n                zIndex: styles.zIndex,\n                pointerEvents: \"none\",\n              }}\n            >\n              <MotionDiv\n                variants={scale}\n                initial=\"exit\"\n                animate=\"enter\"\n                exit=\"exit\"\n                {...motionProps}\n                {...(tooltipProps as any)}\n                __css={styles}\n              >\n                {label}\n                {hasAriaLabel && (\n                  <chakra.span srOnly {...srOnlyProps}>\n                    {ariaLabel}\n                  </chakra.span>\n                )}\n                {hasArrow && (\n                  <chakra.div\n                    data-popper-arrow\n                    className=\"chakra-tooltip__arrow-wrapper\"\n                  >\n                    <chakra.div\n                      data-popper-arrow-inner\n                      className=\"chakra-tooltip__arrow\"\n                      __css={{ bg: styles.bg }}\n                    />\n                  </chakra.div>\n                )}\n              </MotionDiv>\n            </chakra.div>\n          </Portal>\n        )}\n      </AnimatePresence>\n    </>\n  )\n})\n\nTooltip.displayName = \"Tooltip\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","export function pick<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToPick: K[],\n) {\n  const result = {} as {\n    [P in K]: T[P]\n  }\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key]\n    }\n  }\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}