{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallbackRef } from \"./chunk-KA2477BY.mjs\";\n\n// src/use-controllable.ts\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport { useCallback, useState } from \"react\";\nfunction useControllableProp(prop, state) {\n  var isControlled = prop !== void 0;\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction useControllableState(props) {\n  var valueProp = props.value,\n    defaultValue = props.defaultValue,\n    onChange = props.onChange,\n    _props$shouldUpdate = props.shouldUpdate,\n    shouldUpdate = _props$shouldUpdate === void 0 ? function (prev, next) {\n      return prev !== next;\n    } : _props$shouldUpdate;\n  var onChangeProp = useCallbackRef(onChange);\n  var shouldUpdateProp = useCallbackRef(shouldUpdate);\n  var _useState = useState(defaultValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    valueState = _useState2[0],\n    setValue = _useState2[1];\n  var isControlled = valueProp !== void 0;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = useCallback(function (next) {\n    var nextValue = runIfFn(next, value);\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}\nexport { useControllableProp, useControllableState };","map":{"version":3,"names":["runIfFn","useCallback","useState","useControllableProp","prop","state","isControlled","value","useControllableState","props","valueProp","defaultValue","onChange","_props$shouldUpdate","shouldUpdate","prev","next","onChangeProp","useCallbackRef","shouldUpdateProp","_useState","_useState2","_slicedToArray","valueState","setValue","updateValue","nextValue"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/hooks/src/use-controllable.ts"],"sourcesContent":["import { runIfFn } from \"@chakra-ui/utils\"\nimport { useCallback, useState } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const isControlled = prop !== undefined\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state\n  return [isControlled, value] as const\n}\n\nexport interface UseControllableStateProps<T> {\n  /**\n   * The value to used in controlled mode\n   */\n  value?: T\n  /**\n   * The initial value to be used, in uncontrolled mode\n   */\n  defaultValue?: T | (() => T)\n  /**\n   * The callback fired when the value changes\n   */\n  onChange?: (value: T) => void\n  /**\n   * The function that determines if the state should be updated\n   */\n  shouldUpdate?: (prev: T, next: T) => boolean\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next,\n  } = props\n  const onChangeProp = useCallbackRef(onChange)\n  const shouldUpdateProp = useCallbackRef(shouldUpdate)\n\n  const [valueState, setValue] = useState(defaultValue as T)\n\n  const isControlled = valueProp !== undefined\n  const value = isControlled ? (valueProp as T) : valueState\n\n  const updateValue = useCallback(\n    (next: React.SetStateAction<T>) => {\n      const nextValue = runIfFn(next, value)\n\n      if (!shouldUpdateProp(value, nextValue)) {\n        return\n      }\n\n      if (!isControlled) {\n        setValue(nextValue)\n      }\n\n      onChangeProp(nextValue)\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp],\n  )\n\n  return [value, updateValue] as [T, React.Dispatch<React.SetStateAction<T>>]\n}\n"],"mappings":";;;;;;AAAA,SAASA,OAAA,QAAe;AACxB,SAASC,WAAA,EAAaC,QAAA,QAAgB;AAG/B,SAASC,oBAAuBC,IAAA,EAAqBC,KAAA,EAAU;EACpE,IAAMC,YAAA,GAAeF,IAAA,KAAS;EAC9B,IAAMG,KAAA,GAAQD,YAAA,IAAgB,OAAOF,IAAA,KAAS,cAAcA,IAAA,GAAOC,KAAA;EACnE,OAAO,CAACC,YAAA,EAAcC,KAAK;AAC7B;AAyBO,SAASC,qBAAwBC,KAAA,EAAqC;EAC3E,IACSC,SAAA,GAILD,KAAA,CAJFF,KAAA;IACAI,YAAA,GAGEF,KAAA,CAHFE,YAAA;IACAC,QAAA,GAEEH,KAAA,CAFFG,QAAA;IAAAC,mBAAA,GAEEJ,KAAA,CADFK,YAAA;IAAAA,YAAA,GAAAD,mBAAA,cAAe,UAACE,IAAA,EAAMC,IAAA;MAAA,OAASD,IAAA,KAASC,IAAA;IAAA,IAAAH,mBAAA;EAE1C,IAAMI,YAAA,GAAeC,cAAA,CAAeN,QAAQ;EAC5C,IAAMO,gBAAA,GAAmBD,cAAA,CAAeJ,YAAY;EAEpD,IAAAM,SAAA,GAA+BlB,QAAA,CAASS,YAAiB;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,UAAA,GAAAF,UAAA;IAAYG,QAAQ,GAAAH,UAAA;EAE3B,IAAMf,YAAA,GAAeI,SAAA,KAAc;EACnC,IAAMH,KAAA,GAAQD,YAAA,GAAgBI,SAAA,GAAkBa,UAAA;EAEhD,IAAME,WAAA,GAAcxB,WAAA,CAClB,UAACe,IAAA,EAAkC;IACjC,IAAMU,SAAA,GAAY1B,OAAA,CAAQgB,IAAA,EAAMT,KAAK;IAErC,IAAI,CAACY,gBAAA,CAAiBZ,KAAA,EAAOmB,SAAS,GAAG;MACvC;IACF;IAEA,IAAI,CAACpB,YAAA,EAAc;MACjBkB,QAAA,CAASE,SAAS;IACpB;IAEAT,YAAA,CAAaS,SAAS;EACxB,GACA,CAACpB,YAAA,EAAcW,YAAA,EAAcV,KAAA,EAAOY,gBAAgB,CACtD;EAEA,OAAO,CAACZ,KAAA,EAAOkB,WAAW;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}