{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"descendants\"];\nimport { MenuDescendantsProvider, MenuProvider, useMenu } from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { omitThemingProps, useMultiStyleConfig, useTheme } from \"@chakra-ui/system\";\nimport { runIfFn } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar _createContext = createContext({\n    name: \"MenuStylesContext\",\n    errorMessage: \"useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Menu />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  MenuStylesProvider = _createContext2[0],\n  useMenuStyles = _createContext2[1];\nvar Menu = function Menu(props) {\n  var children = props.children;\n  var styles = useMultiStyleConfig(\"Menu\", props);\n  var ownProps = omitThemingProps(props);\n  var _useTheme = useTheme(),\n    direction = _useTheme.direction;\n  var _useMenu = useMenu(_objectSpread(_objectSpread({}, ownProps), {}, {\n      direction: direction\n    })),\n    descendants = _useMenu.descendants,\n    ctx = _objectWithoutProperties(_useMenu, _excluded);\n  var context = useMemo(function () {\n    return ctx;\n  }, [ctx]);\n  var isOpen = context.isOpen,\n    onClose = context.onClose,\n    forceUpdate = context.forceUpdate;\n  return /* @__PURE__ */jsx(MenuDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(MenuProvider, {\n      value: context,\n      children: /* @__PURE__ */jsx(MenuStylesProvider, {\n        value: styles,\n        children: runIfFn(children, {\n          isOpen: isOpen,\n          onClose: onClose,\n          forceUpdate: forceUpdate\n        })\n      })\n    })\n  });\n};\nMenu.displayName = \"Menu\";\nexport { useMenuStyles, Menu };","map":{"version":3,"names":["createContext","omitThemingProps","useMultiStyleConfig","useTheme","runIfFn","useMemo","jsx","_createContext","name","errorMessage","_createContext2","_slicedToArray","MenuStylesProvider","useMenuStyles","Menu","props","children","styles","ownProps","_useTheme","direction","_useMenu","useMenu","_objectSpread","descendants","ctx","_objectWithoutProperties","_excluded","context","isOpen","onClose","forceUpdate","MenuDescendantsProvider","value","MenuProvider","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/menu/src/menu.tsx"],"sourcesContent":["import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  UseMenuProps,\n} from \"./use-menu\"\n\nconst [MenuStylesProvider, useMenuStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `,\n})\n\nexport { useMenuStyles }\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n *\n * @see Docs https://chakra-ui.com/docs/components/menu\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <MenuStylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </MenuStylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nMenu.displayName = \"Menu\"\n"],"mappings":";;;;;;;;;AAAA,SAASA,aAAA,QAAqB;AAC9B,SACEC,gBAAA,EAGAC,mBAAA,EACAC,QAAA,QACK;AACP,SAASC,OAAA,QAAe;AACxB,SAASC,OAAA,QAAe;AA+ChB,SAAAC,GAAA;AAvCR,IAAAC,cAAA,GAA4CP,aAAA,CAE1C;IACAQ,IAAA,qBAAM;IACNC,YAAA;EACF,CAAC;EAAAC,eAAA,GAAAC,cAAA,CAAAJ,cAAA;EALMK,kBAAA,GAAAF,eAAA;EAAoBG,aAAa,GAAAH,eAAA;AAyBjC,IAAMI,IAAA,GAA4B,SAA5BA,KAA6BC,KAAA,EAAU;EAClD,IAAQC,QAAA,GAAaD,KAAA,CAAbC,QAAA;EAER,IAAMC,MAAA,GAASf,mBAAA,CAAoB,QAAQa,KAAK;EAChD,IAAMG,QAAA,GAAWjB,gBAAA,CAAiBc,KAAK;EACvC,IAAAI,SAAA,GAAsBhB,QAAA,CAAS;IAAvBiB,SAAA,GAAAD,SAAA,CAAAC,SAAA;EACR,IAAAC,QAAA,GAAgCC,OAAA,CAAAC,aAAA,CAAAA,aAAA,KAAaL,QAAA;MAAUE,SAAA,EAAAA;IAAA,EAAW;IAA1DI,WAAA,GAAAH,QAAA,CAAAG,WAAA;IAAgBC,GAAA,GAAAC,wBAAA,CAAAL,QAAA,EAAAM,SAAA;EACxB,IAAMC,OAAA,GAAUvB,OAAA,CAAQ;IAAA,OAAMoB,GAAA;EAAA,GAAK,CAACA,GAAG,CAAC;EAExC,IAAQI,MAAA,GAAiCD,OAAA,CAAjCC,MAAA;IAAQC,OAAA,GAAyBF,OAAA,CAAzBE,OAAA;IAASC,WAAA,GAAgBH,OAAA,CAAhBG,WAAA;EAEzB,OACE,eAAAzB,GAAA,CAAC0B,uBAAA;IAAwBC,KAAA,EAAOT,WAAA;IAC9BR,QAAA,iBAAAV,GAAA,CAAC4B,YAAA;MAAaD,KAAA,EAAOL,OAAA;MACnBZ,QAAA,iBAAAV,GAAA,CAACM,kBAAA;QAAmBqB,KAAA,EAAOhB,MAAA;QACxBD,QAAA,EAAAZ,OAAA,CAAQY,QAAA,EAAU;UAAEa,MAAA,EAAAA,MAAA;UAAQC,OAAA,EAAAA,OAAA;UAASC,WAAA,EAAAA;QAAY,CAAC;MAAA,CACrD;IAAA,CACF;EAAA,CACF;AAEJ;AAEAjB,IAAA,CAAKqB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}