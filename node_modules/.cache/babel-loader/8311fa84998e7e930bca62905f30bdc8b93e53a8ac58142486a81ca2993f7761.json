{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"children\", \"motionProps\", \"containerProps\"];\nimport { useDrawerContext } from \"./chunk-MCHDHFCQ.mjs\";\nimport { ModalFocusScope } from \"./chunk-NABYTFTG.mjs\";\nimport { useModalContext, useModalStyles } from \"./chunk-MSA2NPQT.mjs\";\n\n// src/drawer-content.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { Slide } from \"@chakra-ui/transition\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MotionDiv = chakra(Slide);\nvar DrawerContent = forwardRef(function (props, ref) {\n  var className = props.className,\n    children = props.children,\n    motionProps = props.motionProps,\n    rootProps = props.containerProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _useModalContext = useModalContext(),\n    getDialogProps = _useModalContext.getDialogProps,\n    getDialogContainerProps = _useModalContext.getDialogContainerProps,\n    isOpen = _useModalContext.isOpen;\n  var dialogProps = getDialogProps(rest, ref);\n  var containerProps = getDialogContainerProps(rootProps);\n  var _className = cx(\"chakra-modal__content\", className);\n  var styles = useModalStyles();\n  var dialogStyles = _objectSpread({\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0\n  }, styles.dialog);\n  var dialogContainerStyles = _objectSpread({\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0\n  }, styles.dialogContainer);\n  var _useDrawerContext = useDrawerContext(),\n    placement = _useDrawerContext.placement;\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({}, containerProps), {}, {\n      className: \"chakra-modal__content-container\",\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(MotionDiv, _objectSpread(_objectSpread({\n        motionProps: motionProps,\n        direction: placement,\n        in: isOpen,\n        className: _className\n      }, dialogProps), {}, {\n        __css: dialogStyles,\n        children: children\n      }))\n    }))\n  });\n});\nDrawerContent.displayName = \"DrawerContent\";\nexport { DrawerContent };","map":{"version":3,"names":["cx","chakra","forwardRef","Slide","jsx","MotionDiv","DrawerContent","props","ref","className","children","motionProps","rootProps","containerProps","rest","_objectWithoutProperties","_excluded","_useModalContext","useModalContext","getDialogProps","getDialogContainerProps","isOpen","dialogProps","_className","styles","useModalStyles","dialogStyles","_objectSpread","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","_useDrawerContext","useDrawerContext","placement","ModalFocusScope","div","__css","direction","in","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/modal/src/drawer-content.tsx"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { Slide } from \"@chakra-ui/transition\"\nimport type { HTMLMotionProps } from \"framer-motion\"\n\nimport { useDrawerContext } from \"./drawer\"\nimport { useModalContext, useModalStyles } from \"./modal\"\nimport { ModalFocusScope } from \"./modal-focus\"\n\nconst MotionDiv = chakra(Slide)\n\nexport interface DrawerContentProps extends HTMLChakraProps<\"section\"> {\n  /**\n   * The props to forward to the modal's content wrapper\n   */\n  containerProps?: HTMLChakraProps<\"div\">\n  /**\n   * The custom framer-motion transition to use for the modal\n   */\n  motionProps?: HTMLMotionProps<\"section\">\n}\n\n/**\n * ModalContent is used to group modal's content. It has all the\n * necessary `aria-*` properties to indicate that it is a modal\n */\nexport const DrawerContent = forwardRef<DrawerContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      motionProps,\n      containerProps: rootProps,\n      ...rest\n    } = props\n\n    const { getDialogProps, getDialogContainerProps, isOpen } =\n      useModalContext()\n\n    const dialogProps = getDialogProps(rest, ref) as any\n    const containerProps = getDialogContainerProps(rootProps)\n\n    const _className = cx(\"chakra-modal__content\", className)\n\n    const styles = useModalStyles()\n\n    const dialogStyles: SystemStyleObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog,\n    }\n\n    const dialogContainerStyles: SystemStyleObject = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer,\n    }\n\n    const { placement } = useDrawerContext()\n\n    return (\n      <ModalFocusScope>\n        <chakra.div\n          {...containerProps}\n          className=\"chakra-modal__content-container\"\n          __css={dialogContainerStyles}\n        >\n          <MotionDiv\n            motionProps={motionProps}\n            direction={placement}\n            in={isOpen}\n            className={_className}\n            {...dialogProps}\n            __css={dialogStyles}\n          >\n            {children}\n          </MotionDiv>\n        </chakra.div>\n      </ModalFocusScope>\n    )\n  },\n)\n\nDrawerContent.displayName = \"DrawerContent\"\n"],"mappings":";;;;;;;;;;AAAA,SAASA,EAAA,QAAU;AACnB,SACEC,MAAA,EACAC,UAAA,QAGK;AACP,SAASC,KAAA,QAAa;AAwEZ,SAAAC,GAAA;AAjEV,IAAMC,SAAA,GAAYJ,MAAA,CAAOE,KAAK;AAiBvB,IAAMG,aAAA,GAAgBJ,UAAA,CAC3B,UAACK,KAAA,EAAOC,GAAA,EAAQ;EACd,IACEC,SAAA,GAKEF,KAAA,CALFE,SAAA;IACAC,QAAA,GAIEH,KAAA,CAJFG,QAAA;IACAC,WAAA,GAGEJ,KAAA,CAHFI,WAAA;IACgBC,SAAA,GAEdL,KAAA,CAFFM,cAAA;IACGC,IAAA,GAAAC,wBAAA,CACDR,KAAA,EAAAS,SAAA;EAEJ,IAAAC,gBAAA,GACEC,eAAA,CAAgB;IADVC,cAAA,GAAAF,gBAAA,CAAAE,cAAA;IAAgBC,uBAAA,GAAAH,gBAAA,CAAAG,uBAAA;IAAyBC,MAAA,GAAAJ,gBAAA,CAAAI,MAAA;EAGjD,IAAMC,WAAA,GAAcH,cAAA,CAAeL,IAAA,EAAMN,GAAG;EAC5C,IAAMK,cAAA,GAAiBO,uBAAA,CAAwBR,SAAS;EAExD,IAAMW,UAAA,GAAavB,EAAA,CAAG,yBAAyBS,SAAS;EAExD,IAAMe,MAAA,GAASC,cAAA,CAAe;EAE9B,IAAMC,YAAA,GAAAC,aAAA;IACJC,OAAA,EAAS;IACTC,aAAA,EAAe;IACfC,QAAA,EAAU;IACVC,KAAA,EAAO;IACPC,OAAA,EAAS;EAAA,GACNR,MAAA,CAAOS,MAAA,CACZ;EAEA,IAAMC,qBAAA,GAAAP,aAAA;IACJC,OAAA,EAAS;IACTG,KAAA,EAAO;IACPI,MAAA,EAAQ;IACRL,QAAA,EAAU;IACVM,IAAA,EAAM;IACNC,GAAA,EAAK;EAAA,GACFb,MAAA,CAAOc,eAAA,CACZ;EAEA,IAAAC,iBAAA,GAAsBC,gBAAA,CAAiB;IAA/BC,SAAA,GAAAF,iBAAA,CAAAE,SAAA;EAER,OACE,eAAArC,GAAA,CAACsC,eAAA;IACChC,QAAA,iBAAAN,GAAA,CAACH,MAAA,CAAO0C,GAAA,EAAAhB,aAAA,CAAAA,aAAA,KACFd,cAAA;MACJJ,SAAA,EAAU;MACVmC,KAAA,EAAOV,qBAAA;MAEPxB,QAAA,iBAAAN,GAAA,CAACC,SAAA,EAAAsB,aAAA,CAAAA,aAAA;QACChB,WAAA,EAAAA,WAAA;QACAkC,SAAA,EAAWJ,SAAA;QACXK,EAAA,EAAIzB,MAAA;QACJZ,SAAA,EAAWc;MAAA,GACPD,WAAA;QACJsB,KAAA,EAAOlB,YAAA;QAENhB,QAAA,EAAAA;MAAA,EACH;IAAA,EACF;EAAA,CACF;AAEJ,CACF;AAEAJ,aAAA,CAAcyC,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}