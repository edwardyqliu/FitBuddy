{"ast":null,"code":"'use client';\n\n// src/container.tsx\nimport _objectSpread from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/eyliu/Desktop/FitBuddy/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\", \"centerContent\"];\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n    className = _omitThemingProps.className,\n    centerContent = _omitThemingProps.centerContent,\n    rest = _objectWithoutProperties(_omitThemingProps, _excluded);\n  var styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */jsx(chakra.div, _objectSpread(_objectSpread({\n    ref: ref,\n    className: cx(\"chakra-container\", className)\n  }, rest), {}, {\n    __css: _objectSpread(_objectSpread({}, styles), centerContent && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    })\n  }));\n});\nContainer.displayName = \"Container\";\nexport { Container };","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","jsx","Container","Container2","props","ref","_omitThemingProps","className","centerContent","rest","_objectWithoutProperties","_excluded","styles","div","_objectSpread","__css","display","flexDirection","alignItems","displayName"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/@chakra-ui/layout/src/container.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n"],"mappings":";;;;;;AAAA,SACEA,MAAA,EACAC,UAAA,EACAC,gBAAA,EAEAC,cAAA,QAEK;AACP,SAASC,EAAA,QAAU;AAiCf,SAAAC,GAAA;AATG,IAAMC,SAAA,GAAYL,UAAA,CAAkC,SAASM,WAClEC,KAAA,EACAC,GAAA,EACA;EACA,IAAAC,iBAAA,GAA8CR,gBAAA,CAAiBM,KAAK;IAA5DG,SAAA,GAAAD,iBAAA,CAAAC,SAAA;IAAWC,aAAA,GAAAF,iBAAA,CAAAE,aAAA;IAAkBC,IAAA,GAAAC,wBAAA,CAAAJ,iBAAA,EAAAK,SAAA;EAErC,IAAMC,MAAA,GAASb,cAAA,CAAe,aAAaK,KAAK;EAEhD,OACE,eAAAH,GAAA,CAACL,MAAA,CAAOiB,GAAA,EAAAC,aAAA,CAAAA,aAAA;IACNT,GAAA,EAAAA,GAAA;IACAE,SAAA,EAAWP,EAAA,CAAG,oBAAoBO,SAAS;EAAA,GACvCE,IAAA;IACJM,KAAA,EAAAD,aAAA,CAAAA,aAAA,KACKF,MAAA,GACCJ,aAAA,IAAiB;MACnBQ,OAAA,EAAS;MACTC,aAAA,EAAe;MACfC,UAAA,EAAY;IACd;EACF,EACF;AAEJ,CAAC;AAEDhB,SAAA,CAAUiB,WAAA,GAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}