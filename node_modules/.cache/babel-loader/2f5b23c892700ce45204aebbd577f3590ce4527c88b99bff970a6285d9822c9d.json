{"ast":null,"code":"import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nvar maxElapsed = 50;\nvar createAxisInfo = function createAxisInfo() {\n  return {\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0\n  };\n};\nvar createScrollInfo = function createScrollInfo() {\n  return {\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo()\n  };\n};\nvar keys = {\n  x: {\n    length: \"Width\",\n    position: \"Left\"\n  },\n  y: {\n    length: \"Height\",\n    position: \"Top\"\n  }\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n  var axis = info[axisName];\n  var _keys$axisName = keys[axisName],\n    length = _keys$axisName.length,\n    position = _keys$axisName.position;\n  var prev = axis.current;\n  var prevTime = info.time;\n  axis.current = element[\"scroll\" + position];\n  axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n  axis.offset.length = 0;\n  axis.offset[0] = 0;\n  axis.offset[1] = axis.scrollLength;\n  axis.progress = progress(0, axis.scrollLength, axis.current);\n  var elapsed = time - prevTime;\n  axis.velocity = elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n  updateAxisInfo(element, \"x\", info, time);\n  updateAxisInfo(element, \"y\", info, time);\n  info.time = time;\n}\nexport { createScrollInfo, updateScrollInfo };","map":{"version":3,"names":["progress","velocityPerSecond","maxElapsed","createAxisInfo","current","offset","scrollLength","targetOffset","targetLength","containerLength","velocity","createScrollInfo","time","x","y","keys","length","position","updateAxisInfo","element","axisName","info","axis","_keys$axisName","prev","prevTime","elapsed","updateScrollInfo"],"sources":["/Users/eyliu/Desktop/FitBuddy/node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs"],"sourcesContent":["import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[\"scroll\" + position];\n    axis.scrollLength = element[\"scroll\" + length] - element[\"client\" + length];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,iBAAiB,QAAQ,wCAAwC;;AAE1E;AACA;AACA;AACA,IAAMC,UAAU,GAAG,EAAE;AACrB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAAU;IAC1BC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE,EAAE;IACVL,QAAQ,EAAE,CAAC;IACXM,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE,CAAC;IAClBC,QAAQ,EAAE;EACd,CAAC;AAAA,CAAC;AACF,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;EAAA,OAAU;IAC5BC,IAAI,EAAE,CAAC;IACPC,CAAC,EAAEV,cAAc,CAAC,CAAC;IACnBW,CAAC,EAAEX,cAAc,CAAC;EACtB,CAAC;AAAA,CAAC;AACF,IAAMY,IAAI,GAAG;EACTF,CAAC,EAAE;IACCG,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE;EACd,CAAC;EACDH,CAAC,EAAE;IACCE,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE;EACd;AACJ,CAAC;AACD,SAASC,cAAcA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAET,IAAI,EAAE;EACnD,IAAMU,IAAI,GAAGD,IAAI,CAACD,QAAQ,CAAC;EAC3B,IAAAG,cAAA,GAA6BR,IAAI,CAACK,QAAQ,CAAC;IAAnCJ,MAAM,GAAAO,cAAA,CAANP,MAAM;IAAEC,QAAQ,GAAAM,cAAA,CAARN,QAAQ;EACxB,IAAMO,IAAI,GAAGF,IAAI,CAAClB,OAAO;EACzB,IAAMqB,QAAQ,GAAGJ,IAAI,CAACT,IAAI;EAC1BU,IAAI,CAAClB,OAAO,GAAGe,OAAO,CAAC,QAAQ,GAAGF,QAAQ,CAAC;EAC3CK,IAAI,CAAChB,YAAY,GAAGa,OAAO,CAAC,QAAQ,GAAGH,MAAM,CAAC,GAAGG,OAAO,CAAC,QAAQ,GAAGH,MAAM,CAAC;EAC3EM,IAAI,CAACjB,MAAM,CAACW,MAAM,GAAG,CAAC;EACtBM,IAAI,CAACjB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;EAClBiB,IAAI,CAACjB,MAAM,CAAC,CAAC,CAAC,GAAGiB,IAAI,CAAChB,YAAY;EAClCgB,IAAI,CAACtB,QAAQ,GAAGA,QAAQ,CAAC,CAAC,EAAEsB,IAAI,CAAChB,YAAY,EAAEgB,IAAI,CAAClB,OAAO,CAAC;EAC5D,IAAMsB,OAAO,GAAGd,IAAI,GAAGa,QAAQ;EAC/BH,IAAI,CAACZ,QAAQ,GACTgB,OAAO,GAAGxB,UAAU,GACd,CAAC,GACDD,iBAAiB,CAACqB,IAAI,CAAClB,OAAO,GAAGoB,IAAI,EAAEE,OAAO,CAAC;AAC7D;AACA,SAASC,gBAAgBA,CAACR,OAAO,EAAEE,IAAI,EAAET,IAAI,EAAE;EAC3CM,cAAc,CAACC,OAAO,EAAE,GAAG,EAAEE,IAAI,EAAET,IAAI,CAAC;EACxCM,cAAc,CAACC,OAAO,EAAE,GAAG,EAAEE,IAAI,EAAET,IAAI,CAAC;EACxCS,IAAI,CAACT,IAAI,GAAGA,IAAI;AACpB;AAEA,SAASD,gBAAgB,EAAEgB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}